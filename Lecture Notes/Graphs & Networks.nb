(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    395910,       7394]
NotebookOptionsPosition[    350014,       6467]
NotebookOutlinePosition[    383261,       7208]
CellTagsIndexPosition[    383181,       7203]
WindowTitle->Graphs and Networks
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"60bc568f-b20e-4b9a-b496-b94f48bda20e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3T9M3EyfwPFXd1dceVX6a9NScGWygPJnwwaWhH+bB4lX99zLNZxETjqh
SGlokBAFSBSkiBDFFigpghRpCyIkkCKQHhqaNDQUNBQUaSgofre7BLBnxvZ4
157xw/O19HmiJ9m1vTPjmZ/H45l///v/VP/rn/72t7+9/dfmf6rT//d4bm56
fuTfmv/zevbtf/9j9vf/fDb7v7//4/e5//j7Pzf/crrppPn5f2n+KWxsbGxs
bGxsbGxs+W1//AYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAIAC+7lXC7H7XvOzu3ffuTy0PN5hTS4Cx7pKcZ4X
jVHZX3spG+/Lsjp/bX2hIo0Pr+R0x/a8g97c/YbdFL/Bdp+d+P6mq31eHpq+
n96V1XmlTItWGmd1PtblNG35qoTK18ZiRb7VR+V8L8XvPwyfZ5oyfuPSOu19
pbHPvM3jGku336yuM2dlMi79v0/Ij3pVthcHb4+xOv9C6ivDcvx1wnI/3del
9mU+Kb2ybCN8HC+PdgmAb1dfKvLg4aOAJ3JicX2ff3gW+l7P2xGL49XkU+1R
6HvbX5Pq1ZocrbyQqd5HynnqespPpP5x1Dq+OV7oD32/f/5V1+mp7jO13rL8
7HafvSWZmn4mGysjcv69g99xOCoz2j6fy3kGaTGzMtZBuo7JnPY7++RoL5tr
4HSzYlW+qtNl2f8ymfy73/eFvrdaT/5OyPdXUrUsl77S2Gfe5nGNebnOHJZJ
k4svVVma7kv+naWBdr0aW+a7rUuVMv+g9MKYR2b5tRE+jpdHuwSgAJr13FSo
jijJt53k732bLSl1clkuEo83LkuhOqpfjmLaqaudEZmzqNM0I2U5sWj/jt+H
67VqFvH2+y5jgbLeznS3z8eytPI61W+4qJeN+0m+N7I4b8PvS/Jz64XhfPrk
oOt4e1I+zZRSp+nU26HY36D+7k7i7eA1GVcufaWxz7zN4xrzcZ25LJPqMbZn
LeJsRU9tUM4i+mK6rkvVdsiyLOXdRvg4Xh7tEoAimJT1UrhuSI4PxmVBq3P6
ZH834Vh7I1ofRlSMfvl1SPq7aVMfDshBwvkUMt7u1e9but5n+7fZPH9oeSON
mcfmNn0hXTxhPu/H0miki9u1e7tf5a27/u3o32mlXJYzy9/tPN52kMY+8zaP
a8z9dea2TN46HJPVcjdp91R+GPIm83jbon/bRRvh43jE28D9dfA23OZNvU+I
qxpD0mOoT5Y248f6XSp9Wf1RY1B2quG4PNAOry5X2+Pirlr9LK2x4I1R+bb4
PKIefCLHMX0KTuLtkRdytPVKDjZtjDQ/O649e1T32TNdaabBuJx+Hbt11hiT
k+ZxthfLMlMypcUjWbeJ+74bxpLctrXpxpRExS+p4nbT2JZfZaGbePti09SH
3y8ba6/k/Nf44aub8rVcNpTHAflh2dfnPt7OP4195m0e15jz68xxmbw2ERlr
z72tyNGX8dtx05d7k3JSH5KFETX+75P9Hf2eynm87aiN8HE84m3g/jpTxmI/
qFVi3306W3tqrLMj4+dfThYHQp9f+DBu+FxNNgxtQqvti431vo/J+oihfpt+
GTl2zkW8XU26d8lpn+dbL/X2weIZ7cXm88B3SrIwG86zTynGlNyet/ospPdZ
cj+c8XyyircNZSyxb7Am+++f/Pp8a2xN9LtQXuJtx2nsM2/zuMZcX2euy2TL
wbxhDEnpmRzvxl/TJ2t3+VT/bD6G23jbXRvh43jE28D9dfX1Zbi/OrbNDDzz
1NrauP7P1veC/ejm8cA/6/p4zp5m/WQ398GksX6rf8mpjSj4PvW0TBrz3Myj
6UB/VqnZ3jeGQ2UjTWwT93x+I6LdVs9nezrq+XoX8fb310q/6mNpWLyz0HL2
sSKfEp7jFKF/O+809pm3ecUj7q4z92VSdgzPJG3Gn/xy0byvqH+Mfh/WZbzt
so3wcTzibeAe057r9sWMMxuTd4HPTk0H64a4dy0nZDX0/HVAfmjP1WpSV+um
Zux/mua3aO1Wqz9hyOr58X2Lt1vpua70y8TGfs20C7Z5188rJsPvuKYYUxI6
71K/VHuD+64m70Md759ZvK3MhZC2jKXML2fxtsM09pm3RYu3U19nHsrkvjZO
fsBuHEXuaWcu89Hxtts2wv3xiLeB+02vU9a3zPffV41gX3ifNOpDoXZi4WNE
P4vanpQH9frU0AcTub8YJ8tPwnVbxP1DsWLjPPY5KavKM4i4OODiY/j5/urm
9WcP3oafQ3+K6ZuJPu9+WZgJ7id53snQuKXeAVmd7Q/laTfxdnhOnv5cYw93
/dvu0thn3hYv3k53nTkvk3vqvh/JXEdzN+aYJ7bxtuM2wvnxcizfAIpBnTN4
ZtE83+rpSrCdfCbnh+OyEPhe/6y5b+vy82BiHXKq1Ul2c4FrDH1nprHixYqN
89hnLcXcM+rz/bu5GtU522yPHz7vAdmvV0Jt1008H3XuGyPBcjUsR6Hx/1nG
2834I6K8Z5Ff7uJtd2nsM2+LF2+nuc7cl0l1rYSs+7YzyRPLeNt1G+H6eHmW
bwDFoL4b3zNjet6ljO+dftn+++1a4O96nxvHBJ6uhOutJa2PQJ8Lq/O5tfR9
md7lLFZsnMc+J2QpFAfEzKGttne1yl3+q+ONLN+JU/tAj/eUMUVx7w3tDIfe
71/fmlD62bt7X1J9/t+ObxaqHa+RGJdfLvu3XaWxz7wtXryd4jrzUCb3lfmn
ovpE/KSducyb423XbYT7NinP8g2gIJQ20DxONzx2+6YP/Eeob8o8hjs8ftA0
T68+D3jUmBYb2hwqhrm+ixUbZ79PfR6Z6DjmXBlL8m4t2PeitxVx7/uYz7t5
7MPf5GQhHKdFnc/JcrBMPZFTbY6ALucDNK7p86g9tuHTx9GuYhx/8ba7NPaZ
t87mJ8nhOnNfJvU4fr2e/brmep6k7Js/fG0Rb7tuI9y3Sd2UQwB/FmPKGjZ6
m9GaxyRYD9zMQ6COFdGfk6n1luGZnOF5ajd1mzrXt2m8eJFi46z3ebY5qM9H
EDnP4xvZrgU/W9LWLlLjcZtz0GKy1jNsZTxkOK6/Ky/BvtLr/rhs4+3ktUX6
ZGmxKmcdPHf3Gm87SmOfeavNjdL7ROorFakvJliuploXNPvrzEOZNMynn7o8
dlDmW/cI64uDsrFgaV6PRbW8ct1GeGiTOi2HAP5M9Pm5NpS6JTwmJDAGUJnX
omdmOLxv5d8fjBjaI61u6y6e+qn1FenzobhaX7K/3CfVWCXpKT0zzNdi3mcr
Rrlq5tfl99ovb9rrYPzcHZfjjy/lnbZGxbXI9xz3LN5lVT/zMHlMiRaTtfNT
ia0MZcF8X6f203Ubb1+fS8NiXeuZ2UE5bti3s17jbUdp7DNvO18HspRqnfjM
rzMfZVK7bjuYq7CDMt81q3g75zbCQ5tkSkvibeD++aGsRzO3HHwmqMTjobZU
md9EGd97+aUSrj9Mz38zrtu08TGGdqZY67lHt4NZtGXvlqOf76rvU5nfldXn
sEmaZ9kck6nPVfXxR6Hv3ZalrPu375zVX8pcxFqBofIx04xxdtKOo/ERb+ef
xj7zNo9rzMV15qVMZl2v5ph2IQ7i7cQ2wkObZEpL4m3g/rncCo8Lac0bcPvv
h6MyF/i3qYVwu/IjNHYzPD5bXb/SGH9kXLddfg7H+MWPt6P73rpryx7Lesw6
Fa1Y51Mt/PltbWz9tdDcNA+T1xONisnUd/XD8f14aFzT3frg+cXb197IaT26
zzJoISGmKkK8nXca+8zbzq+H+Hk58r3OPJVJ4u1IiW2EhzbJlJbE28A9pM5Z
FHifQ12DUu3bjBvDfRRaR1gfG3x9bPW5Z/Nzluurmahz2JnmTXETb/fL0nxZ
lt4+j7UwX5GziHmmOmvL+mR1cVjOk8Z6GvI8coyrNqfV09h1HyJjMvVZSal8
V85Cz0KC9215x9t3Lr6+ko3Z+DSfi4m5CxFv55zGPvNWG/eRcN93c17pr90M
rzNfZdJQr0avSda5zvIkeJ4W9ZDrNsJDm2RKS+Jt4D5S14C8W3PhbO2Z8e9v
qWsT3s45pbSlUWtzKf3nHcUpAVrdZqi/nbzbmPY9fYt9Phh5IcefR+V463Xb
j62qvFPW22itX2azb/XZQ8vU9IDM1AwM/WxxY0qiYzJ1/sm7PvWj4Dzw5WCe
uYu3b1ztjcn2vDr/bjBetMuv1PNBNIZCz507i7fzTWOfeetqPsAsrzNvZTLj
ejW3PLGZD9B1G+GhTcqzfAMolm/KvH0388iG5vMzvletjO+96ddS66xa1Ly8
apubtGZGPHUsuundraLMJZJ6n4bx7/q7ODZxnmGt4pTi+rHiYjLz+KSJ0HiD
8Bp47uPtW3ujsl4zPNOPmGNaza+plPPVqXnZabydZxr7zFtn829ndp35LJN6
vbrURb2aW55Yzb/tuo1w3yblWb4BFIs6Rve6bg7P4RUVP/xYCK8R1x6btlsN
9dWp476DDuaV9/KDa66kEl6/Lqrt/NPG28Z9GmLniOeVtwxrnqUXPaYkNiZr
5XdwHY5m+3oaGrOkjm30GG9HlKmo+XOPlLVa05aBNOt5+kpjn3nrd72bDq4z
z2UyvJbQoy7mK8wxTyzXl3TdRrg+Xp7lG0CxXGlziYy21yIIxmVRc5CqY7jX
t97I1ecXyt9F9wWpczx3PHdV46U2J66pD+p+xdvm3z0TM85YXX+hp/zUYq7c
skwpz9Sj8jQpJrtUxvP2lwL9ddpzEN/xtv4OQ9SaLtp7pSnXpNPmOn/febyd
Vxr7zFvv60umvM58l0l9PfeId2hcpF0Uy3jbdRvh+nh5lm8ABaPOlT39Us5D
bWf0unGt7wbXVmjNTXASmrM7oa5Sj/0wvj88yoGyfrFxfZ0/7mG8bfztUfml
99PZruVwrPTfRq0PnRSTtdfBVsfD/qI/8/Yfb+vl01ye1fvOqPJnps4XE/8M
21ca+8xb7/F2quusAGVyT1+3Jas1OTPLE8t423Ub4fx4OZZvAEWjrD1RLktj
MRAzR6yJdfPdYAzXMz0o2/PB+XZNa8SHhdd9v24/0vTF6P090fWV79g4l30a
1kTrmR3WP6eM82mvvWAZE9rGk8kxmTqP5N3+9HPJNt4+/VCRRsL84Ylp1vtU
Ti3baOsxs7vqHL3x80n4SmOfeVuEeNv6OitImdTr1fTzlFzuTESOQ3EWbxt/
S35thI/jEW8Dfx3h+fvCz4Ljnm23hMZw95akP9DH1TMzlDz2rTGkr49ceh47
79ytZpyjvk8e9+zUe2yc0z5PlvX5C9Q179QxD628sT+nMXmn7D95vE5EDLWj
57e5vzy7ePuifjPG6bGsb5rWHLe5LuJiAn2tVnUNKDPDet5l8xhx32nsM28L
EW9bXmeFKZOmevXh08g1bfXzu77H7n9r8ywr33jbZRvh43jE28Bfhz5m7c5q
wrv4et/no9u6ynaM47727K1Vvz2T493oOXQvG9XQWBab+wMXc/f5ieHD64rc
xG2h+deUsSRLmxOpzknt8zH17VnFZIY5AMxzDGYTb19+MfQ1zVbkdC9+fuaT
Nf2auFuvxXCcLf06eFAbjJxjvfX79uf1/uDgPPbJZcNdGvvM2zyu23yus2KV
Se3dv7YB2f8aV6fX5GgxfG8+s5jDu+dp4u0/3LURPo6XV/kGUEDGvhDLGEcZ
w53c1pqMy1LEWsYzs4NysDUm5zsTbSf1YVmfiVgHYmQwRd9gU+8TqS9XpL6Y
rPXuYGNLj1GLEW+b5y27jd20sST9cpRyvY4Lbf/6mBK7mEx9b/NZxJijbOLt
sw/R95JT02VpfHwtp40J+blXk4vdcTn+WJF3ZdPn49f6McWaN+e9ujwsP76O
N/c/KeeNUTlYq5jX7raY98JXGvvM226u2+trtyLHO3qclPl1VrgyOSGrxu81
f+v0c2lsvpazncnmcZrl8uuofFt+ob0b3WYYU+g63nbVRvg4Xh7tEoCCMszz
f1MHJtdNUXM6p4yPmuewEFG/WSm/SBmrpNdjmHu6KPG2OR+uY+LTFeU5eCdz
XBnGKKtrQdjGZHJYk7PGeNv5btQ9WXbjSc7rgxH3k/bqNveOzfuazudbbM19
n3wMX2nsM2+zWDvcNJ4+6+uskGWyGTdGxdxWSs/lxHBv7j7e/s1JG+HjeHm0
SwCKqtmG1PTr2LYO1eb1b9efZct+hKAJ+TRjegYab+rtkNUzXXWejbRM6aHu
M5t4u7N9Gt/TeV8Nvw/b9G4tXX/cNX2Msjo+P3zeHc6jFSiT60pM1tX+dl/L
qmm9kET90kgzRndnROYi5umI1md9DF9p7DNvu71uW0zrBGZ7nXVw3bsqk830
bhjGLiXWdzOVyDq863rv+yttPXe79iLfNsLH8fJolwAU17FhbgHbtWwvP1e0
70a9Z2Pj/HNVVqeT66CpmRdyYNEneMP0vlOqOtQwVlLdZ9x4yk7PM80+tbUu
Hg7IROj/m7FNh3PxauP8m/dU55Hn3e18aeo94IAcpxwDY/wNX0ZkfXYguW+x
t0+WFqsd3DO2TMr+4nOpJsbdJXk3/1LOUvwuX2nsM2+7vW5bNgxzX2Z7nZnm
YSlSmfxNfn59JRsWx+mvPZdvn+PHKHRd76nPy0bi5sEypFlObYSP4+XRLgFA
Kt8n5fTzK9lfG5LGh6rsf7j+8/jLuPzssG0D2g5r7TGrBx+HZXtlSPY3q9Jo
//laTneyWv/6jfzcGZPj231f//lt85WcNCY7XLcO95aTMnl9nLMvreMMyfba
8O2fR1ujcp7wzmbhuG4jaJMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAMBfARsbGxsbGxsbGxsbGxsbGxsbGxsbG9ufcPt/3USN
BA==
    "], {{0, 97}, {732, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
tS6evSR+6VgLa8u+Vqg1uXW2LaRt7LLX5UftNu3dHbodLVcUrpzuFO4sv8p+
9eA1+mvZ11avp1yfvxF9Y6YruGui27f7+U3Pm497nHr6b9ne6r1tcfvmHeM7
13v1ezvv6txtv6d1r+2+xv3WPvW+lgfqD1r6NfpbH2o+vDygPdDxSO/RtUHD
wa4hs6Hbj60f33/i8OTRsNvwyNNtT8dGAkemR8NHvzxLeLb0POMF5sW+l8wv
i17xvap6Lf26eUxj7Oobszd94y7jzycCJj6+jX37azL7HfFd0ZTgVP20ynTn
e4v3Ax+2fpj8GP1xaSbnE8unY5+lPl/6y+ivvlnP2ckvtC+rc/u/cn89/U3t
W/e84/yr7xHflxb2/eD+UbeotXjnp8fPqaXEX7hfJcvSyx0rtisvViNWV6PJ
NPL6UQCFXHBQEABzpwEgegHAOgAAPeNG7rVZUNBayrGmS0TOMHrISasQ9EMk
yBOqg2E4Ap5AUVBz6DyMEmYMW4ELxZvRSdAzEmAGFJGFUZbJmpnGcpL0kk2A
3Z/jAhea24/nBp8gf67AFyEf4fuiOmKnJNgkM6SmZBxkm+UZFQIULyotqeiq
xqodV+/ReKO5qM2gw6Mro6elb2bgYOhtFGKcYJJjWmRWZ95hcc/ymdW09YIt
2o7Zns9Bcouyo46TibO1i4Ors5ubu4eHp6eXl7e391bvbd4+3ts9fd39nMn2
/hYBBoHqFJkgwWDWEFzIEvVz6Juwx+F3kFV5Jqoi+kBMMo0caxzHHfc5viuh
ODEqySZZNHk55emO5p17U/3SNNMZkbV1JbMgK2SXfjZr9vTuazmFe0L26uVy
5C7nofcbHGg6qHXowuHlQsEjskcVipSKlUtUS9XK1MvVj2lU6FRaHKecKDk5
Us1eY3zKpzbydEpdTv3hhvIzpxqbm9rP3mwePPfpgvDF6EsDrdJt4ZdL2ls7
Hl6Z6ly5xnFd+YZ7V0H3dI/VrfLbD+686Z29h70v3mf5ILA/9mH4gNsjzUGB
IfqhxccTTx4MX3/aMdI5ev1Z1/NrL5pfHn4V/tpkjHts7s3AePtE3dvyyUPv
dk8lT0e89/tg/1F1hjTz8dPtzzV/5cyGfnGYU/sq8k163uf7tR9Ki0d+vv7F
vey5UrO6uuYngAB4kVOiM5LnNIJ3kCQUBd2AeeEseA4VjfqB3osRxtzCxuEU
cF/x3XQV9KmEQAZPogujJ5M/czxLHqmOdYDtB4ckpw9XIfdDXiKfHf9+gX4h
orCTyGHRAXGChLlkglSt9COZb3LM8lIKaoraStrKqirSqgJqzOqQ+jeNSWS3
6tVu16nXLdPL099hEGq41cjB2MRE01TBTMycx4LZEmu5ZDVrPWkzYttnd83+
nEPVlkLHbKdYZ7KLo6uBm6w7lwfG44vnC69e74tbj2/L9Ynd7uNr7idHZiX/
8H8Z0BVYQ9kbFBZsH6JIZaF+DX0S1hpeEpEc6RmlEU2Kfh9znVYYGxinHo+J
H044lRifZJ7MljyRcmFHxk6HVL7UD2kd6QcyQjOds8wQz9DZrZGjtEd2r3iu
4D7uPNJ+wgH0geX87we/HJo7vFiIO8J1VKpIs9isxLF0a1lwOe1YasWeyoLj
x06cPnm5arB68ZR07bbTeXUt9c8aVhqFm8zPhjQfONd2/vNF9Uu7Wx61ES/r
t1M7Sq/c71y9pn49/EZN14ubLD1Gt6i38+409PbefX+f2Kf6wLs/62HjwNNB
7JDaY98n2cM1T3tG3j2jf674wvVl8qvK13fGFsaVJ2hvL07OTclNB7+v/vB6
hveT5+djf81+SfgqP09aoF+Ef378dWWFujn/9IATyAErJNspBvcgLGQJHYYm
YH34JIqI2o3GoQswEpgb2EAcCXcXv5fOgV6QfpHwmOEy8RRjKVMB80GWAlIZ
6ym2VvZejleci9wkHnleCz4y/06BYsGzQt3Cj0UmRT+JzYnPIqemEalu6VMy
u2S95RTlIflBhRrFRCUbZSHlBZV+1Vq1NHU3DTlNWHNEq0k7S8ddV0Z3WW9A
v9og0dDGSNBo3rjP5JRpmpm7uYIFxuKF5SWrfdZ+Nhq2BNsxuxb7XAcfJFJg
HEedGp0zXFxcxV2/u/W6l3mEeep6Ebyee5/ZmrLNyofD5+32877pfrZkTvKE
/9mAlEALCgvleVBtcEyILhVN7Q8tDvMLlw7/EnE5MiPKIpouui9mP80mFh97
Ky4r3iB+KaEtMTZJIel9ck2K7w6eHY935qdapcFp19LTMqwy+TOXssZ29Waf
312ek70nYq97rsE+iTxi3vz+Fwdu5jccPHIo83BiAa0w+ghyLCiKKY4piS6N
LKOW+x1zqbCptDvucyL5ZEXVrerPp9hrNU/b1TnXOzVsPbOj8VLTUrPlucLz
ry/KXkpo6WojXHZpL+l43il8Nfza1RusXaHdN3t4b8Xd7u+VuJt673GfzIOs
/okB90fDQwGP54f3jvCMNj03ejH8KmPMftzl7aF3C++PzNz64rowujb/G7/B
rRWsBgCnLABwPwKAizaC8wEQr0P2Dz0AHIkAuGoDmLsUQFejAbRN6s/+IQCM
kb1jF6gBt5DogUXihzUUBh2AmpFc7xvMCevCvvAuuA7uh7+ieFDGqBDUIST7
HkcT0BpoMvoAuh09hWHHmGPikaxrBMuANcYmYs9ip3EiOF9cJe4VXgQfgj+H
X6azoztB953ekb6JQCREEgYZtBhOEgnEBOIEoxNjF5MKUw0zN/MhFjqW3SSY
lMWKYc1lY2YrZRdnv8hhxjHCGcWF56rhNuV+y7OHV573CV86vxz/C4F8QTPB
ZaEO4RQRA1GM6EOxY+JhEvqSJMkPUj3SVTJZshQ5O3ltBQVFRSUDZTeVcNVd
SMhv0RjS/K7Nr2Opm6BXr//akNvIw7jU5LWZlHm8xW0rHutgm6O2xXYJ9kb2
qw5dW/Y7hjpRnbNdzrm+defxcPHM9+rbStzm5FO0fcSPiazqbxngFhhISQ86
EzxNVQ7NDBuKkEI871mMJq0o9ke8R0Jj4qdkzhSlHSY7vVLT09oz6DJDsh5k
a+yu2sO0Ny13Ks94f/aBlvyxQ4yHHQrOHVE7eqvYoeRBmVX57Qqnyh8nequu
1VyoLa5LaaA2bj1rfI79/JuLTS3pbdvbva/svNp2fbFbuyfi9r7e0ns1fc39
1wYeDU49wT/VHz3w/Nsr77GWCcIkearjA35G8jP4q+KLwFzJN7751oWIRfWf
v361rviuxw8xYAtiQBHoBOMQHlKAXKEUqArJ9L/A3LAJHAYfhW/AH5Gc3RTZ
TSpQfagltCx6Gzof3YWex8hgyJgSzCMsAWuJ3Y3twWFxNriDuBG8GD4Wf4uO
jy6Rbphem/4EgZ6QSJhi8GR4QDQldjJqMbYyaTC1Mxsy30Zy1FEShTTHmsXG
xlbHbsg+yhHPycbZyuXNDXM38njx0vF28sUicz0tcFqQKqQg9F24S+SgqK+Y
qji9+FuJbskaqVzpWBk/WSc5c3k9BU1FdSUNZR0VE1V7ta3qkRo5mrVaD7VX
dNX0ovTPGswZaRtnmwyZSZqnWzy30rWusFm2c7QvdLi35ZeTgnOgS6XrM2SO
t3me9PqwVX3bLp8hX3G/WHKn/0qgPiU1qCuEjuoeeipsIcIusjrqV4wX7XIc
d/zOhGdJSsk7Uq7u+Jmqk5aZ3p8pkpW8a2i3Uk7+ns+5Dvsa8pYOGOXvPNhy
aL7ArLDqKF0RrXik1KCs+hi+Iqpy+IT+ydpqtprcWuzp/HqBhkuN9k0TzUnn
CReOX1Jrudfmd3m+Y28n39WW6x5dcHdLD/U2353+uxn31fo+9FcPbB1kGbr+
JOApGCl/pv385cs9r1XGXo/vf6s7OTNV+d7hw/zM3k+Lf1nP7v5yfq7/6/S3
1e9cC6o/XBd3/mxY+rCstXJ0ff6lgStIB/VgCKxA0sjsZ0CN0AiMhdVgf/gw
3IWcIkRR7qhc1FXUV7Q02g9dih7CMGHsMHmY+1gi1hlbih3HyeNScQ/xEvhM
/Bs6S7oL9GL05QQOwlEGDoYyoiCxllGJsZPJjuk1ct5gYmkk2ZO+sJaymbHN
sVdzuHMSOLu4Urg1uL/ztPOm81nzcyJzfVXwqBANOYGoifKIoZG9Z0JiVHJQ
6iGSmT+RfSX3Uf6XIklJTtkGWdGFatfUP2kKaXloF+gM6rHr+xg0GC4ZO5o0
mNGZR1g8tbKxvm1rZzfiQHUETuUueq7j7vmehl7zW8/70Hw1/Ob8ywNlKU3B
MiG1oRJh9RGKke3RljEjsRHx2ISqJOPk1zuSUrFp+RlsmaW7RLKbcnT3PMgN
yIP2n8nfdgh7uLxQ4MjRIlxxYslUmXf5UIVn5bcT9VWUGtypfbXf6zzrW86w
NcY1DTdrn6u8gLkYeWm01bKtvV2po6FT7Gr5dcYbqV0fbnr09NxWuXPyLule
9v2FB+H9bwd8Ho0OeTx+Ouz69O6oyrOC5x9fGrzKf/3yjfx42sTApOi7pKkH
70U/JHy8MbPyWfkvm1mvL15zDl/1vonO4+bHv3csZPzQ/zG7mPmT9PPEEt1S
zNLoL5Nfpb+mlzWXdy8/XhFdoa40rcyuqq0mrV5Zm//YIFWV9e0DYjABAPNq
dfWrBAC4AgCWD6+uLlWtri5XI0nGCwBuhG/8r7O+1zADcOzmGrqdMpHx7/9X
/guSk9IK
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{669.59765625, Automatic},
  ImageSizeRaw->{732, 97},
  PlotRange->{{0, 732}, {0, 97}}]], "WSSBanner",
 CellMargins:>
  Dynamic[{{0, 0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01059602649006623 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.11986754966887417` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{
  3.730589179683115*^9},ExpressionUUID->"3bb2d191-b234-4a2e-a519-\
8cc81e1dbc97"],

Cell[CellGroupData[{

Cell["Graphs and Networks", "Title",
 CellChangeTimes->{{3.720193284509671*^9, 3.720193288595942*^9}, {
  3.726941915180914*^9, 3.726941915962871*^9}, {3.730588827776165*^9, 
  3.730588847572877*^9}, {3.735569843753702*^9, 3.7355698462454*^9}, {
  3.738213564370215*^9, 3.7382135668808117`*^9}, {3.738214004041073*^9, 
  3.738214032466447*^9}, {3.738318632181835*^9, 3.738318638758234*^9}, {
  3.738504903373798*^9, 
  3.738504905355669*^9}},ExpressionUUID->"a2952f0e-0dad-4d25-91aa-\
a3ff0c5ccc18"],

Cell["\<\
Introduction to Graph Theoretic Computation in the Wolfram Language\
\>", "Subtitle",
 CellChangeTimes->{{3.7201933391803827`*^9, 3.720193342066636*^9}, {
  3.726941908757318*^9, 3.7269419228992167`*^9}, {3.730588124959963*^9, 
  3.7305881263738823`*^9}, {3.730588160038538*^9, 3.730588163188789*^9}, {
  3.735569856249476*^9, 3.735569860554181*^9}, {3.738213581270075*^9, 
  3.738213653427018*^9}, {3.73821403548188*^9, 3.73821403665215*^9}, {
  3.738214299344005*^9, 3.7382143114397507`*^9}, {3.738215173385997*^9, 
  3.738215175080502*^9}, {3.738318643431189*^9, 3.738318664280507*^9}, {
  3.738504910041553*^9, 3.738504913212481*^9}, {3.738504961915558*^9, 
  3.738504966059256*^9}},ExpressionUUID->"b5613cd2-313e-4e22-8c7d-\
1493cf59cc5f"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvQuUXVWV9+u5AkIgIR3FTgWiJCMP0iGQCoYEoyGFpCE8DM3t8GggCTQN
hKhRXkaCaYWgEYjSysPuQaBVgl9DEjSOqHzAkE9pxO5W0UsiXpX0kO4hgyht
++mw+37Wrvvb51c1Wex9zqlTj1RVQo0xU+Nkn33WXnuutf5zrrnmY8Ilq86+
7P963eted/WB/Dn74g+2XXXVxR/6v0fznyXvu3rF5e/7q0sXve+av7r8r66a
e8nruXh05XWv+y3/8s9Zxx+GaZiGaZiGaZiGaZiGaR+g3/3+f7/40i8a3LDz
uR3Hz5n9zhPf8fy//mzQezvMq2EapmEapm7ph8/+YNToQ15/QOXv7vnbevcs
u3hZZb/XQe97/3sHvcPDvBqmYfr1b/7jk7dvuPyKy6D7Pnfvf/+f/xr0Lg3T
UKMb131ULGo7aUHNG377u44LLrzLe9auva9eO//47SeBtS9s+vygv9Eg8gq6
5bZPeE8D/H8t8GqY9hx9Zfu2MW/8I6eZ9NYj3/K9Z7476B0bpiFFW7d+f8SB
I9FFV668+zN3dfz0Jx3pt//rf3Vs/LuOX/5nB9Ppa4989ZHHOx7e0lGznTf/
8WHMMdpBuR30l9pD1IzenlWXHrxqcMNrgVevTUKd/uI/PIDU/tK2h/eQLs2c
OXDEASmwB7zvfnn3oHNgmAaMfvf7/333Z+9iptX89uc/awe6mZDakNv/v47H
vp6B8N/7bseLv+jwQ+En/8/O/Dp3+l8+cM9n7+04dPTYvR2vGvNKCl71hVrG
7fW8GqYysa1D9Kdg+9CWB/v9KWedvbgM7NKH//qGQWfCMA0Y/eVfXeK4lyFL
9A6UDuLK9Ws7Ll/RgdL+31kNLf1XL/3hU5/qUKUH1cH2HOGf+e7lV1y2YsUm
mh30t+53XvUjfeefnz5i/OHdKv/DtHfRJ2/fUAZbRvmJb36jfx/kpq8mNTAV
DtO+Rwy3437BhXeBw9u351YXoFh8LgM733JdywygDfijyadaupD+ub/vuPm2
DnT4ws+5oWazewUFr1ine+gRKOqzjmtdeMrJx8+ZDcgP+isPU7/Q//vTHwPj
NfGWPVo/PoitZb0HQRMnTRx0VgzTgNHWrd+fM/tdF1z0F8yKrKqrA84gNmo5
fx/e0rHjmfbf/i6HYgAZxN68rYjMoj1fCenguco8fx/4H3lrhSf+/GftXC/3
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
7owXA9BQOAEoVUqNG8iXuBO84inMvYKZOvV+1FtAiAPnG2wftLFEjKq6utuW
muXzsq6a6aktXfebdL5F0rbCb60DW88xRjCHmUil1MziAQeaOfuLUaPGTJ22
Lh+Ob7ycVVXZBQueOnz8JfsdNFbYN9w4feVczzztBevVpkaYMh8cZeOeGlc5
H0TqSy1sdiXDtbBrUrkWdplXA097dS1s1CeWFdRYEgHphhurpZuzi2kDwpfL
arzw7z9Pbd3oGGkZTZH/3HNvUt9j6tbcfYcnNugtyKRoFlt7j1k1UIAnfNBR
sMncL0GICbPyipPpbwHegk84r2BhvpBfZe9HiyjZPX5eM8wn0kKqt6dJw9hH
1DSYMzeUF6m7S1l1j51O4eesIPMtO8fqgXlqM7cgiFgNi3jK8kveb2r3trYL
lUr8t7X1fNTRi5e9GC7xins4s3z5Gm4YceDIj62/ud5SRTJqqOEGtNlyTOuQ
Iuu5O/NNyds7A4WekPFfretcEdLdC2hpQXVnuaEOqTzzQ11i6IO6Fh0Ib8xQ
/rPqyazmfQ3mEKPmKDd5GkXjppQ0NXFcV8eoOUt7QSyEMNChGzRzDDQAZCIp
j/X74ovbv7zqlkyBlfqe0f+CxwWoy5h6YCqkM3/0mzUOrl7AdQAdt112UZaW
Q2Wy5Q51lTfMP2EnrdWsuFSIoIxzahAvFXwATmTxisKsEY+v9TscJhsTkIXO
jFAuexWmGXKCAEkL85leQCwNZOZbdhYQ/DQpTSFNgSa7SKJiegGQE9R1OxD5
xAqnt9r/FUCpAlxQ3Y0gKxjhkS/2GbnQAMy1mcevjp4x3dfXu9WYAqfN/geM
AdIf2LTl9tt/xfQAf7IqXhn3xGy5YsX2yZOmVaqxTlddVTeIVUsRTNASxVQx
5/AArIJekMZ2gz2zKraDyczwerXD6pEh/J0z+RedFdvD90BIz6o+KtwGqHp6
m1vgq16OLENzF3CD65HFyBWzsaX7iIJPixa5wm60QSe1tSqs02YXL15hO90m
4uuWUGtjnqMvNXkMNADUI141IHfx/cKrZqjscuZJJQjAgDJzAF7jVsRwZleq
YDO3G5RgsM5p1uUkqdHPRYG63nbSbrbwLWPfVu+8LKpy+F+R0wSwEydNLJye
W7fOzrsHUfFmhmjd5S+fGx/c01utQOW4IZ6bZsgJQsqARZWqo6anjT6Cn9OT
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
bXj9+Z9AkkcUXHvqTjNJKsZf8pmvhXN7vanN+6P/+UecXzjdFFU8b1tknP42
POqZH5elrKQDr9YznMHS202bLp49+4zDph2TwaxqcEQLc6bRc9F17tzjwtRb
r58Fta1hysNBwnnzTohKJdoszN2t+VhX8/CNbGtczGTBC+A4kDQTtuuFsAdp
svLGpJ1Z4xgFv+MsuWTZsx6mRpM5fLKcCPP+FZWBu1fxUwhuWp6ORPe/ab9p
/397bwOkZ1nleddTgEKAkI0f2w1EDUUSshCgg4FANCasjPmSxtSGwAuELFIq
y+uLo8AgaNYSXBVhdYfPsQzKLui+TpAdptiVQmpEdMRZZXWEiAuSLZkqLSKs
M+9Y88685un3dz+/fg5Xrvujn+500t1JV53q6n76fu77uq+P/znXuc75nykq
KUduJlo7LNKGciRZ7tL3nhwOegfetUVZOFtuGkozR+rq0WNWAU20p3zgZSpT
/GlijiDJ3QQ0QViVhM0ZusCAk/SYm/unAScGxgg4BoFERKL0LPpsdUegCiN7
iE9OPfV9KT17KiCSl2EoYjnTmxs33tgwENu2vYSFuWXLl4eLlh6/sGyH0w98
Pvt1a7yG9gBTbD1OGTjZAFFAmA6UNVHFdNSsZVu3/pz+p51pJA/vJeebYG6x
EsY6HSPeFBWs9X5Qh7qzOXeg4ThVUSlXlqtuFh1EI17GTKMPDz6sTzq4dpeQ
jdkokQVakkFh6JmobDPB82d+XMxePTnTPpkDUPbjvmqorSOist5ZJnWvX85L
1VA3dKQ4IrxpSFKsKC0HEAEpmUVnmbzKCncpZa5CP4vMRtoA5mIOTQWy9LHz
uaVAuLMAFV/X75rG53AH1r7+h8OPWBDkfqgnE/P5eccd9welfNpp4HYl/Wxw
VBoqf/Ipj9IhVtnm5mlkeNkZzld4C4N5rLzDI2II2BDNm3+7VxrdnebyezzE
14ttV/9JPJqb3/CxzxXh9KuGOdxkfaEbvSc3lwQ+wN8DDv1j9O2ZZy2VMz8Y
ouomzMITT2hYKQa9aDOMapa6pWquoeApKnLJpuctxcJkCIMcpSP5jC+14IR7
L3vvq/aGkzaLYp2ist+fD073VY+S8tplkhH6YQ3KmwfMymjdrsL2dkJXiwDv
/9geMu6atWNOTTlYyA6s5HwQt4NJFayWgkDoM4ZH2nCjE32pAOEPX/2HaVy6
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
     "], {{0, 300}, {500,
      0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{506.41015625, Automatic},
   ImageSizeRaw->{500, 300},
   PlotRange->{{0, 500}, {0, 300}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsfQl4VOX1/gCyuOMCigLJJDMJBNllEbWgCGQBFyzu+4KKQpaZLISQIQvg
2mqtbd1bbdVq3a0LW7SL2lrb2lpta6u29me1rbXW1gr5/k/+3/nmnpvzffe7
d2ZCyCThnOd5zWRyZ+aOuZnzcs573hO+qHzp8oGhUCg2TP5n6YW1x1VVXbj6
1OHym2WrYldcturSS0pWxS+97NKq2RcNkne+OyAUOkMev0eIg4ODg4ODg4OD
g4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4OD
g4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4OD
g4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4OD
g4ODg4ODg4ODg4ODg4ODg4Ojx2NAKBEaqLAsNAgxNzF3D8D05dMHUxQlioaY
iKyMDO0KbM9lvh6eBz0393zh3Dk4ODg4ODg4dm1oXIlyJJML5SRyhgFGV47e
EzAqMWovwCGxSXsDilYU7YMorC7cl0I+fj8b8mrz9k8Hfo83X4eeA54Xniee
N74Pk7N5uBlzMg4ODg4ODg5vDPDjTSZfMnkS5UXIcXLKc4YDxtaNPQAwurLo
QMRhdeMOAhRUFRyMiKyOjKDIi+WN7E6Yz09fG8+HniOeN74Pyt0oP6O8zORj
vjyMORgHBwcHB0d/Co1DmfyJcifkTSZnolyJciTKicKrwocAcuI5hwLGVowb
BRhTXXgYYHRl9HBEpCYyGpFflT/GhHzdsTsD23PS16TngueH54vnj++HcjXK
zSgns3Ex5GGUg5n8i7kXBwcHBwdHrw4Ph0qHP1HuhLyJ1pKQL1GuRDmSyYdy
Y7k5ObWFuYCxsYKwi4poHiASj+Qj8ivzI4i86ryoiXDVuIKuwPZc9LXoOeB5
0XPF84f3YvI1ys1MToZcjNbKkIdRDpaKfzH34uDg4ODgyEIQHmXWoYI4FOVP
JneiNSbkTciXkDOZPIlyI+Q2udWFhYCcqoJxCjXR8YCxsUgRIr8mfwJCnscR
LioLJ/ohHC+YFISgx9LXoK9NzwnPE88b3wflbJSfUV6GXAz5GOVhtDZmcjDk
X0Hcy6x7GbyLg4ODg4ODI/NQNSna0/PjUWYdyo9D2fgT5U7Im0zOZHIljR8Z
HCi3MjoZkBOPTlGoikwFjK3On4bIj+VPR+RVFx5JEY4VzOgOmM9LX5OeC54f
ni+ev4e7EX5mcjIbF3N5GOFgNv5l415m3cuPd2m9Rq51cXBwcHBwmKFxKaxJ
YV+P1qOCeJSNQwXxJ8qdbLwJ+RLlSpQjaZyoJjoTkBuLzgLkVEZmK8Tzj0LI
c5oDyIsXHK2hquAYinB19Nidgfl85uvhedBzw/PF88f3Q7ka5WYmJ3O5mI2H
EQ7mx79s3CuId9F6F/YZPT1G5lwcHBwcHLtTOD0+WpcyuZStr2fjUWYdKh0O
RbmTy58c7oS8yeRMlCtpHInwIXncFxSqI3MBObH8eQrV+ccB8mIFx7uoKphP
EY5HT/CgKrIgI1iew3wdeg54XnieeN74PjS+RrgZ5WQ2LoY8DDkYrYnB//u0
uJdR97LxLluf0ca5sM7FvUUODg4Ojn4VTm0K9VK0x0frUsilsCaFfT2/ehTl
UR4OFcs7Qqs/+fAnyp1c3kTqSMiXKFeiHIlyodx4ZKFCVf4igHzOYhexghJA
XnW01EUsWkYRro4s9kUsssSKgMeYz09fG8+HniOeN74PytkoN/NwMoeL0XqZ
y8MoBwvgX4p7ObUvyr0o7/Krd2GfEWtdlHNhnYv2FjU9F/MtDg4ODo6+EQMo
n6KaKagroOYc+jy2uhRyKbcmRfp6bj3KpxYFudqXQxn8ycOdbLwJORPlS5Qn
UV7k8B153IkK8fyTAJIjnKwQj56CkI9ZigjHI6dqiEW+2C0wnpe+Jj0XPD88
Xzx/yt8oP6O8jPIx5GI2HubhYIR/+XIvo+9IeRfWu2ifEWtdlHOZdS645lBL
jzUuquXiniIHBwcHR68Kg09BXwb157baFGrOod+j1aUcLmXWpKgmyo9HeepQ
QRzKwp+QOyFv8nAmgytp/MjkNtWRZYDcWP5pCtUFpwNyYtEzEHlV0TNdxCNn
mZDndnZXYHsu+lr0HPC88DzxvG1cTeNmlJPZuBjyMORgFv7lx708dS8f3kW1
Xmati3IurHPBtYZaeluNC/XztKfI9S0ODg4Ojh4NC5+i9SnkU6g/p7Up1EtR
rRStS3l6e6Svh/UoPx5l41Cp+JPGnRze5KklGVxJ40eUD8Uj5wDkcecqxKPn
KcSi5yPka1yAyItFLkTI17jIiljk4rTg83j6GvS16Tl1nmfyvPF9aHyN8DMP
JzNqZpSHaRwsiH/ZuJcP78J6F+0zmj1Ga51LXnNUz4U1Lqqfp3zL1HAx3+Lg
4ODg6OYYgHp0qp+y8Smz10c1U1ibQs059HtsdSmzJkX7em49ivIoow4VxKE8
NSfkTqTGhLwJOZPGlwhH0rgR8pyqgksA8thLFWLR5Qrx6GWInFjkcoR8nSsQ
8vErAhEvuFJDiuPpc9PXpOdCzk+dL54/5W0mP3M5GeVjyMUoB3N4mMnBFP8K
4l5G3YvyLqx3aX1Go9Zlq3Op3qKjpXdrXETLZesp2vgW6rdcvTz3Ejk4ODg4
Mgmfnh/O9qF+ylafMnt9ttoUas5tdSnIm56aFO3p0XoU5VFmHcrCoXz5E+FO
Ns5kciXKjTT+E4teBZDHrFSIRVe5qIqUA3LikQoK+dhKDfGCqp2C8Xzm6+F5
aOfmnC+eP+VvlKOZnMzGxUwO5su/DO5l1r0o76L1Ltpr9NS65LVjq3Ohlt5W
47L1FM36FtVvoV6ea1scHBwcHGmFzA/p1KiC+n0ePuXoz621KdLj0+pSZm+P
9vWcelQQj7JyKD/+RLmTjTc5nEnjS4QjaZwoFo0B5HFxhVi0WiEeqVGIRWoR
8vnrKOTjVmuoitZ3CcbzmK9Dz6HzvPA8k+eN74NyNY2bmXzM4WJWHkY5mIV/
WblXEO9y6l20z2j2GM06l6alN2pcVD/v4Vs+/cS0alvMtTg4ODh259D6fn41
KvRKQD16xnzKVptyNOfQ9zHrUpA3zZqU1tfz4VFmHSoVh/LwJ8KdKGfS+BLh
SRovQn4Tj64ByGMbFOKRtQqxSKNCPJJAyMet0xCPNlkRizYHwv9x2vPT1ybn
45xf8nzx/E2+pnEz5GSUjzlczORgJv8K4l6eulcQ7zL6jG6ti/QX3ToX9BYd
Lb2txpUp36J6efjb8KttcR+Rg4ODY7cKl1PRvp9NR2Xr+aEeneqn/PgU6qZc
PmXUprQen1GX0rgU6evZ6lEaj7JxqHT4E+FOLm8inMnDlSg/ojwoHmkByGNa
FeKR9Q42uIhFNyLk467WEIte0y0wnpe+pnYueH7O+eL5a7yN8jODk5lczOVh
hIOl5F8W7uXHu9x6F+kzUs5lq3O5vUVLjQv5Fuq4rHyL6LdQL2/rJdp0W7SP
yFyLg4ODo9+Fh1OZfT9TR5WqRoWzfaifwn6flU85+nNrbYr2+Iy6lFmTcvt6
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
ov1Dt6aF84dUp2WbPQzoHVKNlp8WnnkWBwdH1oPwKtssoE2z7uFVZg/Q0Ku7
M4ABtSrq+0k1VWHXQz3SGO6c+3O8Ph09lVmn0uf9OrXpZt8vVY0qnfoU8ilH
M4W1qTBqzqHHR+tSJpdyalLWepTBo7LNMRg+3MuPd9F6l7fW5XIurHOFlceE
o6XHGpem5TL4ln99K7C25ekjEo28jWu5dS3Uazna+DDOISb/NpP+WlSrRX1M
g2padPbQRw+veocBPAu18LaZQ+ZZHBwcPRoB9Sq/WcCU2ir0Vjd6gO4MIKlV
oa4Ka1Wul7rR/3M1VWqu3Jj78+ipgjmV1vfzqVHpenRHP5UunzJrU1QrRepS
nXN4qCl3+npcj+o3oPWuTt09zkMSzuXONxJNl7fGlTbfcvVbrl7ep7ZF+4ip
uJap1/LOIa7XtFq0f4ie8aSmhbt5NJ2WM3to9g6tPMvQaPnNHHI9i4ODo0cj
ERoY1Ac0eZWfZt2jrQroAbozgNRXwadW5en/OZqqXPDwQS8FnPtDjbrZ+0NO
RbVUZt+P6KgUpzJ6fqhHR/1UmPb7TD7V6YPwvqc2BT0+W12Ka1K7JTTOZdS5
wmqm0ahxId9C/byNb6FmHj25UC9Pa1voe+rUtjx9RKrZMrmW20NMauPdOUR3
J7X62+zUatH+oU9Ny+Pz4Mwe+vYODY2WnxY+VT1L41k8b8jBwdEd4fgs+OnW
U/EqX826w6v8eoDuDCD2ANFXwa9WZfb/qKbK8VLIxbk/1KijnsqsUxFOFdj3
C6pRoUcC6qecfp/JpzTNFNamHM256vFxXYphQaeuPvp52NHSY40rTLVcJt8i
/UTUb+l6eVttK6CPaONaWNdy9Fph1MZ37qVOej6YWi3aP/SpaaHPg9s7xNlD
v96hD89CLXwmPIvq4NnXgYODYydigM2/iurWM+FVYYu/QiCvMnuAjq+CW6ty
dFVurcrxUnf7f1RThV4KxtyfR0+VklORvl9wjSqYT9H6FPIprk0xdhJmjUvj
W+gVEcS3AmpbtI+YkmuZei1zDtHxfPBotbCmhZ7xWNPC3TxOTcudPTR6h4E8
y/B3yIRnUR281T+L/eA5ODjSC7XHhvqto39Vt/EqH22Vbw8QZwBtuiq3VoX7
k43+H2qq0J9K+acn5/48eiqDU1EtlafvZ6lRuT2/Tj36h55+H/MpRg8hFd/S
9Fuol1deXJbaltlH1Dy3dK7l0Ws5c4jo+ZCb3I9ItFqkf+h4xhs1LY9OS80e
+vUO/TRa3cSz0D+L+sHz3h0ODo7AWBYahPsBcY8N+oJS/yqbbj0lrwrQrAf2
AG0zgFRXZatV0f4f1VS5+2icuT8Lp6J1Ko1TaT5Uuo7Kr+eHHgmoRcd+X7bz
LmP3hNZPRP0W1ct7tVuabkvrI1q4lq2upbiWM4cYRs8HQ6sVJv1D35qW4/Ng
zh4G9g4DtPCZ8CzUwVP/LPQpxb07uN+QNfAcHBxaONp13LuM+wHRb13zBXV8
FqhuPRNepWnW0+RVWg/Q8VXwrVUZ/T+qqQqjl0Lnbr/n0+FUHm263vcLrlEx
n2L0UqhrM1Vti/YRTY18Olwr+TeWnEN09/UYWi3aP/StaTk+D5beYTgVz6Ja
+Ax4lqaDd3wdqE8p+sHjfkPcI80aeA4ODlO7jjOBuHcZ99ig3zr6V9nmAcNd
4FW+2ir0Vrf1ANFXwdRVYa0KvdSN/p+jqdK9FKhGPahORbVURt/PWqNiPTqj
jyGpl7fUtsw+oq7Z8q1radp40/PB1GphTQv7h1jTMnVazuyhrXdozh1SjdbO
8Cw6b+j6Z6EfvLN3B/dIm7OGrIHn4Ng9g2qsqHYdPaxwPyDusXF9QYl/lTsP
mAGv8tWsm3OAth4gzgBSXwVHV2WtVTkeVaamyvVSgBkpU0+VilPRvh/VUTGn
YvQT5CZ3L3bqtkgfMW2u5e7tUX9jSc8HU6uF3lo+NS1Xp0V9HtRnQEDvEDVa
flr4DHgWzhtS/yz0KcW9O7jfkHpnoQbe0GZxcHD09/DRWJnaddy7jPsB3T02
6Avq+Cz46dZT8ipTs54ur6I9QKKrstaqNI8q0v9zvBTCyT3JSqPu6f3ZOBX3
/Ri7ITx9xCCu1bmjOqmNV3OIuJPa6B863lqBNS30eTB7h+nyLEcLnxHPojp4
x9fB9Sl19u7gfkPcI23TwLM2i4NjNwnSC8R9NjaNlTYT6OxddvcDOn7ruehf
RXwWqG49Y14VqK1SOze8PUD0VTB0VW6tyvFST+6mMfp/nfv9/oBzfx49FXMq
BsODlFyLauPdvdRJzwdP/xBrWqpXT2pahk5Lmz2kvUPHI95Po5Upz9J08MTX
wfXPQj94Z78h7pGms4Y2bRbdt8M9Qw6O/hVmL5Dus9E0VoZ2HWcCc2FnKu6x
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
88fkcd+XtzeFfbiVu0+QuRWDwWAwMoSVY9n2FVKOJXMS5CaVoyBXyZwl779H
5TDIZTaP9y74NqTSu7O/e98Kmz97oJ4901nBrnCrWHSbPO6H8mcvy9uvytu/
UrvQbdyKfdkZDAaDkQGsPu/IsSDXQM6RuQdykMpFKid1gWNlOFMYpHenWqzp
iel7LWe9e++OZaFBNn/2QD17GrOCQR5XYXPvTSz6oDzmUXn7KXn7uSBuJR/7
bji5G71zVzNzKwaDwWBkCG1fIeQUmVvk7XeDOBbkKJWrZM6C3GXdo+PnjZXG
TGGQ3n1C1YQx58dnHLqhbv5BTyeK93vxhmV7PvjgMtZi9cZwNFc2f/bA3Tep
9Ozp+DDYvNmTe2+2yuvxB/L2S/K5fiZvvyZ//oa8/VaYuRWDwWAwuhG+HAty
DuQemYMgF4UhJ8ncBDkqbNujE+SNRX0bUujdzR06R1aNn3rR6iOP+FrDcYXP
tSwJtyWKR29Zv+SQZxMLD/zRNSfu+/RNxUMTiQRrsXpXpNRc+fqzB+nZu+rD
YNt7E4/8Uj7uN/K5fi+PfUd+/xd57Ify5/+Ux34qb3+e7b9NBoPBYPRtQC6B
nJLMLTLHyFwDOUflHpmDIBdZ9+h00bchSO8OOXZ23fgTrlg9e+5diePmbG4q
ntHWWjply/rioueby6JtGxflbmktO/y5xIKRbYmThj933YK9H0wsG9LRwVqs
3hLgoZGW5srizx6oZ89kVpC5FYPBYDB6AbqFY6U5U2jTu8+rm3B6vH7Oqd9p
WrCkraW0eNv64vlbW0q/sHnD4qO2NZdNl/xq0vPNpePbNiyMyPtzXmhdNKot
sfjgzVefsP8TicV7tbEvVu+IAJ8rU3Pl58/uq2dPZ1YwlceV7s3+trz9nvzZ
B/L2R/LYf8tj/5ftv0UGg8Fg9DPI3KJyDOQamXMg96gcZPN49/HGCqczUyhz
ZWF1YfkX66asWNd4zKXfa15wwbaW4rO3tpYt29Jadkpbc8niba1li7a2lBy/
ZX3ZsduaSmdtaV087fnmkolt6xeP27yxLO+FloVj2hKlh27ecLLSYkl+NYy1
WFmPAXRvM/QFPT5X6XiI+u2+SaFnz8SHwePNHo9+In/+mTyuPet/hwwGg8Ho
V3Byy2cq19g83tP1bfDRu8+pKWq5bM3Mxq8ljqvbtL4ktq21dNXWluIr2lpL
LtnWUnb+1pbSM9uai78o+dXJ8mdl8mcL21rK5m1bX3K05F0zn28unrq1edGE
zRtKCl5wtFjQJ/zhxrIDJL/aB7RY3CfMXqAXg7lbkPpcpau5svqzB+nZM5wV
VD4MzK0YDAaD0UOwcqwUvg3WmUKZ8wrjhbefWDf5a40NR9/03aYF129rLdm4
raW0WfKohm2tZbXbWkqq5O2VW1pLLt/aWnyRvH1u2/qyM4BjSX51kry/RPKr
E7atL54rf6a0WFubyyajFgv6hJsSJx520+rVI85PPDp8+vL/22v68g72bMhG
GF4M5m7BlD5XpubKz5/dT8+e7qwg+4cyGAwGI0tI4T8aOFM4q6bokUvXHPnd
mxNzv/1sS8ndkifdtrWl5JatraU3Sn51nfy6Xn6/Tt6/RvKrmq3NpZWSR10l
+dZyef+FbetLz5H3ny7vX7qltdjVYkGfsK21eDZosZ5ev2TS9YnEuPPiT+cX
rfrn2LEVHaMOu7LjoMjKjv1GV3bsGVrWwX3Cngy//TfGbkFzb7Ppc+XRXFn8
2busZ2cfBgaDwWD0AqTybUC9e0Gs4MXFdZNfWNM4Z8sDTQue2dZS+oTkUQ9L
HvWA5Ev3Sh51l+RLt8rvvyq/fll+vUbe3yrvT8jv6+X31duaS8rl9yvk/Ze2
tZZesHV9yVlUiwV9wqealh539Zqrjzm17gezxlf9Z2requ1H5JZ3FEpulSd5
1ejwqo5DJLc6sGhFxz7y+6GhRAd7NvRQQF8QvRigL0i9GNLZLUh9rtLSXNn8
2VPp2XlWkMFgMBi9BH4zhUfWjPv9hfXTX79p3bxfPNu66KeST/14a0vp81tb
SzZLfvW0/P5xyZseknzpfnn7HnnfnfJn35C3vyLvv0Hef7W83SLvb5SPq9tG
tFjyvovlseeBFuux5rO/uLb+ppNOqn6lNLLqfwtyytvn5a/cMSe8aseMnPLt
U/Irtk/IW9URzSnvyJXc6nDJq0bI28MPiXXszX3CHgrSF0QvBrcv6OfFYOwW
TOlz5dFc2f3Z/fTsPCvIYDAYuw5DDx0mhowYKvYet6844OiDxCEnjhJjV+Rl
/bx6PWQOGheP/vvEuikf1a096oPvNJ3wnuQ/b0se9DvJk34t+dLPt7WU/ETy
oR/J+9vk/Zvk/U/J+x+VHOpBifvkfd+SP7tDcqivyZ/dJI9VWix5X5OpxXpg
3cWX1dbfcdGi6l+fm18uTg+vaj81t7z9RMmtSvJWtc/PLd/xhZzyHUflr9ox
Pbxq+yTJp8ZLXpUveZbqExZUdRzMfcIeijT6gnT/DfVi8OwWNPc2mz5XpubK
4s/up2fnWUEGg8HYdRg4ZKCQGcGDwQcNEftN3l+MXDJK5JZHsn6evQGReIFY
VDdRVDTMFLetO759c0vJZ5IbfSI50D8kJ/qr5E5/lrf/KLnSm/L2r+TtV+X9
L8vbP5S3t8n7n5W3n5S3H5H4ruRX39lqarFaSq4FLdbmlrJ1tzdWrVlRf3/1
sfE/VIQrxJW5FWJ5Trm4QN4+W94+La+8fankWYslz1qUV9F+fN6qHcdInjVr
bMX2adwnzF6Y84J+fcHA/TfUi4HubY5FGj0+V+lorvx237CencFgMLodOVfm
WbmViQGDB4q9C/cRI0+UXKti9+FaMv+JubVHiCsaZoibEl8Qz7YsEpL/uNja
UrpjW2vJfyVP+pfkUX+X378vv39Xfn1Lfv+GvP81+f3P5Pcvya8vyK9b5P2+
WqzHms+4uXXttV86vbbtmiMqPm7NLReN4XKxWnKpuER5Xrm4QnKrS+Tt8+Xt
M8MV7V/MKW8/WXKrMsmzVJ8wr2LH0an6hKOWd/A84a6KoHlBS18wjF4MTl/Q
z4vBs1vQ9LmimqtY9DGP5srPn5317AwGg9HtGHfZaDFxYkgMGZKaYyGg3rXP
+H3FoUsPgx5Z1t9Dd2NWbZG4sH66uCZxrHiieaHGp6xoLdku+dJ/JG/6WPKn
v8n7/iK/viO//728/zfy57+U379iarEkr3oMtFh3riu/v7z+3nuOi795R7i8
/esSX8mtaL8ht7x9o7zdLLnU2rwKUSd5VpW8vTKnQlwub18kb5+bUynOoH1C
ybdOSNUn5HnCXRqaj6htd3M6fUG6/0bzYjB3C5p7m02fK1NzZfNnZz07g8Fg
dDsu3niA6OgIiR07QuK3vw2Jhx8OierqkDjyyJAYNCg11xo8fLA46LgRImdV
ftbfS1cxpWacOKt+mmhuPFp8r2lBaj5lRennkit9KjnTP+X3H8jbrhZrW2vp
61SL9UTzaW0b12587szaLU9Nqvzo0XCFeFDyo+9ILvVN+fV2ya2+Jm/fKHGd
vL1BcqYmyafWSD5VI4+txD5hXqW4MKM+4VUdYewTjr2i4wC3TxjqYN/Rbgrs
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
tWt+V12oXWleok7tytdLlNSu2I8hO2j6xl4p9Q7nniv/fTjIR5+13x7ikJNG
Zf19MPoPDjrOq7c65piQ+OST9LgV/Ntg6FDvtbrf1OFqn47tNQurC8WMmiK1
82Xp6iniYsmd4g2zlf4JuNN9TfPFs728f5eKR9277jJx7doWUVX/TXF6bVuy
JlXRvTWprmD4kbWe31Uikfr3/M47IY+uYcSCO7L+frqdX5l+DbSG5ec5SmpY
7t6cLtSwND8s4umeei/hbhDLQoNyEjnDIisj+0HtamzFuFG5sdwcqF2NjUWK
PHsGqVc78buyzQymrF0Ze3BSeonyjsGs4IUXB6aVs958MyTOPDMkBg6086y9
8vcWY5b3rv0jhfFCVW+YUVskjqktUrrh0rpJKn9C7+YCmUMRMNd+ZcNMFxUS
8YZZGlas6fz55Q1Hao+H51u2eqpYvHqyOEG+Drwe5OsJ8vXze8H/i74C5cFg
XFswlw++Culcp9dcY2pz5DW7xwAxpXSMOLt+qvLTXL12tvLU/Hpinvj2uvm9
XveUCTY1nyi+te4Kcc3aVrU7ZlntC+Lo+B97BY/yxw6x38TLdb2n/B0+8EDq
3/ftt5ueDcPFmEve6QXvqZs5FtlNGOg5atubk6KGZZsl1PywqKc72Us4dmVH
EdSwcmMdOZJnjYIaVmRlx345iY5hu0MNa/ry6YMPiU3aG2pXebG8kZGayGio
XeVWFxa6tavKyGzfPYPp+F11pXYFXqJQu2Iv0ayiqCasvPvSncECvP56SCxb
5s1hgIHDBomRJ3Z/LQs0LVOqx6vdHcBfzpB58pL6I0W55DkNa+eIjTJXfiUx
V9y17njxvaYFvXLWCmofj8vzgh4SeBPdKM8X+krVMtcvlzkf+Blwv6NrJ4hJ
NeOVDjrb10dPA7xDTX+roqL05sqECIlVq7zX5Ij9holbLj8q67//7sbDTeeJ
WxJ1yv9ged0jYkn1T8WM2Ht9d29M+edir7zF2u8OalO//W3w7x36iMXF5r/1
Tsz+++lufmXzHIUaVkX777tcw0rlh+W3l7Byx2ysYeWWdxRCDUvyqtF5sY6R
UMM6JNax9/TlHYN7nPD0ZCRCA6F2VVhduO9hdeMOgtpVXm3e2PzK/AjUrnIr
o5PDsYIZbu0qHllo7hlM5dWecmYwRe1KeYly7SprOKf1wIy4FcXzzydnqkOW
Wta+k/aX/96y92FMjK8uVLWeJZJbwN4zmElvlJwJvH2AhzzSvEBsae4bmuDu
BL5n2KULs2XQo/pS4guq7tLYOEfV065qmKF4JsyhQe1s2eopiqMB5kmeBnx0
JtTRJMA7aQLBzl47Ucl56fOBphteZ44EvC68Pp4L1Avh/M6Rv98L66er+h/o
lmobjhIJhx9fcd5EMXiPgdp1lJMTEn/+c+prEbQ4p5/uvQ5hB9736o7P+u+y
q3ii+QxxW6JSrF97jSivv0ecXrtNzI3/VozrL7uMDeSs+EgMOXiCZ1Y01U7o
P/0pJPbZR//dH3Li41l/P93OsUgNS3mOplPDSjFLGE7l6U73Ela0L3RrWKt2
zMit3D4Zalj5lR2RvFUdY6GGddiVHQcVVnfsq2pYiY6BPU17eirQTzSnPGc4
1K5GV0YPHxsrCKvaVSzviLHV+dOgdhWujh6bV1UwX9WuqvJPdGtX8eh5QXsG
Na/2FDODKWtX8ehnXLvqeVx/57Au8ysA1L42bAiJYcO8uW3oqGFi7BV5Kg/P
rilSOzogt4IvIs6jP9EL60y7OzZJXgf1P8CmHuK191TOFfvuqe9qHjEiJH7/
+/SuwZNO8l5/M6IjxPcbe/f1tbWlVHyv6XzJnWtFouHLYsXq+1U/b278d2J8
5SdZz+fZAPixwywg/V3CHp1U18G115q60LDIvap//T9UNSzwHE2jhpVylpB6
uvvtJSwX57k1rPL2E6GGlbeqfX64YsexUMMaW7F9Wt6q7UeoGtZVHeHRlR2H
Qw0rp7xjeD/3G1V+olC7Qj9RqF0pT4aa6HioXYGfaH5V/pycWP48qF3lxaJl
OfHoKap2VRU5Oy8WuRBqV5JPXeXWruKRtZ49g9Sr3eJ3pc0Msu6qV2HIQUPE
9OkhsX59SPzmN13nWb/+dUhMmODNcQfvP0zcftUxWc9jjN6LJxsWiJyR+2jX
DfhHvvZa6usO5lzLyrzX3aKpo8WmddmveW5tLhWPNJ2jalAb124U8fq7xIV1
T6le3lGxd0S08rOs5+zeiENPflqApxX+PkGLsGVL8LUAewwnTtSvgwPmtGb9
vXQ7x0qlw6KzhDY/LOLpru0lrBBrsYYVXiWughpWXqW4UD7ubKhh5VS2n5JX
0V6maljl7fPyV+6YA36jUMOSfGo8eDVADQv9RqGG1W/9Rokng98uHMlzZqna
Vazg+Jx4frGqXcUjp+bEomeo2lUscrHkVFeo2lU8Gg9XReuxdiV/dp1nz6DN
q536XdGZQdZdZR2gRQ8ZeQk+n8DnOl0tMcV//xsSV1xh0b0P3UPceMmsrOc6
Ru/DlqZiMatQ33szZEhIbN2a+noDj6SFC73X28mzciWv6Znzf7b5JOVtAPWn
lobrlH/5BXXfF2XVrygPc+ZPXcfwI+u03+vYsannR4GD0ceA1j3n8g+z/l66
E746LDJLqPlh2T3d3b2ERZX/um5CxccbZsTeWzez6r36o6vejs+rerN8bvy3
VxTHfnlxWfzn55XV/PSM02pfOHVZ9fMnnlG3ufiC2u8ff8HqJ49dXvfQrJW1
901dUXPfhKq62wpqa+/OrU7ccdjq1TeNqK29df8bKm/Y88FlD/Y7nTt4MqCu
3fRk8OzCqYoscP1EqyPLwJMhJx69QHKf5ap2FYtUSv5Tq2pXsWizzM1Xq9pV
PHKz5E63qtpVPPrtsLlnkHi1+/pdce0qazh4gXefGwK0DJdfnpwZzJRn3XVX
MkfS5xs2ZJC44aKZWc/njN6F047O81x7d9yRXk/Qxq1OOzrcbecG2qd7110u
bm6sV37lMIsHtSfwh4Jdel3zLWekzSNWfSaGjJik/X4vuyz1tXHCCfo1sf+0
eNbfS3civ+JzMbHyo89nxP786dz47z4qq371r1+sef7P59d9/w+XrX7ojcr6
u1+rW/P1Vxobbvzx1Q0bnv9SY2LTzYm6p+5ct/LRe9Zd/t3vNl347SdbTrv7
mZZTbt3WUnrzttaSL21tKbla3m7e2lqydltrWe3W5tLKLa0lV8nby9taSy/Y
1lJ89tbWsmVtzSUnb20uLt2yvmTBtvXFczdvWHxUW2vJkVvWF09qW7943OaN
ZXkvtCwcs2X9kkN+uLHsgOeuW7D3g4ll/curwdG1p/RkMPxEoXbl+onGIhcr
T4ZYdJWqXYGfaDySkFifrF1Fb5Q/+5qqXcUi35KPvR9qV/L+xz17Bn282rl2
lV2MLDtUDDl4qC/HAuyxR0icd15IvPtuZhwLtO+mB/zQwYPEtRfMyHpONwF7
aJ9sOs3FY01niQfWXeTi/nWXqDxL73u86Uz3+Keal2X9PfRF1C+b7LneKipS
X1vt7XYt++nH5KV8zWeal4oH112o+nXXN64TjQ03S950j+JNJ9e8KObHXxdT
q/7ay70Mdh8cfs4vxICBnbo88IZ5+eXg6+PVV/XZ5gF7DBNjLn476+/FBrjO
plR9qHzISmt+Js6s3aJmQavq7xaJhhvVNXprIibuSVyu5kXh+oXreGtrabvk
Rf+VnOhfW1tK/ybv+4v8+o78/neSK/1a/vznkiu9LO//wbbW0q3y9jPy+Mfl
Md+TP79fHvcted8d8mdfk8feKH92nfy6Xn6fkPevlsfF5e1VkmNdLo+9WH5/
rnyu0+Vxp25pLV4iedeiLetLj2trKT5mS2vZTMnBpkiOVfR8c1lUHpvzQuui
UW2JxQc/nSjery0xd1gikeg3OnfwZKC6duXJgLr2ysKJqGu3ejL4+InK+xqg
dqX8RGORG1TtKhb5hjzuLlW7ikUekHjErV3Fo22BewbZq73HAfP+s2qLxGn1
U9Xs2c2JucovALTFly0cJ/IO2deXZ+21V1LHnomXw+9+l5z/Chkc65pu4ljP
tZyk9sp+K7FC9WfA72etzJeV9d+Sn1EPqz4N7Jo9SeZN2JMGc1egeZle9X9i
QtXH6t+B3f15WVj5XzGx6h9qTh5eb1H1L+Xrv6TmvuB8Vqx+QHk7wkz9dY1N
Ms9XSb52sfzcPCXrfKcnAdfcnkMGadfGggVJ7hR0TcEsPtRVzevz2OlTxMa1
G0RDw1fVnN0ldY+p/+el1a+q3AWcqaDiv1nPp4zMsf/0au13DTsKU10nJv/e
t+iiHj1n2CMEnzMnVP9anFHbJi5f/ZCoX/M15e0KfOm+dZd2w7/LSj+XXOnf
kgd9JDnRX+V9f5K3/yBvvyF50C8lz3lFfv2x/L5NHrtJHvuUPOYRyaMekPi2
PPYu+bNvQA1Lfn+DPHajqmG1lDbI42okb6qQX6+Uj7t0W0vZ+VvXl5zV1lz8
Rfm4kyTvKmlrKTtBHvuFttbi2VtaF097vrlk4tbmRYUvtCwJtyWKRz+XWDCy
LXHS8CcSi/f62a3T+4tXg1XXDp4MqGt3PRkcXTt4Mri6dtOTwdyFE49ci36i
8rG3Q+1Kfr1Pfv9QGGpX8cjT8vstydpV9CV57KtQu5LH/Vb+7G1Vu4pHPwzz
nsFdjlk1RconCrwUb00cJ3N4ar3vjZfOFvMnHeaZk0eAFxHsHUmXY739dkiE
w16OdX1ArxDqR7BD9suNjWqmCvIlcBPgKcBZpsXeF+MqP8365353o7DyP4qX
za9+XZxS82NVU7my/gERr79D8cbWtdcqTgY74e5KrJSf0Zco7TT+m7YvAPRK
jyaWifzD9Z3N0Wh6e2/A09u8JvcZd6byTsr274+xa5Bz5cdij33Har9z0IgG
XSdvvRUSgweT62TAIDH6vNe77ZxgthM+i053uNPqhq/Lv81mcUeiXP1Nwlzo
rv5bkq+xA2pYkiN9LDnPh9ughtVa8ra8/VuoYcnvX5XHvCS//kB+3SK509Oq
htVa+pD8ep+qYbWU3i6PvUUe82WJa+XtVnl/I9Swtq0vicmfr5TfX7a1tfii
tvWl52xdX3qa5F2ntDWXLN7aUrxQcqx58rijNzcVz9jaXDb5+ebS8W0bFkY2
X714bFui9NBnEwsP/NE1J+779E3FQ+Xvpe/r3AN07eDJoOnawZMBde2xyBdd
XbvNkyEdP9FY9EnJmZ5TfqKxyI/kfT9Vtat49Dfyed9Stat45H15/D+gdiWP
+1+2OUh/AXhvnrJ6ivIUAp/NnfXXfGT1fNVvAS4UMvIZ7MmBPJfq35AI6C3m
5+vPsefQoeLK5TViVf29qiYO/84D3sR9ma4D/t9BXQ7rZ7Nif1I5YF78TVXH
ASyreUHN/5s4q3az4rB+OKf2WevjAEtqfqKee2H1a+r1wFsAXh8wsfLv6pyA
O+J5mrtQ9t47PZ3fQw95PW33CheL3JVcl+rvGFn2oPZ7P+SQkPj00+DrxZy1
2XfCJRm9JswmgO/90pofqrrzuoYvia8nqsWjzWdn/d8pLsdqLf2fqmG1lPxD
cqH35dc/ya9vSU70G6hhSa71U/n9j+T92+Tt5+TxT8r7H1Y1rJaSe+Vxd0p8
Xd73FXnc9fL2BsmtmuSxa+Qx1duaS8rl7RVtrSWXyPvPa1tfdgbUsCSXOrGt
pbR42/ri+VvWlx27ral01vPNxVPlz4/YvKGkoG3jotxNiRMP+8H64hGbrz5h
/xdvWLbngw8u6/M6d+rXDrp29GtHXbu7axB17eDJ4OjaXU8G1LXHC6pcXbvN
k8FvF0488oLM+S8pP9F45FdO7eqP8tj3VO0qFv2n/P4/XLvqGsBPCnakwX6W
6xLHioebFuyyv99vx+Z65rsQRx+d9PVLh2OBjxH4GdHH77HP6H65x4Lhj1FL
t6haAr0Obrst9fXzi18ke9T0ccMOO6rf+Rsx/LBDDD10hvb7b25O/e860I/i
8QP22FOMvfQ9z3PDv0ugh3x23SZRu+Y2Nc/wUNMFPVKD6pYaVkvpfyRX+ifU
sCQnek/e/0dVw2ot/ZXkTT9TNazWkhckP9os7/++PPYx+f2D8nHfkfd9U953
mzz2q0rn3lp6jfzagjp3+VxVqHOXj7uQ6tzl48qozn1bc9l0qnOHHiHVuff5
HmEiNBB7g+jXDrp29Gu37hqMRZbgrkGrrr0qWq/r2iM3ubp205PB3IUTi/zC
9RONR99VngzxyN/lsZ9w7Sp9gO/2yaunKM3UNxLH9ZjnI8W6s6aqPSMhg2Md
emhIvPRSehzrlVeSvkb08TAfxDly9wDMyQOnpr//pUtTXzewG2f0aP26GTw8
IsZe9n7W3xOj5zDq1G3aNbDffiHxt78FXzunnaZfNwfMWK24FNRkmxq+pHQI
m5uXZJ0n7RTHai39n+Q6n0hO9HfJjf5P4l15+/fyvtclJ/qFPOYn8pgfyq/b
5PfPSl71hNK5t5Y+II+9x9W5t5TcRHXu8vh6P5371ubSpU+3Fi95smnRosea
Fh73QNOCox9MLJz57cSCKXcmji+6PTE38tWW43JubT121M0b5h90xzVz9r3p
puKhfVnnjn7t2BtEv3bsDVJdu+vXbts1mErXHo/c6uraLZ4Mfn6iahdOLPpP
5ckQi2zPNm/pjQANOuyfg33BsJvuvnUnZP3vF2bkoC5eHbtG5BTM9nAs8G6/
7770ONbmzcn+In38PuPPzfpnN2PXA37P9Pc+ZkxI/OMfwdcLzFPMnq1fLwOH
7i8OP+eXWX8/jJ7HnrmLtGuhqir4+vnJT/RrZ7+9hohnEr3b0z9jtJZsl5zo
U/nv7n8+2rTwA5kz/nzXuuP/8LV1x735lca5r13beOwrLY3HvNjYOOf5+JrZ
m1Y2zHrqsvoZj8oc890zVk/99tLVU+4qq5t0a2ntpJtPqJ14w7zaiRslmmdU
j2+YWTO+ZlrNuIqi+LgrJS6N1kTPB64AnAG4A3AI4BLAKYBbAMcArgGcA7gH
cBDgIsBJgJsAR+lhWtRtAZ5XRSuK9qGeV+jXjp5X6Nfu9gaJrh392lHXjrsG
09K1Jz0Ztvh6MvAuHCvGVReI4rpJYmXDTLXv9/vNi7L2dwr/joN/z4HXD2g2
wSMRZofNz7iDj/uqqrWHyOcW6GK+9KX0ONZ113l7jQcdd3PWP7sZuw6HnvKs
R8PX1pb6WrnqKuNaGTBIHLLk0ay/H0Z2cPjZP5fXQOfszdChIfHOO8HX0Ny5
+jUUO+mI7HMiH4AvLsx039s0X/6bdp64NnGsu2t0xZqZ4kL5726YWYJdY/Pr
jhBH1RaJKdWF7YXVhZ9BboUcC7kWci7kXjVbJnMx5GTIzZCjIVdDzobcDTnc
yeW3Q26HHA+5HnI+5H7gAMAFgBMANwCOAFwBOANwB+AQwCWAUwC3AI4BXAM4
B3AP4CDARYCTADcBjtLTvKhbgnhe0d4geF4pv3bieYV+7eh5ZfVrt+0aTKVr
B08GqmsHTwbUtbMng8KUmnHq72NN41Fq/96WLP0dg+cTeAPAXNr5dd9XGuhM
5tcPO+unYtDeh3l40tVXp86ZMGO/bJn+OPCoOfzcX2X985vR/ci96t9i8P75
2u+7ri71dfLkk149e3/cd8LIDPuMO0u7JlasCL6OHntMv4bGjtinxz9vH2ta
oD7vYWf92rVHiXL57+mLJVc6ffUU9e/rOTVFYlLNeJEv/73dlbwCOVXNjMkc
C7kWci7kXsjBkIshJ0NuhhwNuRpyNuRuR99zr7M/+OuQ4yHXJ3e0RNcBBwAu
AJwAuAFwBOAKwBmAOwCHAC4BnAK4BXAM4BrAOYB7AAcBLgKcBLgJcBTgKj3M
jnY66C5n2hv087wCv3bqeeX6tccLrvT1a7ftGkyta3/b1bXvhp4MMNd3puRT
ibVzstbrA2+lbyTiom7NrcoTaE7sbZFfuX2nP+dAm276KwNaW1PnTthzMX68
ocUaOYVnwfohDpid0H7PhYXJvYFB18f774fEyJFGH7nwDAE652y/H0Z2MfqC
N7Ua1p57BuuwhAiJSES/lr6yfHa3fb4+1bzQ5U4NjXNUnems+mliUd1EMUPy
pmgXOVNm/ErmVJlbIcdCroWcq/yQZA6GXAw5GXIz5GjI1ZCzIXdDDk/m8sjd
kNshx0Ouh5yvdEGSAwAXAE4A3AA4AnAF4AzYIwQuAZxC6xFKzgHcg/YIgZv0
1R4h9gbB88rsDdp2Ods8r5SunXpeoa4deoM+fu2oa8ddg1Zdezzy/u6ia58q
+RT8bSXWHi3uzwKfgh7fXYmrlH/leXXPqD0e3cGl/ADeNHuOne/hWKn8aQBv
vJGczaePGz5jTdY/vxndh7GX/kkMHNy5uxnqUeDtn6q+ae6+GTw8qq61bL8f
RnYBfh/g6TJj/JiMZgnBG5keXzJtTGb1/pZF4pvrjhfXSA4Va5gtzpGf8TDD
fUT1uKznHBcyt0KOhVyrfJBk7oUcDLk4mZMjP1E5WubqZM6OPpHcuRK5P9kj
jN4BOR5yveoRytwPHAC4APYIgSMAV6A9QuASwClojxA4h9kjBG7SJ3uEAftw
cJez2Rv07HL287wCXTv2BtP0a9+ddO3T5L9Pzq6fKpoajxYPNPU8n/reuvPF
xrUblV817PbIhkd17lWfij3HzPPoax5/PDXH+vrXjT7hwMFi9HncJ+wv2Kfo
fO33e/HFqa+JG24wrolBQ8RhZ76c9ffCyB7Ah6qp4XqxqflE9bl382VHadfI
qFHBuyX+7/90rwbYOf90o1fnDrWoWxJzlX7jwvrpolhyqGk147OeZ9IB5FbI
sclcG/1A5V6Zg5O5OPKays0yRzu5ehPkbsjhSZ1P9NuQ2yHHuz1CmfuBA4RJ
jxA4AnAF2iMELuHpEUrOYfYIgZv0xR5hqt6g8rwyeoPK88rsDZq7nP08r5Qm
Ltkb9PNrV7p29GvvR7r2I+XfGvzbBfjUg7vQd8qGLS2LlW/3moZblK/j1KoP
sv65h8i54h9iyEh9nxz4FYFvUapaRXGxMY94+DGC+0B9H6YWGebpoe8XdD38
+tdJzTK9HlhztfsC9lltWLvB6kVVNGa4dp3cfnvwtVVaql9XFaccoWaKKhpm
iZNWT1b/Vs52ftlJftWezLGOzl3mXqXPQZ27zM2Qo12du8zdbo8QcrrM7VqP
UOZ+4ABaj1ByBLNHCFzC7BEC5+gvPcKguUG/3qDyvDJ7g7HoKk9v0Nzl7Od5
Bbp2pzcY9vFr74u6dvibAz7V0niMeKiH61NPNp+udsSsrP+OKK7+Za/fCQN+
ROBLFCKfYXl5IfHRR8Gfe/Bvy+HD9c++EQvvyvr7Yewc9sxZoP1ON24Mvg5A
J3PUUQbXHjNXhMt3XX+b0TsxI/ZntQ9qS3OZ7+dj4+lTtGsFdncFXV8PP2xc
W6P3zHp+6XaOhTp3mXOVLgd17jInuz1C0LnLnB2mPULoR8ncrvUIZe739Agl
RzB7hMAl0u0R9rk5Qqc3aHqKBs0N+vUGleeV2RuMRW7w9AbB84r2Bi2eV8Sv
/YO+5NcOXp6noR69aX6P8inY+dm89gZxbt0zSoOeV9n3ajhQsxiwx17a5xjs
Wk3VEwK9Fn0M+FCy72jfxahlbdrvE/Z8f/ZZ8DVw882Gz9WwA8XYS97N+nth
9BxgRxbsoYFafarPy81NxWLUgfpnTdBuVOgfmjskxl4eznrO6V5+BTk28h+3
R5jUuf+R9gghV0PO1nqEMqd7eoTgd2n0CIEjpN0j9JkjBK7SV3qEUGej+wa1
3qDhKRoOmhv06Q0qzyujN6g8rzy9wcjLWm/Q4nmV7WvPhvHVhao2vHrtUeJb
6+Yr/5Ge4FLPtZykZvpgd+/JNS+qnXHZ/mzrLoxY9E2P3j2V/yjULmbMMPtC
LVl/L4yuAXq89HeZagfOX/+a7B/Sx4xYdE/W3wejZzCu8t+iqv5utf87k8/R
SxcUZqTvq6jQr7GDjhuR9Ry0C+DvhaV6hMQLy+kRul5YpEeovLDS7BH6zhFK
DmL2CIGrAGfpCz1Cc98g1OHovkGzN2h6igbODfr1BsHzyuwNgueV2RsEz6te
1huU3FmU1k0S8YbZ4nbwn+qhXTPwuXFLolZU1N8jFlX/Mis69J7EfpOu0LnS
ASHxl78Ef/bB/pyBA0n9Yuj+Yuxlf836e/n/7F0HeBNX1pUbmG7AdGNZtmSD
6b335kILWUJoCS2EbsuSXGWPLdsQQgoJISEESAIpLKRBCASwcXqy6YX0TdlN
NpueTQ9w/8//vWPGzIw0o2LJI9tvvu98kkZPtqT35r2je887l8E7dL3spKTv
aW/8+fPqfb9qlXTdaxE3XfPPwRB4UIyePGMeLrnKp3n1cM5kCAsNqR03bdqo
131+6y15/rmR5wjFXlhCjlDwwhLnCC96YRk8yREq7CMkbiHPEfJeo8hFiJOI
c4TEWYi71D9j8uoIkdcbRG4Y61RvMCtxrLjeoDw36OQpqrZvUCk3SJ5XzrlB
zWs5JyCm5vaFTfbh/L6Q+qrdR/6dO7lcfi/xNNvbfC12reey+gTvKdmht2Qu
86TW3OLF0vmv3RCb5p+FwTtExoyX9OG+fep9/uab0ppJIRGtoOeKjzX/HAyB
xWTru7CbM/s0v9LvYvI2n57bD1rGt5KMt3vuUR9v5L9W2z5EB7Hr4jXnRP7l
V5Ic4TdOOULywvI0R6iwj5D3GpXlCIlbEMcgriHOERIXIU5C3EScIyTuQhym
3lmTp8d8XRjF2QRfhp62pO76nKQ4eb1Bg800zqneoNW4SFxv0Ck3KPcUVd03
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
OC3hV2zvIIMLUI7hsuznYR+30etcU9f2LS7t3Q/XwW+/Ka/V8pr3Had01nzu
agogPf2s3P783skDxVO84lf33efMr4S+P1KyENbnP8B7WWo9hpsaqD6lJ7+B
LHYWt2okqNc9hL7UIdSCX03gqsKHrP5PS31GdVS8pbqzcWN1TGxmdbw+q7qX
YdO5/vGZ54cmbDw/Wp9xYSLynenIsWbGZ1yYh1xoAXKipcixVsZnwFq8n4Hn
bMiXCvD6KkFetAXb34jYgfzoTjx3N56734lfZcLT+JoX2d5BBjkoz0P1JO8p
XuezVnpyf2nNsKoq5bWaatyJ27Yd0E7rOatJostQaR1d0rB7Gr/KmJnsNAYo
h7wx/z5+D5vWY7opgHL3ntTjZDnBRgS3ewhNLyI3etqJX/m4h7CheDQMWV0d
0cVS3Sp2bXV7w6bqLglZ1T2RYyUg3+odZz43wLDp/DBc58bozRcmId+ZgdfP
LORYl+vNcCXyo6uQH60ymGGdPgMykR9lu+VXmaDkzfA62zvIQCBeRX7eVDfY
V14l4Oq0JMn6u2WL8lr96686CA0Veym10H7eaoKIGiXlV2fOKPfZE09I+dU1
05IUx8IxXPMz8++FPlk/aT7GGysoVnjAg+u2vGgsvx9C67HG4B+o7iH0sQ6h
gfiVj3UIg8WjIZmrbpa8rrp1jLm6g95a3TV+U3VsgrnaGLuxOlmfcW6gt/wK
z9mRGzmw3XXY3itvBmz3Lts72LSRYnvDo/lZDeSZkGkfznttdl8qzTUtXqyu
wTIaL7UNjQzTfN5qiugwIVrSZ0ePKvcX7S0Ut1003n1to+OOy2FN3mFIyPxL
8/HemEB5/OsLS91+/9u5CWzvbSOD4h5CL+sQeuzR4IpfBaFHg1t+ZT4/PH7T
+bHxmRcmI8dKQa4zG6+lv8VnwELkRlcjN7oGudF6hBnv192bwdXeQcavGj0G
Zn0Dmws3+8ypTjtSYSs3FlJy+0t+F8dlGSEk4lItuwED1PnV3LnS9Tp2TdOp
dREs6DSji6QP7rpLub9ob6G47Zzheo/HzIHiNcjn39R87DcWrM8/6PY7v6t4
Eq+303qMMfgXdapDWBePhqD2wKoOMW6sbp5kq27TfX11x9jM6m5xlmo9cixT
Qua5Pvqsc4PiMs6PMGSeHxe/6cIUfcaFVOQ9cwzEr8ywSJ8B3nkz+MqvmDdD
owXFECiWcMIxzyde9VDJVL6ezABbb8Vrv3m3SInP6Pnzyut1QYF0ve56eQ/N
566mhm4LYiR9kJ+v3F8//CDtr5FJnb0aP6TB3lx4Hc/vtb4WGjLSbK9BhSNd
9bumeoLBWPOGoe5Q9GiopzrPQemBxVWH6rnqSORYbeuFX3ngfcW8GZoOptjO
+pwLvJ2bCHPyBkCCB3U02vRtK1mD1Wo9y/XSHSd10nzuamqg+m7iPli4UD3m
GBV1qW2HDpFOfg+e4Djy+1W5j/E5Lq2vi4aGPuYf4ZGSJarfL3mejQ2yWs0M
/oMvdZ797YGlxq808cAS8avErOronuuru+szquMMWdWJ8ZvO9Y3NPDdYbz4/
EjnWeLyOAut9xbwZmgyM5j8hK/8eqCid6fU6SDXwpuf28+ral+t5HnpIea0+
e1bKr9r0Z3sI6x0WE4SEhdT2wYgR6vxq1CiZ9/76RCgoGuVTncQdXB4Myvpa
82ukIcFdXr/SkQpX5A/SflwxBBqeeTTUkweW5h6j86vDYszVLeJzqtshx+qE
93vEbqg2xGVUu/a+YvyKoY4YbPkK9nAZXq9727nxMMVLXiWg6zxpnRy1PYS/
/y5dq1vEtdR6zmqSiGgfUdsHnTqp86usLGmfdbmsO/83Bmb34j21nnSo+8XL
QX4Os7Nf0vxaaQiYn/O02+8zt3CU5uOJoV6gDb8KVg8sb/mVv71FmfdVkwJp
NMjz0Zu17v6SqZCW179O133MyjjJ+nvtterrddeul9rSOh8E81aTA/FacZ/9
+KNyfx06JOVXUSM7SP4W1eehGtxe6bJK03gvB1ZrRxkDzN/C0RLl+lSEfcWT
wMh8GJoGfPXAaqQeoxO46vBuq6sVvUUZv2LwF1bkHnWrfxWD6ilT/RR/7OOO
MxtBF3Jp/Z0+3fN8E+WpKF+l+dzVxNB2UJSEM1VUKPfXp59K+VVkD9e+ZTPz
BsADJVO84lnbikr4GuJaXz/BiK2FZarfHeVnR2czzVWTQZDwq2DxGHXHr/zu
3c68RZscSC/saY1XAddz4/iYgz+v/fA24bXrr8mkzq8WLZKu1z2vZR4N9Y1O
qV0lfUC1i9T6LCFB1GfIpfUb4l3+XeLrG+zD3NaYFmM3Z4a+5h80v5aCCeRT
5+57W2Mfqvk4Yqg/BMxjtIF6uDN+xRBIELcqst/i8Tr2SMl0mFXHXKASmneX
ejSordW5ubI6z4tYnef6RswKvaQPqPa2Wp+ZzdI+65TSRfXvD0H+TrWlPR2b
tM+1f9Z3ml9TwYAE8zm4m1uv+n3twu82nnmINikwfiU9/F0bh3m3MwggbsXZ
t3u8fm3lxkHfAHrjtDS2lqy/v/yivFbfcINMLz2nm+ZzV1ME+ecLfRAdrQMA
5T6jGjriPms3pL3bv0/rP8VYPPVzOFB8LfTL+l7za0trLM993G1ecBjLCzY5
BIWHexDVyGH8iiFQsBXs9WjNOo1z8YqCwOcR5B5Y//yn8lq9b590rY6erh4L
YQgMWia0kvTDSy8p99m5c9hP+mZ87cKY5Xqv/s+EnL5wqGSaR+P1Li4Tksy/
aX59aQWqke1uj4rZPkLzscNQ/2D8ivErhsBjee5Rz/KBjmk+ey54i3ZD20vW
6ldeUV6rH39cyq86jI/WfO5qioie1tmtj/vn/9bB9nsjYXph1zr9L4qd3spN
8Gjc3ljE8Tkyra8zLbAh737V7+Zh5Km9PPD8ZWh8YPxKejSI2oOsNk6DwnTb
W3DaMcvtGnVv8RQYpFLTxt8gjiReq0+eVOZXFCcRtyVupvXc1RRBtR/F/dC3
b03//PdrHdx5sDnM4jpLak3WFVQLgCsc7RHHyinYrfm1Vt+gfZSPlSxS/V4W
5Q/WfNwwaIM61chphDUIGb9i8CfID+dRx2K3axPpinvb6rfGK+X4xGv1gQPK
/OrDD2Ue7n3baj53NVU069Kc74PQyFC+Hy4vjg64nxLVs3Q3hqlu4bzsZ/1y
3cSu/hJ6LH0Lus2vgi7pD0H01DshevLtteg0bS90TnsQul72JHRf8Bz0XPkJ
xG2s/xylu7j0bm6SX/kuQ8MC41eMXzEEBpQv2cnluF2XKAeTZK1fbkUgjbqY
M918szK/+u47Kb8ibbzWc1dTRZc53aHL3O68h1l9/t9rC4a6HctPOObDMMsX
Hl8jPVd8jDzpIEQNy4eWCbOhWXQfCImQasy8QWhkR2jWeQCOzznQbrAFudhO
6DrvFPKvT/1/fWf+BQeLV6p+H2m5gdn7y9AwwPgV41cMgcGavMMexa204FaE
blfGSNam4mL1/f7itpExrv0qGRo3VhcMczum7+QsLmtCx238HbpdXglRw+3Q
Qj8NwlpE+8yjfEFoZAdo0XMS8i4rdJn1GOjX1s1bYl72c6rfA/m0a91fDNqC
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
ityjbr/D5flDNB97DIGDk2+7B9p2iW+7l9p2X+sOarp3UDgCqXH31sfdWYPF
fNwbCUgfXGDf6fHeQgGPlUyDNQXD/LLPsMcyvZOWvVMnz9d78sAiLyydnFt1
i+S5hNbzXrAhZmUcNOvU3On7orjUyZOefeekhaP9BuLXt+nfTvX/zkZe5amf
lRh7uAwYavlS82slmEF7KN1p3em3EfleaD3+GAIDRd92QXvlpW9749S2C4cb
jbuKj7tc4+6Vj7uSBkvm4840WI0LFBt4pGSJ12sf1Ylebx/uM8+itZ5qNOtE
6zRpfN54w7N1ntr16OHMrVr3aetxPKUpgr6btoOinL638HAd3HmnZ9897eWU
v77LHKmHPuWk5uYNhL3Fk70eWxWlMyEz/15IyPxL8+ujIYC8hI+7yRM+hL+L
mO9oI4VYeyX3bVfQXnnl2+6ptt1qGhjM2nbhEGvcA+bjruYzmglP42te5H3c
mQar0aOv+QdwFG7zOpbF52+QZ1nsI2Fotuc6Wqq3Et4m3CmG8tJLnq3vx44h
j2rtvMa3H91R+7mugaDL3O4uaw5u3uxZH6xaJde7h/H9Svnjq/KHwD4feBVh
X/EGmGR9T/NroqHhqtwTbr/b27mJYLRq72/H4Hcoaq9qfNtNL+K5p9V8RQPl
2x5M2nbh8NTH3aUGS8HH3W8+o0yD1Wgx1fYOv775si5Wlqbw+8Hm5A6ABJWY
ln5jAjSLluaoaM/fM894tq7TvreICOnaTnr2zuldtZ7jGhx6LIuF8LbOPq7X
X+++H6juY3Ky9HUJxih4wgvduhjHHPNhZe4Rtj+wDigrvN7t93w9N071+mRo
WPBFe+WRr6iKb7tcexX0vu3yQ8HH3ZUGC6+rqXIfd499RpkGi0EGysmszHuM
X+98WScJh0umwkb7cBgg2xtOuakWsS2dvEM99be66y5n7U9YizDe20Hrea6h
InZtPK9XE3+nISE6OHDAfX+89ZYOIiOl/VG0YKB3vNyRxvsM9Mv6XvOx39CR
ZP4N9nHufx8VFY1mewobCfyivfLQV1Ti224zpeFrprrSXgWdb7v8uKhxV/MZ
RW41wpB5fhyvcffEZ9QfGizmg9Vk0M/8HXD2m3ktjK88q8KRAju4CXB1/mDe
o7t1chunWMnOnZ5xq+3ba9Z98WupPmHMqjjN57iGDn1GAkT2kNbRbt7cs3zt
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
hVqDip4MjVPX7nTQ/sjkdcmtXXk11MawyKvhYgyL9l+69BsVYlhWY7ZBiGGR
36ivMawA+mEFElSXOsM+HK/7wGm2TpbO4WNbVB9xlOUzzedmNbTpe41kjiWv
G7W9RW3aiH4743yvX/eD5p+Bwf9o3WuhZFx8/rnyuKAaheK25O+g9ftvTKjh
VtI9glFROqiq8pxXka/o1Ve75lWhEa2h/agSXjMfiPc/xXYWygqvh1OO2X6f
aw8WT4Ut3DhYYx8K03P7QS9b8OUTVf2ufI1dkZ+oELsS/ETFsSuRnyjvySDE
ri7WGiTu4MqTgbhGo/RkUDpEXg3ELwWvBuKdvFeDgt+oEMPi/UZlMSxJzRy1
GJYrHZaaH1YdPN21wODsZFhZMKRGs+UIDNciHCpeDkX2W+Gy7OeDzv+hWcdk
Sa6B6t4rzdFHjkjn5ZYJszV//wyBQeveSyV9/emnyuPi9ttl/Ip5uPsNFAuU
cyvK4b/1lufc6rnnampd6Zy4VQi0TrqS3z9cH5+lr/kHWJ9/EDnR8oDNtRWO
FLi3eAo4isbAioKhkJLbX/O8opNXuwu/K490Vy5iV+JaOELsSvAT5WNXCn6i
xB2IQwieDMQtGrkng9IRIsSwaN+kEMPivRou+o3WxrDIb/RiDIv3G1WpmWNQ
iWEZVPYSqnm6G3yoSxgsIO+HQGu2aq7/dNjDZYCtYC/vbaplLpE828XaK6rR
qjZPr10rnZ+jp+zSfP1hCAzktZLeflt5XMhr5HSctEPz998Y0P3KF5xq3XTq
5LkXO+koS0trauPoZNyqWXQf6Hb5GU0+F+3DnpX9D9hSuAWedMwJ2FwrxuOO
6bCbmwQlyLvWFQzjtfPDc5IhIeDcSlRnUM2r3ZM9g2qxKxe1cGr9RCl2ddFP
lLiC4CdKHEKIXRG3EMWuGqUng9JB+yRd+Y3WxrCyjIOEGBZ5h/kcw1LbSyjz
dHdZl9Bi/L6mHrjpT635Ul0gaLbyC0fx8edAXvcUM9/JZcOm/AMw1fYOJGT+
VW/zXNd5pyVz7jXXqM/XtP9b3L7nyk80X4MYAoO2AzdJ+vr115XHxYMPyvgV
q/FdZ8Qsex/CWnTymVtRPjAlxZlXhYSGQ9SwgqDxq+tt/gWW5p6EHVweVJam
1QvXEoP2mt9XPAVu4cYDVzgaNtqHw0L8nU3eP4NsvXkfoDqtJ7gW1qyJxu9V
6wwq+V252DPobeyKOEFt7Oqin6g4diX2E23UngzKB+83KsSwyANMHsOS1Mzx
NoblYi+hQcnTXahLaDG9VlPn2/gB1f3Gdl/wdcAtph/x8W/Y7pzWPMlfGI2/
c9bah8Ed3EQ+/hzI6/2EYx5s54pgff4DMM32Nu/jF6i5reP4GyVz7113Kc/X
P/1Ukz8U2kZ0SNZ8bmYIHKKG5kjGxrPPqmumxW3bjy7T/P03ZOjXfC3xxyC0
bKmDl17yjFsRB0tMdKFf79ALui96WfPPp4SBWd/AmrzDfJ3Y+uZZivzLkQoH
S6by3lxlRWMgF39zX1swFBblD4a03P4wJqcPXz/X1bpRswYaf6M1kdZGWiNp
raQ1s2btNL0mrzPo5NWutmfQy9iVuBaOELsS/ESJWzRmP1F3h+A3qlYzx9sY
lqofluDpLq9LaDVV8TEsq/FlPoZlNb2Ljz/G28/x8Vd4/jt8/DM+/kNrXhQI
9Lno/bClaCw8HsA84qXrexbs5rIgp2A3zMt+Dvplfe+3+UyeA3rnHeU5+9Qp
6Vzdtv86zedjhsCh/YgiSX9XVnrBr/C1Wr//BouMv6CFfprk+wwLq9E+esKt
Tp+W7kER0Dr5aojb8LP2n89DUO2MFblH+X1CtF9Ia57lCQ+j+or7iifh7+MJ
fI2RgqLRf2QWjPx5Zd6w767MG/TV7Nz+n0/J7vfxyOw+7/az9noz3mZ8mY9d
1ayp0jqDMq92l35XPsauXNXCafR+ou4P/8Ww1Pyw5HUJrcYHa+p2/397ZwIf
ZXX1fxD3fVdcSCaZYRNQQZCqiApiFkSrxaW4L7iTZSYhgcBAFtyt1rpUrVat
S61at6qVQNT62l3tatVXW61tbd++rbWvbSXP/5P/PXee88y557n3mZmQZBJy
zudzPhnCJBkmM8/9cs7v/E7iSb+G1ZmpYSW+n6lhxX/u17De9WtYH2V4Pf7P
TamGZUvo3cPMSqplpp5HXNePGnmaD6660FvdcoN3ZtNz3hHJ/+51T3Gb/Y/K
6jG2HOF1d7uv2x0d4sswnHLnGSuM3zcwlOu18dRTjK9mpov++Idq7jyjJcRG
t9ySH1uBDo57WoE2fvejv1L0f9fGJNTwQasKmlXQroKGtdg8lTPbKz9b1171
z3VtlX9Tf/5I3f69+vju+vaq36jbP1e3f7qurer7T7XNe/mbrfM6710997k7
Vx315JfTsx+9euWsh9Ith9/X1PK5u2qWH3rbRctn3HTO8kOuO7X54DUnNx24
uqrpwOVzlk5umN04ufaQhvGXTm2ceOHExvFnx6V2tVFRSA3LNkuYj6d7sJcw
Ff+qrmHBvm6oYSXjj2u+Tia+q3k7GX9F17CS8dd1DQs8R6GGNUg9RwciD2yY
4C1adrD+v8uT/bQf0ZagEb0jXeetaLlZM9eRqbe1/0yu69bmO4wJrsPjxkVf
u885x7xu73f2L4t+3ZXsv9xpWoPx+47a98317bse3lH0xz8Uc+/PP+/RPaCQ
TU35sdVNN5n9e8jNttrFG73wxaL/u/o6YXfGvIaf6V7ilSvW9Os8Ym9S8VO3
4qtP17dVfawY6i/q9h9U/m5de+Xb6nO/Usz1uuKsH6m/e0V9rkvd/q763DPq
ax9X+U319d9Qf75H3f6quv0V9bU3qI9Xq49t6utXqq9rUn9Xrz5eof580br2
ivO6OqrOUJ87dV1r1UnPtlcc//Tq4457dPW8ox9Jzz3ikfS8GQ+2zjn4661H
H3Bves7Y29KzS29Oz93npo4j9vjq0rk7pdPTtk0P79oVRs4alm2WkHu6R+0l
hH3cerdRMnGrrmEl4/fqGlYq8S1dw0rFn4Ualvr4Uk7P0SHm19CXWZYa6x21
9ABvScsMxT79r9viCTX1r6n/661suck7u+k73jGpXxneEOB1A7ttRvjX4urq
6Ov3EUeQ/xNvvq3XFx6EkoM3ee84amcS6PbofWV+sPCEPQqbb7+f8TxWVeXn
y37DDeF+4OY77O/td9bPi/7vGqgE7weYSaxddp93w8q09o9XrFEkxqr6j+Kj
TxQ3/a/ipz8pNvpA3f5v9bk31d/9THHST9T9XlUfX1KM1Kk+96y6/aS637fU
fR5Sf75Xfd1d6mtuVX++Sf3dtepza9TtVepzy9X9Gta3Vtao25d2tVdesL6t
+mz1fU7vaq34gvrcCetaK6q62qrnru+omL12zfzPrW+tntbZUTGlq2P++HVt
FeUvtc3bvytdtffz6Xm7dqVnb//sTRVbqdfRsK5dYbhqWLZZwpCnu7+XEPZq
6x1FycTlemdRMr4U9m+rP7cqNrhK/fl69eebFVvdru53t+E5mkw8HYvyHAX9
Hvg1gNYd/BpA6z4E/Rr6OmFnD8wEg/fwfQPYS+T52OozvVvSTd7FF5t9iCVL
oq/hdOcgzHYX+3oq2b8Jeh36+ojyZ+D+orvPvbPoj3+o5fbjFxnPYXl5Zgaw
N2wFsycD5Wk1mHN83T+92anfeKcuXa93UF+9ot27L31xv/icBrWrtqoNioX+
T/HR3xXr/Fl97kN1+z31ubfUn3+p2Og19bkfqo/fUx/XK2Z6Xt1+WjHUY+rj
w+rP96v73a2+5nb1NTerz12vPneVut2qPrdifXv1UqhddbZXXq5rV22V50Lt
al1H1SlQu+pqrZyv7nNcZ0fV0V1tFUd0tlfPeLG14uB1rccd8GJrdaLryuNK
X0gv2Ofljoo91l41d6en0vO37ZLaFQ2jhsU93Y0almsvYSpxFtSwylLxS3QN
K5VIxeoTyxQHpVV2KCa6Rn3djeBnpv58p/ZrSMUftO3NCfk1pBLvaL+GYaB1
35gEzzvQyadXHt7vHhC2vPbcGcY1GXxyXNdw0GXR+24z5piiXzsl+ze3G3eq
8Tt/913364Pvx9mj4v6iP/6hlHtVP2o8f1tvPcJ7/fXcbHX//eGeILDVmMUf
Fv3fNJizvO4zb0byfe+Exu/rXYkwOwTsdWe61vt266KN5KvKfyk++odiof9R
rPVH9bn31cd31J9/rRjqDXX7x+rjf6mPL6rPrVX3/Y76mifU5x5R+aD63NfV
392pPneLYqsb1ddfoz52qPul1e1l6u9SULta11ZxCdSu1P3PorUrxV2VULtS
nzuS167WXlldBrWrzo7j95LalTuoH1akpzvuJUzF50ENS33+87qGVR9fpGtY
ycRiXcNKxut0DSuZaIEalvYcTcav134NUMOie3Mi/RosWvdBvJtwMOW0xone
mcumat/hgeCt9GkHGdfl225zX8f//GfzGj5x4sHe5c0PeGc1PadnGisa3vBm
Jd/RMz/gZ1Ps66fkxue2sUrjd/7hh+7Xx8qV5utjrwVPFf3xD5Ucc9GfvFHb
7W08f9dck5ut1q8Pa9m32HWCsFUf5NjaT72Zyd961Q0/9s5uetarX/Z1r3XF
td6NK1d496Yv1Qxm19hX/Qc07dAXXO/StLdX/kB9fFl9bp26/Zz6mqcUCz0a
1K7aqr6ma1ftlV+G2pX6eKWuXbVVtUDtal1rVZ2uXbVXL4ba1fq2ikVQu+ps
r/481K4Ud82D2tX6jsrDoXbV1V51EK9ddaXn7w61q1evX7iN1K6sMTKvvYR1
8ZlQwyqrHztH17Dqyxfo+YJk4jRdw0rGz9c1rGRiia5hgeco1LBsnqMWv4ZI
rTv4uvta99gQ9nUvVoJW/mTdT5zp3bnqaK+zj/mqfsEBxrX5kUfc1/Lf/Ma8
js+fPibye3e2zfeebP2i98CqxVp3D9cl+P8hZOuK6710y41aF5ZadpfO2mX3
6r0ZkDCTfU7Td/R1beHSl3Se0Piqnh/iCbV/W05PfqDy96GcVP8374D6v4ey
Pz3Ghmpuvd+Rxu/844/dr4/LLjNfH+BbW+zHP1Ry+4lnGc/d5z4XPccL+f77
Ga9R+nWg3dr/gsG963RTSvCgP7DuL94RqXe8+Y0/9r7Y9N0NlzY9/GnT8tv/
vmbFNX+5ceXyP9y1aslvH151/ttPt57q1LQrhvq2umZ+UzHUA1rT3l51h9a0
t1V+CTTt6nPtULtSX9Osa1ftVUugdqXufz7Urro6qk+D2tW61uoFULta31Ex
B2pXXe0VM6F29WJr5WReu/reldW7QO3qkfTCLaV25Qh/LyHsu8YaFuzBhhoW
7MXWNazk2Om6hpUsPwpqWGXJRDXUsGIN8YVQw1K3z8npOUr9GvLVutt83aFP
OMR93YuZsLcUdmmBv/CN6SO9ZzZyPvHCY8flPX8P2mZ639NnlQ94P7NYCXMC
T68+xZqPrz7De3jVeda8f9XF3t3pK6x5ezql/aptCdpcZFGebS3Xajblubzl
loBVk8vvCVgV8tympzWvQn6xqTNgVqg7ulj10OTvvK13KQt+31ttFX3en3SS
zJb2Jvc5/QfGvCD0Bd96K/q5/s9/RnjTp/M5wZ28fc94o+j/nmGdNd3/Lq3t
/oe6/Vd1+0/q9vsq/1vdfrO01vuZ+vxPJtf97dVD63/30pzULzsXNPzg2dOX
rn3ywqbHv3X5sgcfSjbfdW+65aa7rmq56rYbVq666ZZ043X3pC9fo64lq59o
PX25ug41drZX16pr0mWKuS7saq86R9eu2qsXQu1KcVc11K662qqPgtrV2tUV
06F21dlRMRFqV4q5SrB29Wy6YkeoXT3yyMLhtGew4IAa1l7JKdtBDassWbZn
vDG+35jk2Fhpw7hx6s+TxjSUT1WMc2isITELfMZKUuUV4NegeOjkvDxHQesO
fg2gdU/Fv6q17uDX4NC6092ENl/34eCJNZA5vXGid8qyg71Uy6F6R3UhfqeF
8BV4d48Ypnw1XHPbrTYPft+lpdFnPtRc6OtjdeMKzX3gF0Lrk6B1Ac47dWmX
d/LSlzXXHdfwhma6w1LvetOTH+p6YtmwmE3d4G012tRALl+euy9YUxP2t5J6
YXGztKb7M8VS/1S3/6Zu/1nd/r26/Z7K3yi2+kWsxnstVuv9QN3+nrq9Xt1+
Xt1+WuVj6j4Pq6/5hsq7FYt9VX3tzer2DerzV6lsK63xVpbVek2xOi9ZXrvh
ikm1H198cP1fzpuR/P2Zs+rfOfWo1Jsnz0/+9PjjU69WqP83HbOo4blZ5zY9
c6h6v029uPnhSTUt949LLr8j1th4x37J9K17NjXduksyee126XR6ywEHlqEW
C0eMKkmXbA01rH2axu82pnb86LKlZWPK68rjJY2JCaV1iQPBV6y8vvww7ddQ
Hz/W5jka8muoTyzz/Ro6Mn4NDq073U1o83V3eWJJn7BfmQv6ismWmXqnlsuH
S/hK0pXPpecZv2+ol0Sd+WVl2ftutcWovnkMrSfp+uA3Vi3WnpJQ24Ma3qqW
G7zmltv1HP4FTU94py1dp/szs5Nvaf0fzIwV+7zNJ/eseth4jvfdd4T3ySfR
zzN4kG22GZvVPOaWov9bhnMqHtqgPn6qmOhjdfsv6vYfFCf9Tt1+W93+leKp
NxRH/Ujlfymu6lIfX1DM9B11+9sqH1H3e1Dd/+vq6+9UeYu6faPKa9XtDvVx
lbrPMnX/BvV1NYqxLlV/vkDdPruszvui+v5fKKnpPrGsrrsqtqT72NK6DbPL
r9hwmPr/ySGldZ8dWFLTM6G8ridetqRnzJjantH7XNazW/yKnh1L0j1bj1jY
I7WrPGLa4mlbQA2rpKZkZ6hh7VeX2BdqWOA5CjUs8GuAGpaxNycfvwab1t2y
mzBGfN11nzCV+H7IE0v6hEVN2I8FvcVzl03Teq4vp2d7i+YmhK8krXlf3Wzj
933iidHn/jbbZO87etdti/74wW/3sdVneV9fdan3lZXNXseKq/WM2OLmx3Xt
DPZ6gh4PdMzFOZc3eFvuMcV4ju++O/o5BvYCzwb6NeChUWy+GPaZoy+o8ieK
sb6vuOgldbtT3X5O3X5S3X5Ufc3D6n73qft/TX28TeWX1e3rFVtdqW63Kq5q
UblUfU19bIl3ubp9keKqc9XtM9TXn1JW032S4qr56v7HldV2H1O2ZMMRpTUb
Di2p/+zgsiWfTYrV94wdc3lPbL+6nn3Lkj17Kt7aea9kz3bTFvdsMeCgMlQj
PWIzqGGNaxi3A9SwwHMUalhWz1GLX0Ok1j0ZXxnSulNfd9hBCb7u0CcErTv3
xEolfoGeWKHdOTJPWNTc7eg98ta3//Sn5nX9xENLi36GSvZf3njhTOP3DT0p
12sD9n7T+04cs0vRH38h+dTqU7Un0o3pFj1zAZ7gJza+6h2WfM9L1P2rX85k
mK+kzxnsYva8aL5KJs3necvdJg6pfYKbYioW+k/QF6zt/gj7gop33sK+oGKi
HwZ9wRrvu9AXVB8fj/l9QfXxHt0XrOn+irr9JXX7avV92qEvqO7XrO6fUreX
lNV4lyiuOl/dPqukzjtN3fcL6n4nlNR0V6rbcxVXHVlSs+Fz5Us2TIst+WxK
SX3P+PgVPeVQuypJ9ewNtatxDT076NpVumezgcaUoRw5PUepX0OhWnerr3v8
TtC6hzyxoE+InlgRfcKYzBMWPfesNmfCYb+G69r+wQfmtX3GAXt5Tw3g/h/J
gc2WUw40ft/gH+p6bbz5pvnaOGrS6KI//r7KdW1VevfKzSuXKfa6WfcjKxpe
2+gd61vvc5jxnN11VzRbwfzuFluQ53nkKG+f039YdL4Yzol9QZV/z9kXrPFe
DPqCNd4TQV+wtvte3Res7b5V3b5J9wVru9fovmCNt1x9TWNJjVer7n+Z+toL
1e1z1O1F6u8WltR1f76strta3X+eYqyjymo3HB6r2zCjpOazg8prPztAcVWi
pKandP/LevZRnLVH2dKenUYv7tl2drpH/BgKD6fnqNa6142bDFp38GvQWnfw
a3Bo3UO7CZmvO/XEivWmT5iK/zHoE6YS/xpO+wkHU+69cF/jGp9Ou6/v//63
eYZuM2bb4Psc0DBea75gF1BV8xStt4c+5GUt073GlpleesXh3tXpI7zr0rO0
Bh/yjvTRes88JHh9QT62+ljvacVskH3tRSFZWJ5zjNk7fuEF92tj7VrztXHG
7HjRH/9AJPiPwB6EZctv1Zr9OQ2/NPZPuRLm/Ojztf/+mZnAKL6CPTn0a3aY
tLjofDGcUzFRt2Kgf5G+4B973Res7b4d+4Ix0LRDX7DWW6E17TVevbp9BfQF
1e3z1O0z1e1TY0u6T1b3PV4xVkXZku45sdoNs0rqNswcU/vZ1LK6zyaX1vSM
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
1vsP/D7H6Y0TvZOaD/JqW2Z416dneY+sPrborAW5rrXKe3DVBd6aFWu8i5u/
pfVcE+r+MTjYyqVn93cLRvlcRWmuXF4M0BdEL4aJ6Z4tpS84yML3bIA+oeHZ
4Gux0LOBarGs+3N8X6xA745aLLqj0KZ3t/i7O2cKxbdBUrJoeczy0d61d2/j
vf3OyMA/gO6hHLW97KEsNCc0lHuHNu3vVa3cyzujfVfviut39Fbdtp236uat
tc/FNrFttXcvaOKK/VghJ2p/+ine4uXTvdZB1F8EP/oHVi32OlZc7S1uesw7
tuHn3vi6TwrRXEX6MOQ5K/hApJ4ddwuC5gr17Mznyrr/xtdcgRcD1VyhFwP0
BcWLYRAH82xALRZ6NlAtVuCLxbRY4IvF9e50R2GU3r3QmcKYMJakZFFzXste
3kXp7fRu7xE+X+0waejvdJYsPOOpsd7spZO8M5dN1bsYb0sfNSj6i52t1d79
6Yu9tpZrvQubv+3NbfiFN67u//Jnq0JnBXPo2YPdglzPzn2uarqPoz5XVHMF
XgxUcyVeDEMj0LMhpxbL5YtFdxRyvTswVi69u22mMJdvA/XGEsaSlCxKwq7B
HQ/eOeMxOwgej+TgSN5ffHT13EHBXPeuusRb3XKdd37Tk96c5K8+i9f+6/+s
HlcOtrLOCubSs5O9zVzPHuwWjPK5itBciRfDkIicWiz0xdJ6d6rFIjsKrXp3
i7973ozl8G1w+o8KY0lKSkoOyjygYZxX2TzZu7jlED2/eP+qOcXz6mqv/Ezl
p2tbj//4a6uW/M/yllv+eHpT5/uH1n/w3wX5MOQzK8j2NnM9O+4WRM0V6Nm5
z5VoroZ4uPbnUF+sHDsKrXp3m7971Ewh923I5Y0lHu+SkpKSQzLBq2ue9qWf
7nWsPMJ7YHX/+6Oua6vaAGy1vq3q43Xtlf+j/vzHde1VH6i/e3d9e9Vvnmw9
9Rc3rlzxWk3zfT9c0PDDVybV/a3L5sOQ76xg4M/u0LO7dgtynyvZfzPEw/fF
4losvqMwp/co17vnMVMYyVjUG8vhPyqMJSkpKTn0c0LDOK2jv1gx1xrFXNqT
vo909CG2aq/8E2WrdW2Vv1B/fk3d/pG633+p+7+4rrV67YOrLni2fcU1T57f
9MSjRyfffLi89j8ZtspjVjCXnt3mIUp3C3LNlfhcDd0AXyzQu1MtFt1RaNW7
R/i7a8YCf/fe+jZE+I9aPd6FsSQlJSU3qYTZRegtgjfq1ekjvIdXFa7nomyl
/vxXzlYqf6n46nWDrdor16r7P6vyKfW5x9T9H1b5jefbTrznznT9HUuX33nL
yY2v3Hhg3V/sbFXjLdFsFeXPHqFnx92CqLkCPbv4XA3tcO0odOrdLf7utpnC
vHwboryx3B7vwliSkpKSwyhBz1XdNMW7rGW63r34rQgNfSRbtVW9ZWWrtqpO
db/nOFup+92j/u5Odd9b1e2b1O3r1N9f+fDq81rbW65Zce7Sp5qOTL6TLKvb
kHNWEP3ZXXp22S24SUagd8cdhZF6d+bvntdMIfg25OGN5fQfFcaSlJSUlCQ5
uWG8d3zTgd4Vet/1kd5jrccWxlZtla+q+77E2Up9/pvq9gPqc1+3sZX6u1aV
K9XfN6vPpda3VtY8u/oLl35lZfOFNcvuO2dBww8XTaj9ODQriP7sUXp22C0o
evZNLIjeHRgrl949aqYwkrGYN5bTf1QYS1JSUlKygIRr/5SG8Z8uaD7w49qW
mX/90soj//TY6uPyZ6u2ysdtbKXu92XFaNerr71K3W7jbKXuc6n6uwu72qvO
6eqoOkN9j1PV/U6+P33xghXLvlx5ZtPauTPrPpidS89u7G0WPfumFWQPdD4z
hb3ybYjyH7V5vNv26AhjSUpKSkqS1Nd87dsDZ0D8r5k5KD1z/u7UhglvndR8
8C8bWma+fuuqo3/8LGMrxU5Ph9iqvfIudfs2G1up+y1Tn2vobK+uVbcvW99e
vVj9/bmUrda1Vi/obK+s7Gqrnru+o2K2+lmHPbV60fRr0u0HXdD45AFz6n89
dmzy3yF/dtGzb7qBevdCZgpdvg05vbFcHu/2PTqd+dSxxB9LUlJScnilvtb7
bAVnAGUrOCP8+ajXM2dH4tWyhrEvzVp6QOfZzdOeX73i8KfvWzXn8c62Cs1W
Ku+1sZXK9vXtVWkXWyl+OrOro/q0rtaKL6j7nbCutaKqs6PyWMVXR63vqDxc
3X/Gi60VB6v7TFrXety4tVdWlz3fdur+X0mn976s6fHdKq54e0fRs2/6YfN3
zzVTmLc3lsN/1LpHJ0/Gcvpjic+7pKSk5CadmWs8XOt9ttJnQIatfH9qg63g
DMmcJepM0T2S+OPq9jcnpMY+WNE0+d7LWqbfdd3KI297vPXYLyu+ukGx1NWc
rda1VtV1tlderhjsonXtFee52Kqzo+rorraKI9avrjq0s33+1BdbKyd3dcwf
v66tonztVfPHvNR+3Oiu9Pzd1141d6en0vO3/clXF4uefdMPw98dZwp759vg
8B91ebxHMVaEHsvGWDHZVygpKSm5ySaylbr994LYCs4SwlaZvbhw5oBOBc6g
+M1wJk1tmHj1Kc1T25taZqbvWn3Mss62ykYbW6k8Hdiqq7XyRMVX1Yqf5uVi
qxfSC/Z5uaNij670CTt/99pjt3skvXDLnp4RomcfHmFlrCjfBidj+f6jNo/3
jWEsw7uBepDiLh26EzqV+E+xrwWSkpKSkn2TmWu6z1b6Wq+v+e8HbJU5EzRb
wVlRKFvpM0mdTXBGxTJnVePYhrF185omXX7p8hkXXb9y1vlPtM47y8VWnR3V
s7raK2aub62e1tlRMeXF1qoJXWvmxdX9S4StJPhMIfVtyMsby+Hxbt2jE8VY
EZp3m897sK8wGf8DMpa6zz+FsSQlJSWHfsK1HK7pMWSrzLX+fbj2B2ylz4Qc
bAVnSwRbwdkU89kKziw4uzJnmK4XnAVn24zGiV84o3naiemWI+bfu3ruceva
Ko9xsVXXlceVdrZX7/vd9LF7fu/K6l260rO3f/amiq3S6bTMCg7HWDhilIux
Qt5YUf6jtj06vWUslwcpMlYq/qZ+n6USv9Pvu1Tiz+p+f9Pvx2Ti38W+NkhK
SkpK9jLVNdy/lv8tc22P/0F9/neZa7669nO20meEz1b67OgdW8GZxdkKzjb/
jJsPZx6cfRPUGXh849SZtcumH/Ll1qMPfLajYuKLrdUJF1s98shCmRUczuHw
bYj0H3V5vBfAWK65QsODlO7SCXZCx3/uv8/egfeduv2hfh+m4v+r7vOJ+ty/
1Mfuol8nJCUlJSXzSv+a/a/MNVxdyzPX9A9jwFb6Wg/XfLj2qzNAnQUBW2XO
CM1WcHbELGylvRgLYSt1ltnYCs4+OAPhLIQzEc7GsoYJidlLDyy9oHHGfh3N
x+z1SHrerq9cvWAHxVdbC1tJQIBvQy5vLKfHe18xls3nne4rTMZf0YyVTPxU
v8+S8V/r910y/lufsT7y35f/0O9T8ciSlJSUHPTpX6v/lbl262v4R5qt1LXd
v8b/OnPNV9d+YCt1FgRsBWcEZys4S/qIreCMg7OOsxWciXA2whkJZyWcmXB2
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
rRdp+170Z9HHQGtMAStRXmI1J8pNIXbKxU/Y0+MM5dejbBxFa1IBS7G6FLIU
zvbZen1Uj077fTaekp6fhISEhMSgjRz1LarfsvUUscZFmYvXuaDfQ/XzLu6C
Woehpff7jE72cvAXZTDKYVYW83mMMxkmsopRK+M1s41N9n3pz6SPxWAln5es
zES5ibKTg5+iGCro66Hm3K9H2TiK6s91j89Wl/JZylabwl4f1U9JfUpCQkJC
YpMIwltUv4V6eVuNCz0hKHNRLRd6cfFaV8BdtMfoa+md7EXrXj5/WRnMxWGU
xTiPYVIuw0RuoZzmSuQdnhFfw78//dmUkzApL1FmcnGTlZ0YPwV1KBtD+Zpz
3ttDjqI1KfScopopylLolWCrTaEeneqnhKckJCQkJDa5gDPN18vbeoo4o0iZ
i9e5oN+D+vmg1mXhLtTS22pe+fAXZzCDw0gtLGAxn8c4kxlc5rMZzYDTaALf
FJKW78F/Dn0M+LgMVvJ5CZmJ1pwMbuLslAc/2WpRqDl3cRT8blF/Dr9zW10K
WQpn+2y9vkCPLjwlISEhITF8YiTWuHBG0cZcWOeCPg/Vz9u4y1bvwj5jFHtR
rZfBX4TBKIfZWCzgMcJkyGUGmxFGo4lc09vk34//PHwc9LHh48XHz5mJchNl
J97HwxpULobCvp6tHsU5iurP4XdP61KcpXC2j9SmZL5PQkJCQkIiGwZzUS0X
enHxWpeLu7DPyNmL170of9kYzMVhvB7GmYxyGbIZJrKLwWp9kPz70p9JHws+
PspKvN7k5CYLO7n4CetQnKFQc+7iKFqTQs8pqpkSlpKQkJCQkOiD8HuLVM9F
NfSUu1BLz/uMNvZy8RdnMMphtBaGLBbwGGMyTGSUgM9oIsuwRNZxpevr+Pen
P5s+JspKyEvITLTmZHATYycXP7kYivf1aD2KaqWwJhXopaTHJyEhISEhMVAx
knIX7TFivSuKvbDuhfxlYzBaA6MchixG62EBj2ESLsNEXqH1Mp7IN/mm6/vQ
n0UfA+UkTHz8yEvITJSbaO3Jxk6Un2gdysZQtB5l9PayHCU1KQkJCQkJicEX
IfbidS8Xf3EGoxxGa2HIYshjnMkolyGbYSK70ESu6W3avif9mfSx0BoTshLy
EjITrTlRbuLslA8/GT09YSgJCQkJCYlNMQL2cvEXZzDKYTYWQx6jTIZcRtmM
1spozawvk39/+rPx8dDHiI8b/x2cmSg3cXZy8pMwlISEhISEhIQtgA9IDYxy
GLIY5zFkMs5lmMgrlNNsiYyTK11fz38OfQyUk5CVOC8hM1FuMmpPooWSkJCQ
kJCQGJgYSZmM1seQzWgiv9BEtik0bd+L/zyDkWiNSepMEhISEhISEhISEhIS
EhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhIS
EhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhIS
EhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhIS
EhISEhISEhISEhISEhJFiP8PlB0ryw==
     "], {{0, 480}, {600, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{270.40234375, Automatic},
   ImageSizeRaw->{600, 480},
   PlotRange->{{0, 600}, {0, 480}}]}]], "Text",
 CellChangeTimes->{
  3.72779292850991*^9, 3.730589271854888*^9, {3.735569915002151*^9, 
   3.735569920326988*^9}, 3.738213714872253*^9, {3.738318797429408*^9, 
   3.7383188245653753`*^9}, 3.73831888525826*^9, {3.7383189730733223`*^9, 
   3.738318998004342*^9}, {3.738504994724742*^9, 3.73850499593753*^9}, {
   3.73920517280066*^9, 
   3.739205175423896*^9}},ExpressionUUID->"ae48f60e-1e25-4ecb-b345-\
39e7e3fea692"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Jonathan Gorard 2019",
 FontSize->24,
 FontWeight->"Bold"]], "Subtitle",
 CellChangeTimes->{{3.7201933391803827`*^9, 3.720193342066636*^9}, {
  3.726941908757318*^9, 3.7269419228992167`*^9}, {3.730588124959963*^9, 
  3.7305881263738823`*^9}, {3.730588160038538*^9, 3.730588163188789*^9}, {
  3.735569856249476*^9, 3.735569860554181*^9}, {3.738213581270075*^9, 
  3.738213653427018*^9}, {3.73821403548188*^9, 3.73821403665215*^9}, {
  3.738214299344005*^9, 3.7382143114397507`*^9}, {3.738215173385997*^9, 
  3.738215175080502*^9}, {3.7382171481707153`*^9, 3.7382171801675663`*^9}, {
  3.770419652667491*^9, 
  3.77041965286307*^9}},ExpressionUUID->"2984ddec-fe8d-47f9-86aa-\
22fb65ac2cb1"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
/w/qQILY
    "], {{0, 100}, {450, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{250.08984375, Automatic},
  ImageSizeRaw->{450, 100},
  PlotRange->{{0, 450}, {0, 100}}]], "WolframULogo",ExpressionUUID->"6449e467-\
a376-40cc-9cce-4930ea4aeb69"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"fc96e66c-467d-4859-b563-1aa5d0e6d5a3"],

Cell[CellGroupData[{

Cell["What is a Graph?", "Section",
 CellChangeTimes->{{3.71994775976054*^9, 3.7199477622405987`*^9}, {
   3.720191968879251*^9, 3.720191974055264*^9}, {3.720894915481367*^9, 
   3.72089491754312*^9}, {3.720897534619431*^9, 3.72089753512813*^9}, 
   3.7269459274619637`*^9, {3.727461147456134*^9, 3.727461151826571*^9}, {
   3.738214066909152*^9, 3.7382140708736353`*^9}, {3.738319081299457*^9, 
   3.738319085960926*^9}, {3.7385050598838587`*^9, 
   3.738505061279813*^9}},ExpressionUUID->"de85c62e-50a3-40fb-b1af-\
0adef5f1b80d"],

Cell["\<\
A graph is a very general mathematical structure for representing objects \
(i.e. nodes) with pairwise connections between them (i.e. edges).\
\>", "Text",
 CellChangeTimes->{{3.720895351338122*^9, 3.720895363454586*^9}, {
   3.722947986712829*^9, 3.722948019614134*^9}, {3.722948055580002*^9, 
   3.722948060320889*^9}, {3.722948128738435*^9, 3.722948146770947*^9}, {
   3.722948179674368*^9, 3.722948190746056*^9}, {3.7229623990675583`*^9, 
   3.7229624211024227`*^9}, {3.722962559422758*^9, 3.7229626218620043`*^9}, {
   3.7229663930401373`*^9, 3.722966397808302*^9}, 3.730638093580613*^9, {
   3.7355686410178003`*^9, 3.735568654176342*^9}, 3.735570083250284*^9, {
   3.735570334857421*^9, 3.735570373215867*^9}, {3.73821410381584*^9, 
   3.738214154988286*^9}, {3.7382145967573*^9, 3.738214598129632*^9}, {
   3.738215210234767*^9, 3.73821521404848*^9}, {3.7383190906248627`*^9, 
   3.738319110207301*^9}, {3.738319233570547*^9, 3.7383192358621798`*^9}, {
   3.738505069480801*^9, 3.7385051365232773`*^9}, {3.738505420763587*^9, 
   3.7385054377299767`*^9}, {3.7387692080539227`*^9, 3.738769210829546*^9}, {
   3.73876924562086*^9, 
   3.738769246406969*^9}},ExpressionUUID->"229cd3e1-1cdd-4f1c-87c3-\
297c2a7a6238"],

Cell[CellGroupData[{

Cell["\<\
Physics and Chemistry: models of atomic structure and topology, organic \
molecules, interacting parts of a complex system, etc.\
\>", "Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738319114771515*^9, 3.738319118203577*^9}, {
   3.738319197336651*^9, 3.738319227245799*^9}, {3.738505156174871*^9, 
   3.73850525264247*^9}},ExpressionUUID->"dadd3fd8-b2b4-412d-bb83-\
883aa9c899d2"],

Cell["\<\
Biology: models of ecosystems, spreading of diseases/parasites, functional \
connections between brain regions in neuroscience, etc.\
\>", "Item",
 CellChangeTimes->{
  3.7208955414449263`*^9, {3.72089745390917*^9, 3.720897454347945*^9}, {
   3.7229626286850147`*^9, 3.722962634148031*^9}, {3.722962694434106*^9, 
   3.722962720338231*^9}, {3.722966335004178*^9, 3.722966335969676*^9}, {
   3.7382141947458467`*^9, 3.738214204318555*^9}, {3.738319230790524*^9, 
   3.738319335573841*^9}, {3.738505216332457*^9, 3.738505223258819*^9}, {
   3.738505254864225*^9, 3.7385052828266783`*^9}, 
   3.738769248064842*^9},ExpressionUUID->"a1124c77-0b50-4d4f-bd72-\
7a242c86de2a"],

Cell["\<\
Sociology: models of actor prestige, rumor spreading, social networks, etc.\
\>", "Item",
 CellChangeTimes->{
  3.720895544004868*^9, {3.722962638564331*^9, 3.7229626391484833`*^9}, {
   3.722962724314413*^9, 3.722962727658263*^9}, {3.722966343641486*^9, 
   3.722966347737338*^9}, {3.738214206119396*^9, 3.7382142185458813`*^9}, {
   3.7383193624857273`*^9, 3.738319411025861*^9}, {3.738505284097473*^9, 
   3.738505306038582*^9}},ExpressionUUID->"b8e3381e-53d7-445a-bd85-\
b3f1338fefee"],

Cell["\<\
Technology: models of electronic circuits, network topologies, the World Wide \
Web, neural networks, etc.\
\>", "Item",
 CellChangeTimes->{
  3.720895544004868*^9, {3.722962638564331*^9, 3.7229626391484833`*^9}, {
   3.722962724314413*^9, 3.722962727658263*^9}, {3.722966343641486*^9, 
   3.722966347737338*^9}, {3.738214206119396*^9, 3.738214248361487*^9}, {
   3.738319412667095*^9, 3.738319479163299*^9}, {3.738505319186982*^9, 
   3.7385053730034637`*^9}, {3.738505811606227*^9, 
   3.7385058144387074`*^9}},ExpressionUUID->"9a945f53-b6d0-405b-9efd-\
05bb8124d25a"],

Cell["\<\
Linguistics: models of syntax trees, lexical semantic networks, phonology, \
morphology, etc.\
\>", "Item",
 CellChangeTimes->{
  3.720895544004868*^9, {3.722962638564331*^9, 3.7229626391484833`*^9}, {
   3.722962724314413*^9, 3.722962727658263*^9}, {3.722966343641486*^9, 
   3.722966347737338*^9}, {3.738214206119396*^9, 3.738214248361487*^9}, {
   3.738319412667095*^9, 3.738319479163299*^9}, {3.738505319186982*^9, 
   3.738505410986704*^9}},ExpressionUUID->"6b9cbff1-61e0-4637-b0a1-\
3986e9260991"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graph Theory in the Wolfram Language\[Trademark]", "Subsection",
 CellChangeTimes->{
  3.720191965168838*^9, {3.720192008846223*^9, 3.7201920147341347`*^9}, {
   3.722948158306416*^9, 3.722948169481823*^9}, {3.7229623424313374`*^9, 
   3.722962343923572*^9}, {3.722962387139565*^9, 3.722962389219017*^9}, 
   3.726945934265791*^9, {3.738214269266385*^9, 3.738214273668723*^9}, {
   3.738214317638513*^9, 3.738214318709203*^9}, {3.7383194857561483`*^9, 
   3.7383194954608*^9}, {3.7385056265957127`*^9, 3.738505640098118*^9}, 
   3.7387691852411423`*^9},ExpressionUUID->"992dbfd4-ea09-469f-8d63-\
1bca5a8a739e"],

Cell["\<\
The Wolfram Language provides state-of-the-art functionality for representing \
and manipulating graphs and networks:\
\>", "Text",
 CellChangeTimes->{{3.7208955152001333`*^9, 3.720895516326159*^9}, {
   3.7229481946816177`*^9, 3.7229482191123457`*^9}, {3.7229627497820053`*^9, 
   3.722962844079257*^9}, 3.722963078538446*^9, {3.7229663830405188`*^9, 
   3.7229663899685173`*^9}, 3.7355686789271517`*^9, 3.735570320360005*^9, 
   3.735570403006249*^9, {3.738214565521604*^9, 3.7382146137546167`*^9}, {
   3.7383196864319277`*^9, 3.738319706717203*^9}, {3.7383197498551893`*^9, 
   3.738319761417055*^9}, {3.7385056543560123`*^9, 
   3.7385056881254587`*^9}},ExpressionUUID->"c01cbaf6-a412-4141-be32-\
fa845ab24dec"],

Cell["Constructing and representing graphs, e.g:", "Item",
 CellChangeTimes->{
  3.720895727664579*^9, {3.7208974652292013`*^9, 3.720897465435474*^9}, {
   3.722948225080738*^9, 3.7229482415272093`*^9}, {3.738214619930661*^9, 
   3.738214705039496*^9}, {3.738214772688847*^9, 3.7382148227688007`*^9}, {
   3.7383197107761497`*^9, 3.738319731491778*^9}, {3.738520951570271*^9, 
   3.7385209589681263`*^9}},ExpressionUUID->"12b57d41-b822-4874-bb83-\
125818a14b78"],

Cell[BoxData[
 RowBox[{"Graph", ",", "GraphData", ",", "ExampleData", ",", "CompleteGraph", 
  ",", "RandomGraph", ",", "AdjacencyGraph"}]], "Input",
 CellChangeTimes->{
  3.720895727664579*^9, {3.7208974652292013`*^9, 3.720897465435474*^9}, {
   3.722948225080738*^9, 3.7229482415272093`*^9}, {3.738214619930661*^9, 
   3.738214705039496*^9}, {3.738214772688847*^9, 3.738214849206943*^9}, {
   3.738319733568687*^9, 3.7383197406419363`*^9}, 3.738319888362954*^9, {
   3.738321619897213*^9, 3.738321650330166*^9}, {3.7385209602626123`*^9, 
   3.738520962010428*^9}, {3.738521016894877*^9, 
   3.7385210266475554`*^9}},ExpressionUUID->"d444670f-a667-4f39-9c81-\
7e8142cff854"],

Cell["Visualizaing and displaying graphs, e.g:", "Item",
 CellChangeTimes->{
  3.720895727664579*^9, {3.7208974652292013`*^9, 3.720897465435474*^9}, {
   3.722948225080738*^9, 3.72294825029283*^9}, {3.738214934854147*^9, 
   3.738214976621479*^9}, {3.738320176224607*^9, 3.738320183518897*^9}, {
   3.738320227047155*^9, 3.738320237482461*^9}, {3.7385210281907*^9, 
   3.738521035417891*^9}, {3.7385210907033854`*^9, 
   3.7385210918271523`*^9}},ExpressionUUID->"c27ca05f-6cf5-45a2-90b7-\
2f72930dd02e"],

Cell[BoxData[
 RowBox[{"HighlightGraph", ",", "CommunityGraphPlot", ",", "GraphStyle", ",", 
  "GraphLayout", ",", "VertexShape"}]], "Input",
 CellChangeTimes->{
  3.720895727664579*^9, {3.7208974652292013`*^9, 3.720897465435474*^9}, {
   3.722948225080738*^9, 3.72294825029283*^9}, {3.738214934854147*^9, 
   3.738214972583263*^9}, {3.7383201852753563`*^9, 3.7383201883504467`*^9}, {
   3.738521037031506*^9, 
   3.738521051818532*^9}},ExpressionUUID->"9bc6843a-a06e-48f6-9997-\
1a1392eff5a4"],

Cell["Properties and measurements on graphs, e.g:", "Item",
 CellChangeTimes->{
  3.720895727664579*^9, {3.7208974652292013`*^9, 3.720897465435474*^9}, {
   3.722948225080738*^9, 3.722948244476821*^9}, {3.722962851990666*^9, 
   3.722962853662916*^9}, {3.738214855689336*^9, 3.7382148668369217`*^9}, {
   3.7383200789213743`*^9, 3.7383200860756683`*^9}, {3.738521055858472*^9, 
   3.738521060301955*^9}, {3.7385210935635633`*^9, 
   3.738521094494419*^9}},ExpressionUUID->"c494fa5f-df4a-490a-8bd1-\
369951b95305"],

Cell[BoxData[
 RowBox[{"GraphDistance", ",", "IsomorphicGraphQ", ",", "VertexDegree", ",", 
  "HamiltonianGraphQ"}]], "Input",
 CellChangeTimes->{{3.7383200894591703`*^9, 3.7383200992008142`*^9}, {
  3.738521061544142*^9, 
  3.738521080595285*^9}},ExpressionUUID->"906e458d-611d-42cf-8f24-\
155a0bec19b8"],

Cell["Computation on graphs, e.g:", "Item",
 CellChangeTimes->{
  3.720895727664579*^9, {3.7208974652292013`*^9, 3.720897465435474*^9}, {
   3.722948225080738*^9, 3.722948265053804*^9}, {3.722962862877737*^9, 
   3.72296287716999*^9}, {3.72296355328239*^9, 3.722963553283189*^9}, {
   3.738214995150217*^9, 3.738215010475441*^9}, {3.738320261250958*^9, 
   3.738320283643227*^9}, {3.738521084464464*^9, 
   3.7385210967981663`*^9}},ExpressionUUID->"ed9bab79-1540-48eb-aec9-\
6c6afb529794"],

Cell[BoxData[
 RowBox[{"FindShortestPath", ",", "ConnectedComponents", ",", "GraphUnion", 
  ",", "FindMaximumFlow", ",", "BreadthFirstScan"}]], "Input",
 CellChangeTimes->{
  3.720895727664579*^9, {3.7208974652292013`*^9, 3.720897465435474*^9}, {
   3.722948225080738*^9, 3.722948265053804*^9}, {3.722962862877737*^9, 
   3.72296287716999*^9}, {3.72296355328239*^9, 3.722963553283189*^9}, {
   3.738214995150217*^9, 3.7382150367632236`*^9}, {3.7383204412881393`*^9, 
   3.7383204558296757`*^9}, {3.7385210996833467`*^9, 
   3.73852112364781*^9}},ExpressionUUID->"8a7db15a-27b6-44d1-bef5-\
26f61e81f1bc"],

Cell["Social network analysis, e.g:", "Item",
 CellChangeTimes->{
  3.720895727664579*^9, {3.7208974652292013`*^9, 3.720897465435474*^9}, {
   3.722948225080738*^9, 3.722948265053804*^9}, {3.722962862877737*^9, 
   3.72296287716999*^9}, {3.72296355328239*^9, 3.722963553283189*^9}, {
   3.738214995150217*^9, 3.738215010475441*^9}, {3.738320261250958*^9, 
   3.738320283643227*^9}, {3.738521084464464*^9, 3.7385210967981663`*^9}, {
   3.738521153321432*^9, 
   3.738521159378734*^9}},ExpressionUUID->"8eb1c4de-d10d-4462-a671-\
62bd7492f69c"],

Cell[BoxData[
 RowBox[{"FindClique", ",", "BetweennessCentrality", ",", "SocialMediaData", 
  ",", "GraphAssortativity", ",", "GlobalClusteringCoefficient"}]], "Input",
 CellChangeTimes->{{3.738521161001663*^9, 
  3.738521179244482*^9}},ExpressionUUID->"83446503-af60-4cd7-9076-\
cb6efa2ad628"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"3cd59e09-9b3a-4620-a825-6c649084f5e5"],

Cell[CellGroupData[{

Cell["Construction and Representation", "Section",
 CellChangeTimes->{{3.720193671708353*^9, 3.720193680985561*^9}, 
   3.722963095470057*^9, {3.738215698883663*^9, 3.738215706609317*^9}, {
   3.738320483648518*^9, 3.7383204866349373`*^9}, {3.7383395988340263`*^9, 
   3.738339599177223*^9}, {3.7385063541074047`*^9, 
   3.738506358560895*^9}},ExpressionUUID->"97a21cea-633f-443c-91b9-\
5eec8711011e"],

Cell[CellGroupData[{

Cell["Graph", "Subsection",
 CellChangeTimes->{{3.720191928549181*^9, 3.720191928981628*^9}, {
  3.720192040485531*^9, 3.720192056101028*^9}, {3.720192751025834*^9, 
  3.720192773633411*^9}, {3.720897513105988*^9, 3.720897523010021*^9}, {
  3.7229634286088257`*^9, 3.7229634307588987`*^9}, {3.738216008055361*^9, 
  3.738216009773027*^9}, {3.7383204880329123`*^9, 3.738320490523428*^9}, {
  3.7385063622495604`*^9, 
  3.738506362799416*^9}},ExpressionUUID->"2a3342bd-7c4a-4e93-ba4a-\
b94b41e182a9"],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"{", 
   RowBox[{"e1", ",", "e2", ",", "..."}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.720193691554913*^9, 3.720193719264818*^9}, 
   3.7208962436608973`*^9, {3.720897722498321*^9, 3.72089772371522*^9}, {
   3.7229631112255096`*^9, 3.7229631206796637`*^9}, 3.727461226177184*^9, {
   3.730589638657436*^9, 3.7305896454217377`*^9}, {3.738215732363082*^9, 
   3.738215741269965*^9}, {3.7382158006530657`*^9, 3.7382158071156893`*^9}, {
   3.7383209315215673`*^9, 3.738320937029194*^9}, {3.738506367174889*^9, 
   3.7385063808200407`*^9}},ExpressionUUID->"0dcdd701-043c-4df0-a260-\
20d5b8b0da2a"],

Cell[TextData[{
 "Return a graph with edges ",
 Cell[BoxData[
  StyleBox["ej", "TI"]], "InlineFormula",ExpressionUUID->
  "b36f9d48-7a14-4f64-9f5f-e30c70b451d4"],
 ". For instance:"
}], "Text",
 CellChangeTimes->{{3.720193691554913*^9, 3.720193719264818*^9}, 
   3.7208962436608973`*^9, {3.720897722498321*^9, 3.72089772371522*^9}, {
   3.7229631112255096`*^9, 3.7229631206796637`*^9}, 3.727461226177184*^9, {
   3.730589638657436*^9, 3.7305896454217377`*^9}, {3.738215732363082*^9, 
   3.738215741269965*^9}, {3.73821580861232*^9, 3.738215830604497*^9}, {
   3.7382158814388113`*^9, 3.738215906922161*^9}, {3.738220940893993*^9, 
   3.7382209459933662`*^9}, {3.7383209382655993`*^9, 3.738320959674263*^9}, {
   3.738506383726592*^9, 3.738506394329867*^9}, {3.738582299300063*^9, 
   3.738582301213539*^9}},ExpressionUUID->"fcd649db-3190-417f-b9e6-\
ec1923208960"],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "\[TwoWayRule]", "2"}], ",", 
    RowBox[{"2", "\[TwoWayRule]", "3"}], ",", 
    RowBox[{"3", "\[TwoWayRule]", "1"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.738215927253644*^9, 3.738215928852819*^9}, {
  3.738321001710353*^9, 3.738321013154916*^9}, {3.738506425351953*^9, 
  3.738506434683681*^9}},ExpressionUUID->"949b760e-4c6c-4a5d-a6e8-\
a843e74c2204"],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "2"}], ",", 
    RowBox[{"2", "\[Rule]", "3"}], ",", 
    RowBox[{"3", "\[Rule]", "1"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.73821593082594*^9, 3.738215958395849*^9}, {
  3.738321020887752*^9, 3.7383210263258963`*^9}, {3.738506440232924*^9, 
  3.738506447376733*^9}, {3.739179984038293*^9, 
  3.739179985756022*^9}},ExpressionUUID->"b7e6df8a-f716-41ad-a6a2-\
1f359c761e80"],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "\[Rule]", 
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"i", "^", "2"}], ",", "74"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "100"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.738215967922411*^9, 3.738215974899654*^9}, {
  3.7383210539080553`*^9, 3.7383211312888527`*^9}, {3.738506462701853*^9, 
  3.73850647603337*^9}},ExpressionUUID->"b888a4d5-eae7-4586-8793-\
a2d97a65531c"],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "\[Rule]", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", "^", "2"}], ",", "74"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "100"}], "}"}]}], "]"}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", "Orange"}], ",", 
   RowBox[{"EdgeStyle", "\[Rule]", "Green"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738506680023435*^9, 
  3.738506697255666*^9}},ExpressionUUID->"c753557c-9aca-4ebf-b61c-\
660f41ec0c86"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"words", "=", 
   RowBox[{"DictionaryLookup", "[", "\"\<wol*\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nearestWords", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Thread", "[", 
         RowBox[{"#", "\[Rule]", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"Nearest", "[", 
             RowBox[{"words", ",", "#", ",", "3"}], "]"}], ",", "#"}], 
           "]"}]}], "]"}], ")"}], "&"}], ",", "words"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graph", "[", 
  RowBox[{"nearestWords", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.738215987965167*^9, 3.7382159955429497`*^9}, {
  3.738321098732329*^9, 3.738321101254657*^9}, {3.738321153680306*^9, 
  3.73832115768008*^9}, {3.738506488964006*^9, 3.738506557871806*^9}, {
  3.738506613093904*^9, 
  3.7385066261749153`*^9}},ExpressionUUID->"eb53c76d-a075-4a84-8cda-\
8ad3abacc593"],

Cell[CellGroupData[{

Cell[TextData[{
 "Internally, every Graph is converted to an optimized standard form, with \
structure ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Graph",
    BaseStyle->"Link"], "[", 
   RowBox[{
    StyleBox["vertices", "TI"], ",", 
    StyleBox["edges", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
  "43285d59-8330-405b-b2e7-6a35f8ce8c90"],
 "."
}], "Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738224406342886*^9, 3.738224429579932*^9}, 
   3.738224469531695*^9, {3.738323367586439*^9, 3.7383234371375847`*^9}, 
   3.738506709009781*^9, {3.738506739552313*^9, 3.738506772206793*^9}, 
   3.738506910460096*^9},ExpressionUUID->"0d12576c-be3e-4f10-bce1-\
4adbce3143ac"],

Cell[TextData[{
 "Functions like ",
 Cell[BoxData[
  ButtonBox["VertexCount",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "2caefa61-b09a-4864-a1fe-75fb3c2c2db9"],
 " and ",
 Cell[BoxData[
  ButtonBox["EdgeCount",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "396c6784-8bfe-49e5-8014-2f7cfffcf198"],
 " can be used to determine the size of the graph, whilst ",
 Cell[BoxData[
  ButtonBox["VertexList",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "338cedce-5743-424b-baaf-92b19e5b679c"],
 " and ",
 Cell[BoxData[
  ButtonBox["EdgeList",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "a5e7d2d6-5102-407d-b658-7e9bfe673f01"],
 " return enumerations of vertices and edges in a standard order."
}], "Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738224406342886*^9, 3.738224483410161*^9}, {
   3.738323447590673*^9, 3.738323495511243*^9}, {3.738506774050831*^9, 
   3.73850685628297*^9}},ExpressionUUID->"67bb0621-11b7-48e6-a403-\
d7789c567f00"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GraphData", "Subsection",
 CellChangeTimes->{{3.720191928549181*^9, 3.720191928981628*^9}, {
  3.720192040485531*^9, 3.720192056101028*^9}, {3.720192751025834*^9, 
  3.720192773633411*^9}, {3.720897513105988*^9, 3.720897523010021*^9}, {
  3.7229634286088257`*^9, 3.7229634307588987`*^9}, {3.738216008055361*^9, 
  3.738216039979394*^9}, {3.738339545879225*^9, 3.738339547294765*^9}, {
  3.7383395775557117`*^9, 3.738339581224544*^9}, {3.738351454900756*^9, 
  3.7383514565804996`*^9}, {3.73850689666824*^9, 
  3.738506897628421*^9}},ExpressionUUID->"14e325b2-b729-4411-a997-\
964ab35b41b5"],

Cell[BoxData[
 RowBox[{"GraphData", "[", "name", "]"}]], "Input",
 CellChangeTimes->{{3.7384360566056767`*^9, 3.738436066813675*^9}, {
  3.738506900552906*^9, 
  3.738506902380454*^9}},ExpressionUUID->"88ac651a-a66d-4d87-bc6d-\
c5c34cf89c67"],

Cell["Return a graph with the specified name. For instance:", "Text",
 CellChangeTimes->{{3.720193691554913*^9, 3.720193719264818*^9}, 
   3.7208962436608973`*^9, {3.720897722498321*^9, 3.72089772371522*^9}, {
   3.7229631112255096`*^9, 3.7229631206796637`*^9}, 3.727461226177184*^9, {
   3.730589638657436*^9, 3.7305896454217377`*^9}, {3.738215732363082*^9, 
   3.738215741269965*^9}, {3.73821580861232*^9, 3.738215830604497*^9}, {
   3.7382158814388113`*^9, 3.738215906922161*^9}, {3.738220940893993*^9, 
   3.7382209459933662`*^9}, {3.7383209382655993`*^9, 3.738320959674263*^9}, {
   3.7384360771935472`*^9, 3.738436098735458*^9}, {3.738506914206555*^9, 
   3.7385069208239393`*^9}, {3.738507608453434*^9, 3.738507609162675*^9}, {
   3.738582303799768*^9, 
   3.7385823051881323`*^9}},ExpressionUUID->"57cfa35d-3c94-4efa-94fa-\
9737a9f607f3"],

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<PappusGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.738351434508374*^9, 3.7383514381421957`*^9}, {
  3.738506933068778*^9, 
  3.738506936752009*^9}},ExpressionUUID->"66c14c75-e811-44f3-a11d-\
c71de04b22e6"],

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"GraphData", "[", 
   RowBox[{"\"\<PappusGraph\>\"", ",", "\"\<Graph\>\"", ",", "\"\<All\>\""}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.738351242823146*^9, 3.738351280097229*^9}, {
  3.738351342777934*^9, 3.738351402518199*^9}, {3.738506986292033*^9, 
  3.738507021703355*^9}},ExpressionUUID->"b1da08cc-bb2d-41d3-9686-\
ae91594b4fe7"],

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Tooltip", "@@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"GraphData", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Graph\>\"", ",", "\"\<Name\>\""}], "}"}]}], "]"}], 
        "&"}], "/@", 
       RowBox[{"GraphData", "[", 
        RowBox[{"\"\<Polyhedral\>\"", ",", "7"}], "]"}]}], ")"}]}], ",", 
    RowBox[{"UpTo", "[", "7", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7385070294663277`*^9, 
  3.738507089315497*^9}},ExpressionUUID->"1fa82b94-67f3-4069-a9c3-\
95f4ddc0e824"],

Cell[BoxData[
 RowBox[{"GraphData", "[", "\"\<ContiguousUSAGraph\>\"", "]"}]], "Input",Expre\
ssionUUID->"fa2eb196-df32-4501-b6b9-90a651705c8e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"contiguousUSA", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"EntityList", "[", 
      NamespaceBox["LinguisticAssistant",
       DynamicModuleBox[{Typeset`query$$ = 
        "all US states with District of Columbia", Typeset`boxes$$ = 
        TemplateBox[{"\"all US states with District of Columbia\"", 
          RowBox[{"EntityClass", "[", 
            
            RowBox[{"\"AdministrativeDivision\"", ",", 
              "\"AllUSStatesPlusDC\""}], "]"}], 
          "\"EntityClass[\\\"AdministrativeDivision\\\", \
\\\"AllUSStatesPlusDC\\\"]\"", "\"administrative divisions\""}, 
         "EntityClass"], Typeset`allassumptions$$ = {}, 
        Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
        Typeset`querystate$$ = {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         1.508252`6.630018903375937, "Messages" -> {}}}, 
        DynamicBox[ToBoxes[
          AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
           Dynamic[Typeset`query$$], 
           Dynamic[Typeset`boxes$$], 
           Dynamic[Typeset`allassumptions$$], 
           Dynamic[Typeset`assumptions$$], 
           Dynamic[Typeset`open$$], 
           Dynamic[Typeset`querystate$$]], StandardForm],
         ImageSizeCache->{556., {10., 23.}},
         TrackedSymbols:>{
          Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
           Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
        DynamicModuleValues:>{},
        UndoTrackedVariables:>{Typeset`open$$}],
       BaseStyle->{"Deploy"},
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       NamespaceBox["LinguisticAssistant",
        DynamicModuleBox[{Typeset`query$$ = "Alaska United States", 
         Typeset`boxes$$ = TemplateBox[{"\"Alaska, United States\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"AdministrativeDivision\"", ",", 
               RowBox[{"{", 
                 RowBox[{"\"Alaska\"", ",", "\"UnitedStates\""}], "}"}]}], 
             "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Alaska\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, 
          "Entity"], 
         Typeset`allassumptions$$ = {{
          "type" -> "Clash", "word" -> "Alaska United States", "template" -> 
           "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
           "count" -> "2", 
           "Values" -> {{
             "name" -> "USState", "desc" -> "a US state", "input" -> 
              "*C.Alaska+United+States-_*USState-"}, {
             "name" -> "HistoricalEvent", "desc" -> "a historical event", 
              "input" -> "*C.Alaska+United+States-_*HistoricalEvent-"}}}}, 
         Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
         Typeset`querystate$$ = {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.833248`6.37231927341629, "Messages" -> {}}}, 
         DynamicBox[ToBoxes[
           AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
            Dynamic[Typeset`query$$], 
            Dynamic[Typeset`boxes$$], 
            Dynamic[Typeset`allassumptions$$], 
            Dynamic[Typeset`assumptions$$], 
            Dynamic[Typeset`open$$], 
            Dynamic[Typeset`querystate$$]], StandardForm],
          ImageSizeCache->{401., {10., 23.}},
          
          TrackedSymbols:>{
           Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
            Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
         DynamicModuleValues:>{},
         UndoTrackedVariables:>{Typeset`open$$}],
        BaseStyle->{"Deploy"},
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True], ",", 
       NamespaceBox["LinguisticAssistant",
        DynamicModuleBox[{Typeset`query$$ = "Hawaii United States", 
         Typeset`boxes$$ = TemplateBox[{"\"Hawaii, United States\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"AdministrativeDivision\"", ",", 
               RowBox[{"{", 
                 RowBox[{"\"Hawaii\"", ",", "\"UnitedStates\""}], "}"}]}], 
             "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Hawaii\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, 
          "Entity"], 
         Typeset`allassumptions$$ = {{
          "type" -> "Clash", "word" -> "Hawaii United States", "template" -> 
           "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", 
           "count" -> "2", 
           "Values" -> {{
             "name" -> "USState", "desc" -> "a US state", "input" -> 
              "*C.Hawaii+United+States-_*USState-"}, {
             "name" -> "Island", "desc" -> "an island", "input" -> 
              "*C.Hawaii+United+States-_*Island-"}}}}, 
         Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
         Typeset`querystate$$ = {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          1.308628`6.568361201920034, "Messages" -> {}}}, 
         DynamicBox[ToBoxes[
           AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
            Dynamic[Typeset`query$$], 
            Dynamic[Typeset`boxes$$], 
            Dynamic[Typeset`allassumptions$$], 
            Dynamic[Typeset`assumptions$$], 
            Dynamic[Typeset`open$$], 
            Dynamic[Typeset`querystate$$]], StandardForm],
          ImageSizeCache->{400., {10., 23.}},
          
          TrackedSymbols:>{
           Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
            Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
         DynamicModuleValues:>{},
         UndoTrackedVariables:>{Typeset`open$$}],
        BaseStyle->{"Deploy"},
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"borders", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"#", "\[Rule]", 
        RowBox[{"EntityValue", "[", 
         RowBox[{"#", ",", "\"\<BorderingStates\>\""}], "]"}]}], "]"}], "&"}],
      "/@", "contiguousUSA"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UndirectedGraph", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{"contiguousUSA", ",", "borders"}], "]"}], ",", 
   RowBox[{"VertexCoordinates", "\[Rule]", 
    RowBox[{"Reverse", "/@", 
     RowBox[{"EntityValue", "[", 
      RowBox[{"contiguousUSA", ",", "\"\<Coordinates\>\""}], "]"}]}]}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"\"\<Name\>\"", ",", "Tooltip"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.738507295407596*^9, 3.738507455928132*^9}, {
  3.739117858333447*^9, 
  3.739117859294092*^9}},ExpressionUUID->"005f5dae-4c7d-483e-af97-\
8960b044c251"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["GraphData",
    BaseStyle->"Link"], "[", 
   RowBox[{
    StyleBox["name", "TI"], 
    ",", "\<\"\!\(\*StyleBox[\"property\", \"TI\"]\)\"\>"}], "]"}]], 
  "InlineFormula",ExpressionUUID->"486c5116-f398-40eb-9230-ef723ead5b41"],
 " returns a value for the specified property of the named graph."
}], "Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738224406342886*^9, 3.738224483410161*^9}, {
   3.738323447590673*^9, 3.738323495511243*^9}, {3.738351508557418*^9, 
   3.738351571341611*^9}, {3.73850759644112*^9, 3.738507629497114*^9}, {
   3.738507682363895*^9, 3.7385076823747807`*^9}, 
   3.738507732861315*^9},ExpressionUUID->"5c1f4fc1-c8d4-448c-8741-\
c36ee4cb06dc"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["GraphData",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "a36d33cd-de52-4cf7-a1b4-3f34e62e4f2d"],
 " graphs can also be used directly within the ",
 StyleBox["Combinatorica",
  FontSlant->"Italic"],
 " package."
}], "Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738224406342886*^9, 3.738224483410161*^9}, {
   3.738323447590673*^9, 3.738323495511243*^9}, {3.738351508557418*^9, 
   3.738351571341611*^9}, {3.73850759644112*^9, 3.738507629497114*^9}, {
   3.73850769305555*^9, 
   3.7385077369703417`*^9}},ExpressionUUID->"5b494336-5c30-41bb-b005-\
27b2ab0217af"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d3adc702-5983-440a-988a-42b97138b914"],

Cell[CellGroupData[{

Cell["Visualization", "Section",
 CellChangeTimes->{{3.720191937314437*^9, 3.720191944055805*^9}, {
   3.7201920192615*^9, 3.720192031965199*^9}, {3.72089749882069*^9, 
   3.720897532131872*^9}, 3.722963423770816*^9, {3.738216209424724*^9, 
   3.738216214227331*^9}, {3.738339593886856*^9, 3.738339596638701*^9}, {
   3.738340858659709*^9, 3.738340860607217*^9}, {3.738351598127592*^9, 
   3.738351599015527*^9}, {3.7385165587350607`*^9, 
   3.738516561356876*^9}},ExpressionUUID->"10f45b43-a8aa-4f9e-ac02-\
355317364bf3"],

Cell[CellGroupData[{

Cell["CommunityGraphPlot", "Subsection",
 CellChangeTimes->{{3.735568706411448*^9, 3.735568709332336*^9}, {
  3.7382207385574293`*^9, 3.738220739792665*^9}, {3.738221857004488*^9, 
  3.738221857261044*^9}, {3.738339606614029*^9, 3.738339609765202*^9}, {
  3.738351624219293*^9, 3.738351625752469*^9}, {3.7385169879288473`*^9, 
  3.738516990000655*^9}},ExpressionUUID->"7161b120-002f-4367-9dd6-\
26a6ded833d7"],

Cell[BoxData[
 RowBox[{"CommunityGraphPlot", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.7384361166428013`*^9, 3.738436121380402*^9}, {
  3.738516991390049*^9, 
  3.738516995280909*^9}},ExpressionUUID->"2c9fcc09-9374-4813-9392-\
87ac5e36379a"],

Cell[TextData[{
 "Generate a plot, demonstrating the community structure of the graph ",
 Cell[BoxData[
  StyleBox["g", "TI"]], "InlineFormula",ExpressionUUID->
  "5c29c1fb-5873-45ec-bb96-3a98cc9937ec"],
 ". For instance:"
}], "Text",
 CellChangeTimes->{{3.720193691554913*^9, 3.720193719264818*^9}, 
   3.7208962436608973`*^9, {3.720897722498321*^9, 3.72089772371522*^9}, {
   3.7229631112255096`*^9, 3.7229631206796637`*^9}, 3.727461226177184*^9, {
   3.730589638657436*^9, 3.7305896454217377`*^9}, {3.738215732363082*^9, 
   3.738215741269965*^9}, {3.73821580861232*^9, 3.738215830604497*^9}, {
   3.7382158814388113`*^9, 3.738215906922161*^9}, {3.738220940893993*^9, 
   3.7382209459933662`*^9}, {3.7383209382655993`*^9, 3.738320959674263*^9}, {
   3.7384361258039217`*^9, 3.738436148904111*^9}, {3.738517000126368*^9, 
   3.738517033272564*^9}, {3.7385823138309803`*^9, 
   3.738582315143434*^9}},ExpressionUUID->"9ed405dc-3160-4243-9fd1-\
553f987f7f10"],

Cell[BoxData[
 RowBox[{"CommunityGraphPlot", "[", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<ZacharyKarateClub\>\""}], "}"}],
    "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.73838797445986*^9, 3.7383881423942966`*^9}, {
  3.738388319499166*^9, 3.738388319842791*^9}, {3.7385170402057047`*^9, 
  3.738517053501008*^9}},ExpressionUUID->"db6da7ea-771c-41d0-a1ae-\
fa068a0f77c3"],

Cell[TextData[{
 "Internal, ",
 Cell[BoxData[
  ButtonBox["CommunityGraphPlot",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "3772d101-29ca-45ae-b34b-e10437fad39a"],
 " determines graph communities in list format using ",
 Cell[BoxData[
  ButtonBox["FindGraphCommunities",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "8c967835-6de9-460a-9b9f-5825ad33ec08"],
 "."
}], "Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738224406342886*^9, 3.738224429579932*^9}, 
   3.738224469531695*^9, {3.738224558822651*^9, 3.738224568945505*^9}, 
   3.738224721315957*^9, {3.738225063285565*^9, 3.7382250758433523`*^9}, {
   3.738225257369104*^9, 3.7382252608909903`*^9}, {3.738422464495966*^9, 
   3.738422465039856*^9}, {3.738422809845697*^9, 3.7384228521997633`*^9}, {
   3.738436178496853*^9, 3.738436179449662*^9}, {3.738436209794736*^9, 
   3.738436229302993*^9}, {3.738516941569211*^9, 3.7385169731239147`*^9}, {
   3.738517125188859*^9, 
   3.738517161474495*^9}},ExpressionUUID->"4c10bc3d-4adb-4c73-b4f9-\
50caa2006dcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["HighlightGraph", "Subsection",
 CellChangeTimes->{{3.735568706411448*^9, 3.735568709332336*^9}, {
  3.7382207385574293`*^9, 3.738220739792665*^9}, {3.738221857004488*^9, 
  3.738221857261044*^9}, {3.7382218921389503`*^9, 3.738221892991109*^9}, {
  3.73833960339359*^9, 3.73833960468993*^9}, {3.738351595243218*^9, 
  3.7383516023754253`*^9}, {3.7385165846548*^9, 
  3.738516587140237*^9}},ExpressionUUID->"c9d2a4f0-d113-44c4-b947-\
ae0c35b64ab5"],

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{"a1", ",", "a2", ",", "..."}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738230598266836*^9, 3.738230600859006*^9}, {
  3.7384222792921457`*^9, 3.738422287310752*^9}, {3.738422782535864*^9, 
  3.73842278270022*^9}, {3.73851658908589*^9, 
  3.7385166044484*^9}},ExpressionUUID->"9a05c29d-a1d3-49b5-a9d5-fd5d11d00dd9"],

Cell[TextData[{
 "Highlight each of the ",
 Cell[BoxData[
  StyleBox["ai", "TI"]], "InlineFormula",ExpressionUUID->
  "b8b74581-7cfe-4ab9-a89d-9c57c423e48b"],
 " (which can be vertices, edges, or subgraphs of ",
 Cell[BoxData[
  StyleBox["g", "TI"]], "InlineFormula",ExpressionUUID->
  "c6d2fee1-e257-4a38-b78d-4f8d01bfb06e"],
 "). For instance:"
}], "Text",
 CellChangeTimes->{{3.720193691554913*^9, 3.720193719264818*^9}, 
   3.7208962436608973`*^9, {3.720897722498321*^9, 3.72089772371522*^9}, {
   3.7229631112255096`*^9, 3.7229631206796637`*^9}, 3.727461226177184*^9, {
   3.730589638657436*^9, 3.7305896454217377`*^9}, {3.738215732363082*^9, 
   3.738215741269965*^9}, {3.73821580861232*^9, 3.738215830604497*^9}, {
   3.7382158814388113`*^9, 3.738215906922161*^9}, {3.738220940893993*^9, 
   3.7382209459933662`*^9}, {3.7383209382655993`*^9, 3.738320959674263*^9}, {
   3.7384227720203333`*^9, 3.738422802458837*^9}, {3.73851662004599*^9, 
   3.7385166551003103`*^9}, {3.738582309974572*^9, 
   3.738582311277329*^9}},ExpressionUUID->"2cf8d8d1-5132-46b5-a4a7-\
2415ee3dc036"],

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{
   RowBox[{"CompleteGraph", "[", "5", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738422293642365*^9, 3.73842229944967*^9}, {
  3.73851668345118*^9, 
  3.7385166921433992`*^9}},ExpressionUUID->"8ddce6fd-4f1c-4f17-9c53-\
b091e5a2dd39"],

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{
   RowBox[{"CompleteGraph", "[", "5", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"1", ",", "Green"}], "]"}], ",", "2", ",", "3", ",", 
     RowBox[{"1", "\[TwoWayRule]", "2"}], ",", 
     RowBox[{"3", "\[TwoWayRule]", "4"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738422666641652*^9, 3.738422669714335*^9}, {
  3.738516699881796*^9, 
  3.738516721884717*^9}},ExpressionUUID->"5187a819-6d60-4a82-bd41-\
bd4a614570e8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<LesMiserables\>\""}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"communities", "=", 
   RowBox[{"FindGraphCommunities", "[", "g", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Subgraph", "[", 
      RowBox[{"g", ",", "#"}], "]"}], "&"}], "/@", "communities"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.738422670870226*^9, 3.7384226798620157`*^9}, {
  3.738516732540442*^9, 
  3.738516775600685*^9}},ExpressionUUID->"652bf430-65d8-4cb4-937a-\
699f69eeb863"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"AdjacencyGraph", "[", 
   RowBox[{
   "Import", "[", "\"\<LinearAlgebraExamples/Data/can__229.psa\>\"", "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.738422581130673*^9, 3.7384225841128817`*^9}, {
  3.73851679343169*^9, 
  3.7385168140724993`*^9}},ExpressionUUID->"70518c9c-ed27-4791-a963-\
dbdebe562c60"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"partition", "=", 
   RowBox[{"FindGraphPartition", "[", 
    RowBox[{"g", ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Subgraph", "[", 
      RowBox[{"g", ",", "#"}], "]"}], "&"}], "/@", "partition"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.738422682750786*^9, 3.7384227024832973`*^9}, {
  3.738516820970626*^9, 
  3.738516873375617*^9}},ExpressionUUID->"6f923c50-a3ab-43da-84bf-\
d19660915f39"],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 Cell[BoxData[
  ButtonBox["SetProperty",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "ea61fe23-3f4a-4e18-a0d1-22a32bb5aa24"],
 " function can also be used to highlight particular vertices or edges."
}], "Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738224406342886*^9, 3.738224429579932*^9}, 
   3.738224469531695*^9, {3.738224558822651*^9, 3.738224568945505*^9}, 
   3.738224721315957*^9, {3.738225063285565*^9, 3.7382250758433523`*^9}, {
   3.738225257369104*^9, 3.7382252608909903`*^9}, {3.738422464495966*^9, 
   3.738422465039856*^9}, {3.738422809845697*^9, 3.7384228521997633`*^9}, {
   3.738436178496853*^9, 3.738436179449662*^9}, {3.738516926721013*^9, 
   3.738516940330184*^9}, 
   3.738516970484642*^9},ExpressionUUID->"22479585-477c-463d-a02b-\
ee30b6fa6255"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["PropertyValue",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "5c7984c5-81a2-4499-976a-0cf4a709fe69"],
 " can be applied to a highlighted graph, thereby obtaining a list of \
highlighted elements."
}], "Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738224406342886*^9, 3.738224429579932*^9}, 
   3.738224469531695*^9, {3.738224558822651*^9, 3.738224568945505*^9}, 
   3.738224721315957*^9, {3.738225063285565*^9, 3.7382250758433523`*^9}, {
   3.738225257369104*^9, 3.7382252608909903`*^9}, {3.738422464495966*^9, 
   3.738422465039856*^9}, {3.738422809845697*^9, 3.7384228521997633`*^9}, {
   3.738436178496853*^9, 3.738436179449662*^9}, {3.738436209794736*^9, 
   3.738436229302993*^9}, {3.738516941569211*^9, 
   3.7385169731239147`*^9}},ExpressionUUID->"4b41d383-ace8-440e-ad5c-\
59d3e0fa119c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b1810bed-f37e-4a94-b24c-c65f45457d7f"],

Cell[CellGroupData[{

Cell["Graph Computation", "Section",
 CellChangeTimes->{{3.7306367407962837`*^9, 3.7306367481396437`*^9}, {
  3.7382220826812277`*^9, 3.7382220872073193`*^9}, {3.738226845320752*^9, 
  3.738226848220512*^9}, {3.73833963742323*^9, 3.7383396423463697`*^9}, {
  3.738517210295535*^9, 
  3.738517211774336*^9}},ExpressionUUID->"14b4486d-fffe-4ca3-ba0e-\
aad0ce25a99d"],

Cell[CellGroupData[{

Cell["FindShortestPath", "Subsection",
 CellChangeTimes->{{3.735568706411448*^9, 3.735568709332336*^9}, {
  3.7382207385574293`*^9, 3.738220739792665*^9}, {3.738221857004488*^9, 
  3.738221857261044*^9}, {3.7382218921389503`*^9, 3.738221892991109*^9}, {
  3.7382221318249598`*^9, 3.738222133500436*^9}, {3.738339760557028*^9, 
  3.738339762349268*^9}, {3.73851721678649*^9, 
  3.738517222735165*^9}},ExpressionUUID->"a3958efa-2790-454b-a306-\
bfc49e114217"],

Cell[BoxData[
 RowBox[{"FindShortestPath", "[", 
  RowBox[{"g", ",", "s", ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.7385172243489*^9, 
  3.738517229862013*^9}},ExpressionUUID->"defa5eda-b4f0-4736-bac1-\
1cec1610e8d1"],

Cell[TextData[{
 "Find the shortest path from a source vertex ",
 Cell[BoxData[
  StyleBox["s", "TI"]], "InlineFormula",ExpressionUUID->
  "83bb876d-46d8-4d7e-a7ab-a182502aabf4"],
 " to a target vertex ",
 Cell[BoxData[
  StyleBox["t", "TI"]], "InlineFormula",ExpressionUUID->
  "739d79bb-4861-436a-9c0d-4c3b1b7ffd8c"],
 ", in the graph ",
 Cell[BoxData[
  StyleBox["g", "TI"]], "InlineFormula",ExpressionUUID->
  "d991c725-18d4-44ff-92ca-8f4a7c980bb8"],
 ". For instance:"
}], "Text",
 CellChangeTimes->{{3.720193691554913*^9, 3.720193719264818*^9}, 
   3.7208962436608973`*^9, {3.720897722498321*^9, 3.72089772371522*^9}, {
   3.7229631112255096`*^9, 3.7229631206796637`*^9}, 3.727461226177184*^9, {
   3.730589638657436*^9, 3.7305896454217377`*^9}, {3.738215732363082*^9, 
   3.738215741269965*^9}, {3.73821580861232*^9, 3.738215830604497*^9}, {
   3.7382158814388113`*^9, 3.738215906922161*^9}, {3.738220940893993*^9, 
   3.7382209459933662`*^9}, {3.7383209382655993`*^9, 3.738320959674263*^9}, {
   3.7384227720203333`*^9, 3.738422802458837*^9}, {3.73851662004599*^9, 
   3.7385166551003103`*^9}, {3.738517238141868*^9, 3.7385172543578*^9}, {
   3.738520538882372*^9, 3.738520545085306*^9}, {3.7385823188419333`*^9, 
   3.738582320245619*^9}},ExpressionUUID->"20a97c24-a133-4122-8d17-\
786d1445701e"],

Cell[BoxData[
 RowBox[{"tree", "=", 
  RowBox[{"CompleteKaryTree", "[", 
   RowBox[{"6", ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73851729282512*^9, 
  3.738517298261551*^9}},ExpressionUUID->"abcdfb62-1e8c-4ee4-8469-\
a378c6b4dd36"],

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"tree", ",", 
   RowBox[{"PathGraph", "@", 
    RowBox[{"FindShortestPath", "[", 
     RowBox[{"tree", ",", "12", ",", "57"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738517308438266*^9, 
  3.738517320637093*^9}},ExpressionUUID->"f5278d89-a5f5-438d-b53e-\
09208bd206c7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"GridGraph", "[", 
    RowBox[{"{", 
     RowBox[{"20", ",", "30"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"VertexList", "[", "g", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"stack", "=", 
           RowBox[{"{", 
            RowBox[{"RandomChoice", "[", 
             RowBox[{"VertexList", "[", "g", "]"}], "]"}], "}"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"PropertyValue", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"g", ",", "v"}], "}"}], ",", "\"\<Visited\>\""}], 
              "]"}], "=", "False"}], ",", 
            RowBox[{"{", 
             RowBox[{"v", ",", 
              RowBox[{"VertexList", "[", "g", "]"}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"g", ",", 
               RowBox[{"First", "@", "stack"}]}], "}"}], ",", 
             "\"\<Visited\>\""}], "]"}], "=", "True"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"Not", "[", 
             RowBox[{"stack", "\[Equal]", 
              RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"v", "=", 
                RowBox[{"First", "@", "stack"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"adj", "=", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"EdgeList", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"UndirectedEdge", "[", 
                    RowBox[{"v", ",", "_"}], "]"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"UndirectedEdge", "[", 
                    RowBox[{"v", ",", "u_"}], "]"}], "\[RuleDelayed]", "u"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"UndirectedEdge", "[", 
                    RowBox[{"u_", ",", "v"}], "]"}], "\[RuleDelayed]", 
                    "u"}]}], "}"}]}], ",", 
                    RowBox[{"x_", "/;", 
                    RowBox[{"!", 
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"g", ",", "x"}], "}"}], ",", "\"\<Visited\>\""}], 
                    "]"}]}]}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"adj", "\[Equal]", 
                   RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"stack", "=", 
                   RowBox[{"Rest", "@", "stack"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"w", "=", 
                    RowBox[{"RandomChoice", "[", "adj", "]"}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"stack", ",", "w"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"g", ",", "w"}], "}"}], ",", "\"\<Visited\>\""}], 
                    "]"}], "=", "True"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"UndirectedEdge", "[", 
                    RowBox[{"v", ",", "w"}], "]"}], "]"}]}]}], "]"}]}], 
                 "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], "]"}], "//", "Reap"}], 
      "//", "Last"}], "//", "First"}], ",", 
    RowBox[{"VertexCoordinates", "\[Rule]", 
     RowBox[{"GraphEmbedding", "[", "g", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.738517379526133*^9, 3.7385175584373083`*^9}, {
  3.7385176390872393`*^9, 3.738517700567895*^9}, {3.7385178162403593`*^9, 
  3.738517819043962*^9}, {3.738517876078698*^9, 3.7385179105688257`*^9}, {
  3.738517982651855*^9, 
  3.738518088357225*^9}},ExpressionUUID->"dd53a724-c3e1-424f-bd81-\
9e5eac0e139b"],

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"m", ",", 
   RowBox[{"PathGraph", "@", 
    RowBox[{"FindShortestPath", "[", 
     RowBox[{"m", ",", 
      RowBox[{"First", "@", 
       RowBox[{"VertexList", "[", "m", "]"}]}], ",", 
      RowBox[{"Last", "@", 
       RowBox[{"VertexList", "[", "m", "]"}]}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7385175655414543`*^9, {3.7385176801965446`*^9, 
   3.738517694669503*^9}},ExpressionUUID->"5216e6b4-b3ad-42ea-ae27-\
0d3b7f28e725"],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 Cell[BoxData[
  ButtonBox["Method",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "227a2672-2e7a-40ff-96a9-719491490736"],
 " option can be used to specify whether ",
 Cell[BoxData[
  ButtonBox["FindShortestPath",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "2e82ec48-1668-453b-983d-1e1354165ce9"],
 " should use Dijkstra\[CloseCurlyQuote]s algorithm (i.e. positive weights \
only), the Bellman-Ford algorithm (i.e. positive and negative weights), etc."
}], "Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738224406342886*^9, 3.738224429579932*^9}, 
   3.738224469531695*^9, {3.738224558822651*^9, 3.738224568945505*^9}, 
   3.738224721315957*^9, {3.738225063285565*^9, 3.7382250758433523`*^9}, {
   3.738225257369104*^9, 3.7382252608909903`*^9}, {3.738339863028164*^9, 
   3.738339914376266*^9}, {3.738339958667304*^9, 3.738339968073801*^9}, {
   3.738388669146062*^9, 3.738388672215674*^9}, {3.738518133236862*^9, 
   3.738518184137125*^9}, {3.73851822867846*^9, 
   3.7385182324182453`*^9}},ExpressionUUID->"a5a6d5ac-cc83-49d1-a3d3-\
6c31e6271edb"],

Cell[TextData[{
 "Internally, ",
 Cell[BoxData[
  ButtonBox["GraphDistance",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "157a360d-6dba-4c19-b91d-91790c218148"],
 " uses ",
 Cell[BoxData[
  ButtonBox["FindShortestPath",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "ee70850f-a728-4ee0-b9d0-1e94f04210c5"],
 " to compute the distance between two vertices."
}], "Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738224406342886*^9, 3.738224429579932*^9}, 
   3.738224469531695*^9, {3.738224558822651*^9, 3.738224568945505*^9}, 
   3.738224721315957*^9, {3.738225063285565*^9, 3.7382250758433523`*^9}, {
   3.738225257369104*^9, 3.7382252608909903`*^9}, {3.738339863028164*^9, 
   3.7383399253272743`*^9}, {3.738518187000572*^9, 
   3.738518242701857*^9}},ExpressionUUID->"f1c9bab1-33a8-440d-b4da-\
79bd9fb73229"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FindMaximumFlow", "Subsection",
 CellChangeTimes->{{3.735568706411448*^9, 3.735568709332336*^9}, {
  3.7382207385574293`*^9, 3.738220739792665*^9}, {3.738221857004488*^9, 
  3.738221857261044*^9}, {3.7382218921389503`*^9, 3.738221892991109*^9}, {
  3.7382221318249598`*^9, 3.738222133500436*^9}, {3.738222404274116*^9, 
  3.738222404957377*^9}, {3.738340075541934*^9, 3.738340079444332*^9}, {
  3.73851860238937*^9, 
  3.738518605100998*^9}},ExpressionUUID->"87dd82bd-d84d-44bd-a07a-\
e9683770b08f"],

Cell[BoxData[
 RowBox[{"FindMaximumFlow", "[", 
  RowBox[{"g", ",", "s", ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.738518613106823*^9, 
  3.7385186166858683`*^9}},ExpressionUUID->"a74b32ba-7c05-48f4-9170-\
a6f6830dcfef"],

Cell[TextData[{
 "Find the maximum flow between a source vertex ",
 Cell[BoxData[
  StyleBox["s", "TI"]], "InlineFormula",ExpressionUUID->
  "08cc7525-8e88-4662-9473-bc1823997877"],
 " and a target vertex ",
 Cell[BoxData[
  StyleBox["t", "TI"]], "InlineFormula",ExpressionUUID->
  "c4e12390-3268-4d32-9d92-fc39b800bfff"],
 ", in the graph ",
 Cell[BoxData[
  StyleBox["g", "TI"]], "InlineFormula",ExpressionUUID->
  "c1be6d45-8a03-4159-996d-7b1c3948be0d"],
 ", subject to capacity constraints. For instance:"
}], "Text",
 CellChangeTimes->{{3.720193691554913*^9, 3.720193719264818*^9}, 
   3.7208962436608973`*^9, {3.720897722498321*^9, 3.72089772371522*^9}, {
   3.7229631112255096`*^9, 3.7229631206796637`*^9}, 3.727461226177184*^9, {
   3.730589638657436*^9, 3.7305896454217377`*^9}, {3.738215732363082*^9, 
   3.738215741269965*^9}, {3.73821580861232*^9, 3.738215830604497*^9}, {
   3.7382158814388113`*^9, 3.738215906922161*^9}, {3.738220940893993*^9, 
   3.7382209459933662`*^9}, {3.7383209382655993`*^9, 3.738320959674263*^9}, {
   3.7384227720203333`*^9, 3.738422802458837*^9}, {3.73851662004599*^9, 
   3.7385166551003103`*^9}, {3.738517238141868*^9, 3.7385172543578*^9}, {
   3.7385186489969254`*^9, 3.738518665552558*^9}, {3.738518919225134*^9, 
   3.738518923350934*^9}, {3.738520552623831*^9, 3.73852055824582*^9}, {
   3.738582324579239*^9, 
   3.738582326004932*^9}},ExpressionUUID->"9b9a4ead-489d-4c52-9442-\
d528a4e958ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", " ", "=", " ", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "PowerStation", "PorkFuLam", "Aberdeen", "RepulseBay", "Western", 
         "Central", "HappyValley", "WanChai", "NorthPoint"}, {{{1, 2}, {1, 
         3}, {1, 4}, {2, 5}, {2, 6}, {2, 3}, {3, 2}, {3, 7}, {3, 4}, {4, 3}, {
         5, 6}, {6, 7}, {7, 6}, {6, 8}, {7, 8}, {9, 8}, {4, 9}}, Null}, {
        EdgeCapacity -> {30, 50, 40, 10, 20, 20, 20, 40, 20, 20, 5, 15, 15, 
          15, 25, 20, 40}, 
         EdgeLabels -> {
          DirectedEdge["PorkFuLam", "Central"] -> 20, 
           DirectedEdge["Western", "Central"] -> 5, 
           DirectedEdge["PowerStation", "PorkFuLam"] -> 30, 
           DirectedEdge["HappyValley", "Central"] -> 15, 
           DirectedEdge["Aberdeen", "RepulseBay"] -> 20, 
           DirectedEdge["Central", "HappyValley"] -> 15, 
           DirectedEdge["PorkFuLam", "Aberdeen"] -> 20, 
           DirectedEdge["Aberdeen", "PorkFuLam"] -> 20, 
           DirectedEdge["HappyValley", "WanChai"] -> 25, 
           DirectedEdge["PowerStation", "Aberdeen"] -> 50, 
           DirectedEdge["RepulseBay", "Aberdeen"] -> 20, 
           DirectedEdge["NorthPoint", "WanChai"] -> 20, 
           DirectedEdge["Central", "WanChai"] -> 15, 
           DirectedEdge["PorkFuLam", "Western"] -> 10, 
           DirectedEdge["Aberdeen", "HappyValley"] -> 40, 
           DirectedEdge["PowerStation", "RepulseBay"] -> 40, 
           DirectedEdge["RepulseBay", "NorthPoint"] -> 40}, EdgeStyle -> {
           Arrowheads[0.05]}, ImagePadding -> 20, 
         VertexLabels -> {
          "HappyValley" -> Placed["HappyValley", After], "PowerStation" -> 
           Placed["PowerStation", Automatic], "Western" -> 
           Placed["Western", {Below}], "RepulseBay" -> 
           Placed["RepulseBay", Automatic], "NorthPoint" -> 
           Placed["NorthPoint", Below], "PorkFuLam" -> 
           Placed["PorkFuLam", {Above, Before}], "Central" -> 
           Placed["Central", {Before, Below}], "Aberdeen" -> 
           Placed["Aberdeen", {Below, After}], "WanChai" -> 
           Placed["WanChai", {Below, After}]}}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Arrowheads[0.02862377143217669], 
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], {
          TagBox[
           StyleBox[
            ArrowBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$1"], 
          InsetBox[
           FormBox["30", TraditionalForm], 
           DynamicLocation["EdgeLabelID$1", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$2"], 
          InsetBox[
           FormBox["50", TraditionalForm], 
           DynamicLocation["EdgeLabelID$2", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$3"], 
          InsetBox[
           FormBox["40", TraditionalForm], 
           DynamicLocation["EdgeLabelID$3", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[
             BezierCurveBox[{
               DynamicLocation["VertexID$2", Automatic, Center], {
               1.3488301039128228`, 1.7219131674424233`}, 
               DynamicLocation["VertexID$3", Automatic, Center]}]], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$4"], 
          InsetBox[
           FormBox["20", TraditionalForm], 
           DynamicLocation["EdgeLabelID$4", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$5"], 
          InsetBox[
           FormBox["10", TraditionalForm], 
           DynamicLocation["EdgeLabelID$5", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$6"], 
          InsetBox[
           FormBox["20", TraditionalForm], 
           DynamicLocation["EdgeLabelID$6", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[
             BezierCurveBox[{
               DynamicLocation["VertexID$3", Automatic, Center], {
               1.3449838279591886`, 1.426866097467959}, 
               DynamicLocation["VertexID$2", Automatic, Center]}]], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$7"], 
          InsetBox[
           FormBox["20", TraditionalForm], 
           DynamicLocation["EdgeLabelID$7", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[
             BezierCurveBox[{
               DynamicLocation["VertexID$3", Automatic, Center], {
               2.26411485156056, 1.7826577586117869`}, 
               DynamicLocation["VertexID$4", Automatic, Center]}]], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$8"], 
          InsetBox[
           FormBox["20", TraditionalForm], 
           DynamicLocation["EdgeLabelID$8", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$9"], 
          InsetBox[
           FormBox["40", TraditionalForm], 
           DynamicLocation["EdgeLabelID$9", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[
             BezierCurveBox[{
               DynamicLocation["VertexID$4", Automatic, Center], {
               2.307810612162792, 1.494435851029075}, 
               DynamicLocation["VertexID$3", Automatic, Center]}]], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$10"], 
          InsetBox[
           FormBox["20", TraditionalForm], 
           DynamicLocation["EdgeLabelID$10", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$11"], 
          InsetBox[
           FormBox["40", TraditionalForm], 
           DynamicLocation["EdgeLabelID$11", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[{
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$12"], 
          InsetBox[
           FormBox["5", TraditionalForm], 
           DynamicLocation["EdgeLabelID$12", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[
             BezierCurveBox[{
               DynamicLocation["VertexID$6", Automatic, Center], {
               1.2489105457611631`, 0.6345838227104281}, 
               DynamicLocation["VertexID$7", Automatic, Center]}]], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$13"], 
          InsetBox[
           FormBox["15", TraditionalForm], 
           DynamicLocation["EdgeLabelID$13", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[{
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$14"], 
          InsetBox[
           FormBox["15", TraditionalForm], 
           DynamicLocation["EdgeLabelID$14", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[
             BezierCurveBox[{
               DynamicLocation["VertexID$7", Automatic, Center], {
               1.256492950628697, 0.40362855897891486`}, 
               DynamicLocation["VertexID$6", Automatic, Center]}]], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$15"], 
          InsetBox[
           FormBox["15", TraditionalForm], 
           DynamicLocation["EdgeLabelID$15", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[{
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$16"], 
          InsetBox[
           FormBox["25", TraditionalForm], 
           DynamicLocation["EdgeLabelID$16", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
          TagBox[
           StyleBox[
            ArrowBox[{
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}], 
            Arrowheads[0.05], StripOnInput -> False], "DynamicName", BoxID -> 
           "EdgeLabelID$17"], 
          InsetBox[
           FormBox["20", TraditionalForm], 
           DynamicLocation["EdgeLabelID$17", Automatic, 
            Scaled[0.5]], 
           ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.8209933580200066`, 2.2772681913349224`}, 
             0.030806569254368504`], "DynamicName", BoxID -> "VertexID$1"], 
           InsetBox[
            FormBox["\"PowerStation\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$1"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.8718848698879854, 1.5805820886813526`}, 
             0.030806569254368504`], "DynamicName", BoxID -> "VertexID$2"], 
           InsetBox[
            FormBox["\"PorkFuLam\"", TraditionalForm], 
            Offset[{-2, 2}, 
             DynamicLocation["VertexID$2", Automatic, {Left, Top}]], 
            ImageScaled[{1, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$2"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.8219290619840252`, 1.5681971762290297`}, 
             0.030806569254368504`], "DynamicName", BoxID -> "VertexID$3"], 
           InsetBox[
            FormBox["\"Aberdeen\"", TraditionalForm], 
            Offset[{2, -2}, 
             DynamicLocation["VertexID$3", Automatic, {Right, Bottom}]], 
            ImageScaled[{0, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$3"], 
         TagBox[{
           TagBox[
            
            DiskBox[{2.749996401739326, 1.708896433411832}, 
             0.030806569254368504`], "DynamicName", BoxID -> "VertexID$4"], 
           InsetBox[
            FormBox["\"RepulseBay\"", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$4"], 
         TagBox[{
           TagBox[
            DiskBox[{0., 1.0228691703913253`}, 0.030806569254368504`], 
            "DynamicName", BoxID -> "VertexID$5"], 
           InsetBox[
            FormBox["\"Western\"", TraditionalForm], 
            Offset[{0, -2}, 
             DynamicLocation["VertexID$5", Automatic, Bottom]], 
            ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$5"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.8808666593714356, 0.506898613750032}, 
             0.030806569254368504`], "DynamicName", BoxID -> "VertexID$6"], 
           InsetBox[
            FormBox["\"Central\"", TraditionalForm], 
            Offset[{-2, -2}, 
             DynamicLocation["VertexID$6", Automatic, {Left, Bottom}]], 
            ImageScaled[{1, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$6"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.6245368370184243`, 0.5313137679393111}, 
             0.030806569254368504`], "DynamicName", BoxID -> "VertexID$7"], 
           InsetBox[
            FormBox["\"HappyValley\"", TraditionalForm], 
            Offset[{2, 0}, 
             DynamicLocation["VertexID$7", Automatic, Right]], 
            ImageScaled[{0, 0.5}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$7"], 
         TagBox[{
           TagBox[
            DiskBox[{2.0720784382648296`, 0.}, 0.030806569254368504`], 
            "DynamicName", BoxID -> "VertexID$8"], 
           InsetBox[
            FormBox["\"WanChai\"", TraditionalForm], 
            Offset[{2, -2}, 
             DynamicLocation["VertexID$8", Automatic, {Right, Bottom}]], 
            ImageScaled[{0, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$8"], 
         TagBox[{
           TagBox[
            
            DiskBox[{3.0794482253654007`, 0.6018458040411132}, 
             0.030806569254368504`], "DynamicName", BoxID -> "VertexID$9"], 
           InsetBox[
            FormBox["\"NorthPoint\"", TraditionalForm], 
            Offset[{0, -2}, 
             DynamicLocation["VertexID$9", Automatic, Bottom]], 
            ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$9"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{8.742053387975318, 
         323.3129264573149}, {-119.5546613742414, 112.60628203990125`}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    ImagePadding->20,
    ImageSize->{320.1953125, Automatic}]}], ";"}]], "Input",
 CellChangeTimes->{{3.77093531579132*^9, 
  3.7709353157966413`*^9}},ExpressionUUID->"4520c848-8a94-4197-804e-\
b641a5b3cd55"],

Cell[BoxData[
 RowBox[{"FindMaximumFlow", "[", 
  RowBox[{"g", ",", "\"\<PowerStation\>\"", ",", "\"\<WanChai\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7385187690807734`*^9, 
  3.738518780134315*^9}},ExpressionUUID->"5012e85f-ab8b-4111-8042-\
211166b5df27"],

Cell[BoxData[
 RowBox[{"FindMaximumFlow", "[", 
  RowBox[{
  "g", ",", "\"\<PowerStation\>\"", ",", "\"\<WanChai\>\"", ",", 
   "\"\<FlowGraph\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.738518801205262*^9, 
  3.7385188118223047`*^9}},ExpressionUUID->"57fe1eca-0146-4d7a-827f-\
ed66ff40e0c6"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["FindMaximumFlow",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "af9bc610-b57d-4305-ac81-525044064193"],
 " automatically ignores self-loops and merges parallel edges; undirected \
edges are assumed to have flows in both directions simultaneously, with the \
same capacities."
}], "Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738224406342886*^9, 3.738224429579932*^9}, 
   3.738224469531695*^9, {3.738224558822651*^9, 3.738224568945505*^9}, 
   3.738224721315957*^9, {3.738225063285565*^9, 3.7382250758433523`*^9}, {
   3.738225257369104*^9, 3.7382252608909903`*^9}, {3.738339863028164*^9, 
   3.738339946601426*^9}, {3.738339982105207*^9, 3.7383400382577*^9}, {
   3.7383400955568733`*^9, 3.7383401181145363`*^9}, {3.738340234028343*^9, 
   3.738340269657699*^9}, {3.738352385445685*^9, 3.7383523864744453`*^9}, {
   3.738518934171809*^9, 3.738518974321707*^9}, 
   3.7385190172055187`*^9},ExpressionUUID->"8b680d09-581f-4be0-a7be-\
7c0094c585dd"],

Cell["\<\
Flow conservation implies that the sum of in-flows is equal to the sum of \
out-flows.\
\>", "Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738224406342886*^9, 3.738224429579932*^9}, 
   3.738224469531695*^9, {3.738224558822651*^9, 3.738224568945505*^9}, 
   3.738224721315957*^9, {3.738225063285565*^9, 3.7382250758433523`*^9}, {
   3.738225257369104*^9, 3.7382252608909903`*^9}, {3.738339863028164*^9, 
   3.738339946601426*^9}, {3.738339982105207*^9, 3.7383400382577*^9}, {
   3.7383400955568733`*^9, 3.738340097106427*^9}, {3.7383402748313017`*^9, 
   3.738340300910516*^9}, {3.738518996798993*^9, 
   3.738519012503416*^9}},ExpressionUUID->"c6d87c0b-62e9-4013-b01a-\
6f6181dee2d4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f8e44585-ecbc-4956-ab30-e47d9f1a6d54"],

Cell[CellGroupData[{

Cell["Social Network Analysis", "Section",
 CellChangeTimes->{{3.7306367407962837`*^9, 3.7306367481396437`*^9}, {
  3.7382220826812277`*^9, 3.7382220872073193`*^9}, {3.738226857553549*^9, 
  3.738226860439926*^9}, {3.7383405505219507`*^9, 3.738340552304528*^9}, {
  3.738340865930777*^9, 3.73834086829043*^9}, {3.738519165236429*^9, 
  3.738519168191325*^9}},ExpressionUUID->"938eb87c-bd5e-4a72-b1dd-\
64b3521ebd70"],

Cell[CellGroupData[{

Cell["FindClique", "Subsection",
 CellChangeTimes->{{3.735568706411448*^9, 3.735568709332336*^9}, {
  3.7382207385574293`*^9, 3.738220739792665*^9}, {3.738221857004488*^9, 
  3.738221857261044*^9}, {3.7382218921389503`*^9, 3.738221892991109*^9}, {
  3.7382221318249598`*^9, 3.738222133500436*^9}, {3.738226945009531*^9, 
  3.738226948347384*^9}, {3.7382292949666653`*^9, 3.738229296571697*^9}, {
  3.738341605284234*^9, 3.738341608888289*^9}, {3.738519173992259*^9, 
  3.738519175643772*^9}},ExpressionUUID->"58fb0701-c238-4929-91cf-\
c4cf20279d19"],

Cell[BoxData[
 RowBox[{"FindClique", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.738519046640674*^9, 3.738519054827135*^9}, {
  3.7385190903227262`*^9, 3.738519090389616*^9}, {3.738519282019*^9, 
  3.738519284833363*^9}},ExpressionUUID->"79377ab4-628b-441c-a2ab-\
58ab58509cea"],

Cell[TextData[{
 "Find a largest clique in the graph ",
 Cell[BoxData[
  StyleBox["g", "TI"]], "InlineFormula",ExpressionUUID->
  "6a62c7b7-9499-4a1a-ae5a-69a3c27cd601"],
 ". For instance:"
}], "Text",
 CellChangeTimes->{{3.720193691554913*^9, 3.720193719264818*^9}, 
   3.7208962436608973`*^9, {3.720897722498321*^9, 3.72089772371522*^9}, {
   3.7229631112255096`*^9, 3.7229631206796637`*^9}, 3.727461226177184*^9, {
   3.730589638657436*^9, 3.7305896454217377`*^9}, {3.738215732363082*^9, 
   3.738215741269965*^9}, {3.73821580861232*^9, 3.738215830604497*^9}, {
   3.7382158814388113`*^9, 3.738215906922161*^9}, {3.738220940893993*^9, 
   3.7382209459933662`*^9}, {3.7383209382655993`*^9, 3.738320959674263*^9}, {
   3.7384227720203333`*^9, 3.738422802458837*^9}, {3.73851662004599*^9, 
   3.7385166551003103`*^9}, {3.738517238141868*^9, 3.7385172543578*^9}, {
   3.738519305144889*^9, 3.738519311995317*^9}, 3.738520533475893*^9, {
   3.738582330214315*^9, 
   3.73858233335314*^9}},ExpressionUUID->"e90adac0-3af7-45a4-a61a-\
dbb09aed7f0b"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<FamilyGathering\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7385193537081633`*^9, 
  3.7385193645430927`*^9}},ExpressionUUID->"d59d9ea2-7398-4740-8da9-\
793e188ef55a"],

Cell[BoxData[
 RowBox[{"clique", "=", 
  RowBox[{"FindClique", "[", "g", "]"}]}]], "Input",
 CellChangeTimes->{{3.7385193788593903`*^9, 
  3.738519386953312*^9}},ExpressionUUID->"4f926d0c-b8ea-42ee-a3b4-\
0a5828e162e0"],

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{"Subgraph", "[", 
    RowBox[{"g", ",", "clique"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738519389249715*^9, 
  3.738519397539072*^9}},ExpressionUUID->"caabad0d-4335-4244-b37b-\
c3ab6f124b58"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<USPoliticsBooks\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.738519448111052*^9, 
  3.73851945896594*^9}},ExpressionUUID->"45712912-e1df-4eb2-89fa-\
944f8a192e95"],

Cell[BoxData[
 RowBox[{"clique", "=", 
  RowBox[{"FindClique", "[", 
   RowBox[{"{", 
    RowBox[{"g", ",", "\"\<The Clinton Wars\>\""}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7385194653370113`*^9, 
  3.738519493584947*^9}},ExpressionUUID->"95722d09-f206-442a-aeb8-\
d107f2716fd0"],

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{"Subgraph", "[", 
    RowBox[{"g", ",", "clique"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738519514046994*^9, 
  3.7385195276434507`*^9}},ExpressionUUID->"04301340-38b4-4786-9655-\
a612399b9e2a"],

Cell[TextData[{
 "For weighted graphs, ",
 Cell[BoxData[
  ButtonBox["FindClique",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "dbed9689-3976-4805-b772-35777e2322ed"],
 " returns a set of vertices with the maximum sum of vertex weights."
}], "Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738224406342886*^9, 3.738224429579932*^9}, 
   3.738224469531695*^9, {3.738224558822651*^9, 3.738224568945505*^9}, 
   3.738224721315957*^9, {3.738225159511611*^9, 3.738225182210586*^9}, {
   3.73822622162683*^9, 3.7382263105708427`*^9}, {3.738229063997291*^9, 
   3.738229097665162*^9}, {3.738229272430662*^9, 3.7382292919322777`*^9}, {
   3.7382313809614143`*^9, 3.738231493992354*^9}, {3.738231728346177*^9, 
   3.738231761911508*^9}, {3.738231861064275*^9, 3.738231883188547*^9}, {
   3.7383416762055197`*^9, 3.738341745558463*^9}, {3.738341853180642*^9, 
   3.738341858787578*^9}, {3.738343273621282*^9, 3.73834328231572*^9}, 
   3.7385195401923018`*^9, {3.738519597042102*^9, 
   3.738519620389752*^9}},ExpressionUUID->"a642dce6-da9e-403b-98a0-\
cf750d300881"]
}, Open  ]],

Cell[CellGroupData[{

Cell["BetweennessCentrality", "Subsection",
 CellChangeTimes->{{3.735568706411448*^9, 3.735568709332336*^9}, {
  3.7382207385574293`*^9, 3.738220739792665*^9}, {3.738221857004488*^9, 
  3.738221857261044*^9}, {3.7382218921389503`*^9, 3.738221892991109*^9}, {
  3.7382221318249598`*^9, 3.738222133500436*^9}, {3.738226945009531*^9, 
  3.738226948347384*^9}, {3.7382292949666653`*^9, 3.738229296571697*^9}, {
  3.738341615233314*^9, 3.738341618614873*^9}, {3.73834325053279*^9, 
  3.738343256114821*^9}, {3.738519831332473*^9, 
  3.738519835705213*^9}},ExpressionUUID->"23c017ff-fe1d-450c-a8dd-\
562054c2eb3c"],

Cell[BoxData[
 RowBox[{"BetweennessCentrality", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.738519944143507*^9, 
  3.738519952602737*^9}},ExpressionUUID->"a6fd23c0-51ad-41b6-9577-\
ac3ce17adf30"],

Cell[TextData[{
 "Return a list of betweenness centralities for the vertices in the graph ",
 Cell[BoxData[
  StyleBox["g", "TI"]], "InlineFormula",ExpressionUUID->
  "fc1a93b5-2762-4efe-b7a1-a153904ecda3"],
 ". For instance:"
}], "Text",
 CellChangeTimes->{{3.720193691554913*^9, 3.720193719264818*^9}, 
   3.7208962436608973`*^9, {3.720897722498321*^9, 3.72089772371522*^9}, {
   3.7229631112255096`*^9, 3.7229631206796637`*^9}, 3.727461226177184*^9, {
   3.730589638657436*^9, 3.7305896454217377`*^9}, {3.738215732363082*^9, 
   3.738215741269965*^9}, {3.73821580861232*^9, 3.738215830604497*^9}, {
   3.7382158814388113`*^9, 3.738215906922161*^9}, {3.738220940893993*^9, 
   3.7382209459933662`*^9}, {3.7383209382655993`*^9, 3.738320959674263*^9}, {
   3.7384227720203333`*^9, 3.738422802458837*^9}, {3.73851662004599*^9, 
   3.7385166551003103`*^9}, {3.738517238141868*^9, 3.7385172543578*^9}, {
   3.738519305144889*^9, 3.738519311995317*^9}, {3.7385199698823843`*^9, 
   3.738519978409431*^9}, 3.738520523037682*^9, {3.738582335490137*^9, 
   3.7385823367842216`*^9}},ExpressionUUID->"0c071ec2-bb2c-4f37-ab86-\
9f944bc18de0"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<ZacharyKarateClub\>\""}], "}"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.7385200424529448`*^9, 
  3.7385200515325413`*^9}},ExpressionUUID->"c32f21d6-9aaa-498b-8a4a-\
8e1a29c29745"],

Cell[BoxData[
 RowBox[{"agents", "=", 
  RowBox[{"Part", "[", 
   RowBox[{
    RowBox[{"VertexList", "[", "g", "]"}], ",", 
    RowBox[{"Ordering", "[", 
     RowBox[{
      RowBox[{"BetweennessCentrality", "[", "g", "]"}], ",", 
      RowBox[{"-", "5"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.738520183186667*^9, 
  3.738520198870677*^9}},ExpressionUUID->"90e7ca60-274d-4d6e-bfff-\
7f2f048bec67"],

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", "agents"}], "]"}]], "Input",
 CellChangeTimes->{{3.738520200192835*^9, 
  3.738520206063856*^9}},ExpressionUUID->"3cbe275b-8794-4adc-9fc0-\
154c82ce8472"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<PowerGrid\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7385202420262012`*^9, 
  3.738520251339787*^9}},ExpressionUUID->"b29cb967-673c-469b-a66f-\
d8baea8b230b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"critical", "=", 
   RowBox[{"BetweennessCentrality", "[", "g", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"criticalNode", "=", 
  RowBox[{"Pick", "[", 
   RowBox[{
    RowBox[{"VertexList", "[", "g", "]"}], ",", "critical", ",", 
    RowBox[{"Max", "[", "critical", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.738520292733634*^9, 
  3.738520329884863*^9}},ExpressionUUID->"133911c2-9f3f-4223-8309-\
2c85cd8f9001"],

Cell[BoxData[
 RowBox[{"NeighborhoodGraph", "[", 
  RowBox[{"g", ",", "criticalNode", ",", "3", ",", 
   RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringEmbedding\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7385203387598133`*^9, 3.738520357189211*^9}, {
  3.7391161128156652`*^9, 
  3.7391161137904053`*^9}},ExpressionUUID->"740bf635-2563-48ed-9725-\
22eaf519fe6a"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["VertexIndex",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "4c1b3784-2d60-4bce-a493-9f792fe71a04"],
 " can be used to obtain the centrality of the individual vertices."
}], "Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738224406342886*^9, 3.738224429579932*^9}, 
   3.738224469531695*^9, {3.738224558822651*^9, 3.738224568945505*^9}, 
   3.738224721315957*^9, {3.738225159511611*^9, 3.738225182210586*^9}, {
   3.73822622162683*^9, 3.7382263105708427`*^9}, {3.738229063997291*^9, 
   3.738229097665162*^9}, {3.738229272430662*^9, 3.7382292919322777`*^9}, {
   3.7382313809614143`*^9, 3.738231493992354*^9}, {3.738231728346177*^9, 
   3.738231761911508*^9}, {3.738231861064275*^9, 3.738231883188547*^9}, {
   3.7383416762055197`*^9, 3.738341745558463*^9}, {3.738341853180642*^9, 
   3.738341858787578*^9}, {3.738343273621282*^9, 3.73834328231572*^9}, 
   3.7385195401923018`*^9, {3.738519597042102*^9, 3.738519620389752*^9}, {
   3.738520489090046*^9, 3.738520527093749*^9}, {3.770652701803355*^9, 
   3.770652705898381*^9}},ExpressionUUID->"d65541d9-4e1a-4ed2-b617-\
b233ee2bc7c1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f4da83e0-a659-43c6-acd7-587db26477fb"],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{
  3.720192656070273*^9},ExpressionUUID->"4f46b79f-c929-4791-93b7-\
a31d647bf95c"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  ButtonBox[
   RowBox[{"Graphs", " ", "and", " ", "Networks"}],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://reference.wolfram.com/language/guide/GraphsAndNetworks.html"]\
, None},
   ButtonNote->
    "http://reference.wolfram.com/language/guide/GraphsAndNetworks.html"], 
  TraditionalForm]],ExpressionUUID->"4927e86c-5121-4def-9e05-0857032de362"]], \
"Item",
 CellChangeTimes->{{3.7201952464257727`*^9, 3.720195270301086*^9}, {
  3.722965887732443*^9, 3.722965940353932*^9}, {3.738241547861313*^9, 
  3.738241557105301*^9}, {3.738241700981182*^9, 3.738241700990658*^9}, {
  3.738859443985547*^9, 
  3.738859453002788*^9}},ExpressionUUID->"25297b25-9340-4e04-8a22-\
ce5decf73d11"],

Cell[TextData[Cell[BoxData[
 FormBox[
  ButtonBox[
   RowBox[{"Discrete", " ", "Mathematics"}],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://reference.wolfram.com/language/guide/DiscreteMathematics.\
html"], None},
   ButtonNote->
    "http://reference.wolfram.com/language/guide/DiscreteMathematics.html"], 
  TraditionalForm]],ExpressionUUID->"533d3abf-1a81-418f-85a5-1a5faf733acf"]], \
"Item",
 CellChangeTimes->{{3.7201952464257727`*^9, 3.720195270301086*^9}, {
  3.722965887732443*^9, 3.722965940353932*^9}, {3.738241547861313*^9, 
  3.738241586300561*^9}, {3.738241724265006*^9, 3.7382417242729692`*^9}, {
  3.738859472109837*^9, 
  3.738859479425765*^9}},ExpressionUUID->"90512f9e-c709-463f-b449-\
50132f5cf0db"],

Cell[TextData[Cell[BoxData[
 FormBox[
  ButtonBox[
   RowBox[{"The", " ", "Combinatorica", " ", "Package"}],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://reference.wolfram.com/language/Combinatorica/guide/\
CombinatoricaPackage.html"], None},
   ButtonNote->
    "http://reference.wolfram.com/language/Combinatorica/guide/\
CombinatoricaPackage.html"], 
  TraditionalForm]],ExpressionUUID->"2912cf3d-0ca4-4cba-a43d-8144e1d521e6"]], \
"Item",
 CellChangeTimes->{
  3.720895538628941*^9, {3.722962094595066*^9, 3.722962097483286*^9}, {
   3.738214157104073*^9, 3.738214193642383*^9}, {3.73821434156697*^9, 
   3.7382143460320272`*^9}, {3.738224406342886*^9, 3.738224429579932*^9}, 
   3.738224469531695*^9, {3.738224558822651*^9, 3.738224568945505*^9}, 
   3.738224721315957*^9, {3.738225159511611*^9, 3.738225182210586*^9}, {
   3.73822622162683*^9, 3.7382263105708427`*^9}, {3.738229063997291*^9, 
   3.738229097665162*^9}, {3.738229272293706*^9, 3.738229272296014*^9}, {
   3.738232449471058*^9, 3.738232528431979*^9}, {3.738232654224279*^9, 
   3.738232654225277*^9}, {3.7382650130538797`*^9, 3.738265024481423*^9}, {
   3.7388594896092157`*^9, 
   3.738859499874107*^9}},ExpressionUUID->"7b160c44-59d1-42f8-a771-\
363c8d65b0d5"],

Cell[TextData[Cell[BoxData[
 FormBox[
  ButtonBox[
   RowBox[{"Graph", " ", "Construction", " ", "and", " ", "Representation"}],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://reference.wolfram.com/language/guide/\
GraphConstructionAndRepresentation.html"], None},
   ButtonNote->
    "http://reference.wolfram.com/language/guide/\
GraphConstructionAndRepresentation.html"], 
  TraditionalForm]],ExpressionUUID->"2a09b705-563e-4ae5-801b-dd67086dd826"]], \
"Item",
 CellChangeTimes->{{3.7201952464257727`*^9, 3.720195270301086*^9}, {
  3.722965887732443*^9, 3.722965940353932*^9}, {3.738241547861313*^9, 
  3.738241590805109*^9}, {3.738241669501821*^9, 3.738241679560863*^9}, {
  3.73885951347138*^9, 
  3.7388595233385983`*^9}},ExpressionUUID->"7ec76493-4dc8-4b6f-9e70-\
83971d055c99"],

Cell[TextData[Cell[BoxData[
 FormBox[
  ButtonBox[
   RowBox[{"Computation", " ", "on", " ", "Graphs"}],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://reference.wolfram.com/language/guide/ComputationOnGraphs.\
html"], None},
   ButtonNote->
    "http://reference.wolfram.com/language/guide/ComputationOnGraphs.html"], 
  TraditionalForm]],ExpressionUUID->"62dddb47-90bd-489d-b1a3-ba6dd8b9fcb4"]], \
"Item",
 CellChangeTimes->{{3.7201952464257727`*^9, 3.720195270301086*^9}, {
  3.722965887732443*^9, 3.722965940353932*^9}, {3.738241547861313*^9, 
  3.738241617407151*^9}, {3.738241650288088*^9, 3.7382416502952623`*^9}, {
  3.738264919503285*^9, 3.7382649199024076`*^9}, {3.738859531510703*^9, 
  3.738859538735067*^9}},ExpressionUUID->"81056d2d-4411-4ee6-8417-\
690dc9a1d104"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Footnote", "Section",
 CellChangeTimes->{{3.730633275100788*^9, 3.730633278831627*^9}, {
  3.738241404034759*^9, 
  3.738241404780869*^9}},ExpressionUUID->"5fb5e51f-459a-4cf3-b8da-\
a67de8abd009"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
   RowBox[{"WindowTitle", "\[Rule]", " ", "\"\<Graphs and Networks\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.720193794874587*^9, 3.720193827182127*^9}, 
   3.722963398803966*^9, {3.730638323026906*^9, 3.730638326938821*^9}, {
   3.7355685573630543`*^9, 3.7355685592810297`*^9}, {3.738226702888648*^9, 
   3.738226706013809*^9}, {3.738318608808999*^9, 3.738318611161829*^9}, {
   3.738504887075097*^9, 
   3.738504890976459*^9}},ExpressionUUID->"e3e131e8-71f8-473b-9600-\
c2e35b8f7bd6"]
}, Open  ]]
}, Open  ]],

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"721d7d0b-6eef-4e7d-8ff9-4e4a21760cfd"]
},
ScreenStyleEnvironment->"SlideShow",
WindowSize->{808, 701},
WindowMargins->{{Automatic, 9}, {-244, Automatic}},
WindowTitle->"Graphs and Networks",
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WSSBanner"], CellFrameMargins -> {{0, 8}, {10, 20}}, 
          CellFrameLabels -> {{None, None}, {None, None}}, FontFamily -> 
          "Source Sans Pro", FontSize -> 42, FontWeight -> "Regular", 
          FontSlant -> "Plain", FontVariations -> {"CapsType" -> "AllCaps"}, 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["WSSBanner", "SlideShow"], LineSpacing -> {1, 2}, 
          FontSize -> 42], 
         Cell[
          StyleData[
          "WSSBanner", "Slideshow Working", StyleDefinitions -> 
           StyleData["WSSBanner", "SlideShow"]]], 
         Cell[
          StyleData[
          "WSSBanner", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WSSBanner", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WSSBanner", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WSSBanner", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframULogo"], CellGroupingRules -> "GraphicsGrouping", 
          PageBreakWithin -> False, GeneratedCell -> True, CellAutoOverwrite -> 
          True, ShowCellLabel -> False, DefaultFormatType -> 
          DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
          FormatType -> StandardForm, ShowStringCharacters -> False, 
          FrontFaceColor -> GrayLevel[0], BackFaceColor -> GrayLevel[0], 
          FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
          Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
          StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
          FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData["WolframULogo", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
            0.2, 0.02 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Working", StyleDefinitions -> 
           StyleData["WolframULogo", "SlideShow"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], FontFamily -> "Source Sans Pro", FontSize -> 
             81, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.08 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 81], 
            Cell[
             StyleData[
             "Title", "Slideshow Working", StyleDefinitions -> 
              StyleData["Title", "SlideShow"]]], 
            Cell[
             StyleData[
             "Title", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Title", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], FontFamily -> "Source Sans Pro", FontSize -> 
             40, FontWeight -> "Light", FontSlant -> "Italic", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.25098039215686274`, 0.25098039215686274`, 
               0.25098039215686274`]], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {50, 12}}, 
             LineSpacing -> {1, 2}, FontSize -> 48], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subtitle", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subtitle", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]]}, Open]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 70, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Section", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               26, 0.06 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 40], 
            Cell[
             StyleData[
             "Section", "Slideshow Working", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], FontFamily -> "Source Sans Pro", 
             FontSize -> 40, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData["Subsection", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.04 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 32], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], FontFamily -> "Source Sans Pro", 
             FontSize -> 20, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.04 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 32], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsubsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]]}, Closed]]}, 
        Open]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Body Content", "Section", 
       CellChangeTimes -> {{3.727532504641029*^9, 3.727532505736285*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], LineSpacing -> {1, 3}, TabSpacings -> {2.5}, 
          CounterIncrements -> "Text", MenuSortingValue -> 1400, 
          MenuCommandKey -> "7", FontFamily -> "Source Sans Pro", FontSize -> 
          15, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["Text", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "Text", "Slideshow Working", StyleDefinitions -> 
           StyleData["Text", "SlideShow"]]], 
         Cell[
          StyleData[
          "Text", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Text", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeText"], LineSpacing -> {1, 3}, TabSpacings -> {2.5}, 
          CounterIncrements -> "CodeText", MenuSortingValue -> 1540, 
          FontColor -> GrayLevel[0.45]], 
         Cell[
          StyleData["CodeText", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          FontSize -> 18], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Working", StyleDefinitions -> 
           StyleData["CodeText", "SlideShow"]]], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "CodeText", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Note"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> True, LineSpacing -> {1, 3}, CounterIncrements -> 
          "Note", MenuSortingValue -> 8, FontFamily -> "Source Sans Pro", 
          FontSize -> 12, FontSlant -> "Italic", Background -> 
          GrayLevel[0.85]], 
         Cell[
          StyleData["Note", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> False, 
          HyphenationOptions -> {"HyphenationCharacter" -> "-"}, 
          ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
          StyleMenuListing -> None, FontSize -> 18], 
         Cell[
          StyleData[
          "Note", "Slideshow Working", StyleDefinitions -> 
           StyleData["Note"]]], 
         Cell[
          StyleData[
          "Note", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Note", "SlideShow"]]], 
         Cell[
          StyleData[
          "Note", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Note", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.42745098039215684`, 0.]]], 
         Cell[
          StyleData["Item", "SlideShow"], 
          CellMargins -> {{
            0.165 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 8, FontSize -> 22], 
         Cell[
          StyleData[
          "Item", "Slideshow Working", StyleDefinitions -> 
           StyleData["Item", "SlideShow"]]], 
         Cell[
          StyleData[
          "Item", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Item", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemParagraph"], CellMargins -> {{81, 10}, {4, 1}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "SubitemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          DefaultNewCellStyle -> "Item", MenuSortingValue -> 1600, FontFamily -> 
          Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 14, 
          FontColor -> Dynamic[
            FrontEnd`CurrentValue[{StyleHints, "ColorSet", "Text1"}], None]], 
         
         Cell[
          StyleData["ItemParagraph", "SlideShow"], ShowGroupOpener -> False, 
          CellMargins -> {{
            0.18 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 2}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["ItemParagraph", "Printout"], 
          CellMargins -> {{65, Inherited}, {Inherited, 0.5 Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subitem"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.592156862745098, 0.10196078431372549`]]], 
         Cell[
          StyleData["Subitem", "SlideShow"], 
          CellMargins -> {{
            0.185 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 8, FontSize -> 22], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subitem", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subitem", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemParagraph"], CellMargins -> {{105, 12}, {4, 1}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemParagraph", "Backspace" -> 
            "ItemParagraph", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subitem", 
          MenuSortingValue -> 1610, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 13.5,
           FontColor -> Dynamic[
            CurrentValue[{StyleHints, "ColorSet", "Text1"}]]], 
         Cell[
          StyleData["SubitemParagraph", "SlideShow"], 
          CellMargins -> {{
            0.2 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 2}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemParagraph", "Printout"], 
          CellMargins -> {{92, Inherited}, {Inherited, 0.1 Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{81, 10}, {4, 8}}, ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "SubitemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "ItemNumbered", 
          CounterAssignments -> {{"SubitemNumbered", 0}, {
            "SubsubitemNumbered", 0}}, MenuSortingValue -> 1630, FontFamily -> 
          "Source Sans Pro", FontSize -> 15], 
         Cell[
          StyleData["ItemNumbered", "SlideShow"], 
          CellMargins -> {{
            0.17 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 6, FontSize -> 22], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], ".", 
              CounterBox["SubitemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{105, 12}, {4, 4}}, ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemNumbered", "Backspace" -> 
            "ItemNumbered", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", 
          CounterIncrements -> "SubitemNumbered", 
          CounterAssignments -> {{"SubsubitemNumbered", 0}}, MenuSortingValue -> 
          1640, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 
          13.5], 
         Cell[
          StyleData["SubitemNumbered", "SlideShow"], 
          CellMargins -> {{
            0.195 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 6, FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemNumbered", "Printout"], 
          CellMargins -> {{92, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Graphics"], CellMargins -> {{27, Inherited}, {15, 15}}, 
          CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False, 
          GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
          False, DefaultFormatType -> DefaultOutputFormatType, ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Graphics"], 
          AutoStyleOptions -> {"HighlightMisspelledWords" -> False}, 
          LanguageCategory -> "NaturalLanguage", FormatType -> StandardForm, 
          ShowStringCharacters -> False, NumberMarks -> False, 
          CounterIncrements -> "Graphics", 
          ImageMargins -> {{43, Inherited}, {Inherited, 0}}, Arrowheads -> 
          0.04, Dashing -> None, CapForm -> "Square", 
          JoinForm -> {"Miter", 3.25}, LineColor -> GrayLevel[0], LineOpacity -> 
          1, EdgeColor -> GrayLevel[0], EdgeOpacity -> 1, EdgeThickness -> 
          Medium, EdgeDashing -> None, EdgeCapForm -> "Square", 
          EdgeJoinForm -> {"Miter", 3.25}, FrontFaceColor -> GrayLevel[0], 
          BackFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, GraphicsColor -> 
          GrayLevel[0], PointSize -> Absolute[3], Thickness -> Medium, 
          Opacity -> 1, DrawEdges -> False, StyleMenuListing -> None, 
          FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Plain", 
          FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData["Graphics", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {12, 12}}], 
         Cell[
          StyleData[
          "Graphics", "Slideshow Working", StyleDefinitions -> 
           StyleData["Graphics", "SlideShow"]]], 
         Cell[
          StyleData[
          "Graphics", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Graphics", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Graphics", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Graphics", "Slideshow Working"]]]}, Closed]], 
      Cell[
       StyleData["Hyperlink"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["KeyEvent"], CellFrame -> {{1, 1}, {1, 1}}, 
          CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> 
          GrayLevel[0.8], FontFamily -> "Source Sans Pro", FontColor -> 
          GrayLevel[0.360784], Background -> GrayLevel[0.964706]], 
         Cell[
          StyleData["KeyEvent", "SlideShow"]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Working", StyleDefinitions -> 
           StyleData["KeyEvent", "SlideShow"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{66, 10}, {5, 8}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          FontSize -> 13], 
         Cell[
          StyleData["Input", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Input", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "Input", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Input", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExperimentalInput", StyleDefinitions -> StyleData["Input"]], 
          CellFrame -> True, CellMargins -> {{66, 10}, {5, 8}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          CellFrameColor -> 
          RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               InterpretationBox[
                Cell[
                 BoxData[
                  RotationBox[
                  "Experimental", BoxRotation -> 1.5707963267948966`]], 
                 "Text", LineColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FrontFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 BackFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 GraphicsColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FontSize -> 10, FontColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
                TextCell[
                 Rotate["Experimental", 90 Degree], "Text", 10, 
                 RGBColorRGBColor[
                 1., 0.592156862745098, 0.10196078431372549`]]]]], None}, {
            None, None}}, FontSize -> 13], 
         Cell[
          StyleData["ExperimentalInput", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{66, 10}, {7, 8}}, FontSize -> 
          13], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Working", StyleDefinitions -> 
           StyleData["InputOnly", "SlideShow"]]], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "InputOnly", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"]], 
         Cell[
          StyleData["Code", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Code", "Slideshow Working", StyleDefinitions -> 
           StyleData["Code", "SlideShow"]]], 
         Cell[
          StyleData[
          "Code", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Code", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{66, 10}, {12, 5}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {15, 8}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Output", "Slideshow Working", StyleDefinitions -> 
           StyleData["Output", "SlideShow"]]], 
         Cell[
          StyleData[
          "Output", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Output", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]]}, Closed]]}, Open]]}, 
  WindowMargins -> {{316, Automatic}, {-200, Automatic}}, Visible -> False, 
  FrontEndVersion -> "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[613, 23, 136, 2, 5, "SlideShowNavigationBar",ExpressionUUID->"60bc568f-b20e-4b9a-b496-b94f48bda20e",
   CellTags->"SlideShowHeader"],
  Cell[259608, 4312, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"fc96e66c-467d-4859-b563-1aa5d0e6d5a3",
   CellTags->"SlideShowHeader"],
  Cell[270727, 4547, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"3cd59e09-9b3a-4620-a825-6c649084f5e5",
   CellTags->"SlideShowHeader"],
  Cell[290294, 5024, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"d3adc702-5983-440a-988a-42b97138b914",
   CellTags->"SlideShowHeader"],
  Cell[300838, 5286, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"b1810bed-f37e-4a94-b24c-c65f45457d7f",
   CellTags->"SlideShowHeader"],
  Cell[333531, 6054, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"f8e44585-ecbc-4956-ab30-e47d9f1a6d54",
   CellTags->"SlideShowHeader"],
  Cell[344383, 6320, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"f4da83e0-a659-43c6-acd7-587db26477fb",
   CellTags->"SlideShowHeader"],
  Cell[349888, 6463, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"721d7d0b-6eef-4e7d-8ff9-4e4a21760cfd",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 381994, 7183}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[613, 23, 136, 2, 5, "SlideShowNavigationBar",ExpressionUUID->"60bc568f-b20e-4b9a-b496-b94f48bda20e",
 CellTags->"SlideShowHeader"],
Cell[752, 27, 16465, 277, 180, "WSSBanner",ExpressionUUID->"3bb2d191-b234-4a2e-a519-8cc81e1dbc97"],
Cell[CellGroupData[{
Cell[17242, 308, 499, 8, 276, "Title",ExpressionUUID->"a2952f0e-0dad-4d25-91aa-a3ff0c5ccc18"],
Cell[17744, 318, 754, 12, 252, "Subtitle",ExpressionUUID->"b5613cd2-313e-4e22-8c7d-1493cf59cc5f"],
Cell[18501, 332, 225334, 3705, 597, "Text",ExpressionUUID->"ae48f60e-1e25-4ecb-b345-39e7e3fea692"],
Cell[CellGroupData[{
Cell[243860, 4041, 712, 12, 93, "Subtitle",ExpressionUUID->"2984ddec-fe8d-47f9-86aa-22fb65ac2cb1"],
Cell[244575, 4055, 14972, 250, 71, "WolframULogo",ExpressionUUID->"6449e467-a376-40cc-9cce-4930ea4aeb69"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[259608, 4312, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"fc96e66c-467d-4859-b563-1aa5d0e6d5a3",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[259755, 4318, 531, 8, 129, "Section",ExpressionUUID->"de85c62e-50a3-40fb-b1af-0adef5f1b80d"],
Cell[260289, 4328, 1231, 19, 117, "Text",ExpressionUUID->"229cd3e1-1cdd-4f1c-87c3-297c2a7a6238"],
Cell[CellGroupData[{
Cell[261545, 4351, 546, 10, 79, "Item",ExpressionUUID->"dadd3fd8-b2b4-412d-bb83-883aa9c899d2"],
Cell[262094, 4363, 679, 12, 109, "Item",ExpressionUUID->"a1124c77-0b50-4d4f-bd72-7a242c86de2a"],
Cell[262776, 4377, 499, 9, 79, "Item",ExpressionUUID->"b8e3381e-53d7-445a-bd85-b3f1338fefee"],
Cell[263278, 4388, 580, 11, 79, "Item",ExpressionUUID->"9a945f53-b6d0-405b-9efd-05bb8124d25a"],
Cell[263861, 4401, 513, 10, 79, "Item",ExpressionUUID->"6b9cbff1-61e0-4637-b0a1-3986e9260991"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264411, 4416, 616, 9, 81, "Subsection",ExpressionUUID->"992dbfd4-ea09-469f-8d63-1bca5a8a739e"],
Cell[265030, 4427, 726, 12, 83, "Text",ExpressionUUID->"c01cbaf6-a412-4141-be32-fa845ab24dec"],
Cell[265759, 4441, 462, 7, 49, "Item",ExpressionUUID->"12b57d41-b822-4874-bb83-125818a14b78"],
Cell[266224, 4450, 675, 11, 82, "Input",ExpressionUUID->"d444670f-a667-4f39-9c81-7e8142cff854"],
Cell[266902, 4463, 503, 8, 49, "Item",ExpressionUUID->"c27ca05f-6cf5-45a2-90b7-2f72930dd02e"],
Cell[267408, 4473, 494, 9, 82, "Input",ExpressionUUID->"9bc6843a-a06e-48f6-9997-1a1392eff5a4"],
Cell[267905, 4484, 513, 8, 49, "Item",ExpressionUUID->"c494fa5f-df4a-490a-8bd1-369951b95305"],
Cell[268421, 4494, 305, 6, 82, "Input",ExpressionUUID->"906e458d-611d-42cf-8f24-155a0bec19b8"],
Cell[268729, 4502, 489, 8, 49, "Item",ExpressionUUID->"ed9bab79-1540-48eb-aec9-6c6afb529794"],
Cell[269221, 4512, 604, 10, 82, "Input",ExpressionUUID->"8a7db15a-27b6-44d1-bef5-26f61e81f1bc"],
Cell[269828, 4524, 541, 9, 49, "Item",ExpressionUUID->"8eb1c4de-d10d-4462-a671-62bd7492f69c"],
Cell[270372, 4535, 294, 5, 82, "Input",ExpressionUUID->"83446503-af60-4cd7-9076-cb6efa2ad628"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[270727, 4547, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"3cd59e09-9b3a-4620-a825-6c649084f5e5",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[270874, 4553, 401, 6, 129, "Section",ExpressionUUID->"97a21cea-633f-443c-91b9-5eec8711011e"],
Cell[CellGroupData[{
Cell[271300, 4563, 498, 8, 81, "Subsection",ExpressionUUID->"2a3342bd-7c4a-4e93-ba4a-b94b41e182a9"],
Cell[271801, 4573, 647, 11, 49, "Input",ExpressionUUID->"0dcdd701-043c-4df0-a260-20d5b8b0da2a"],
Cell[272451, 4586, 864, 16, 49, "Text",ExpressionUUID->"fcd649db-3190-417f-b9e6-ec1923208960"],
Cell[273318, 4604, 447, 10, 49, "Input",ExpressionUUID->"949b760e-4c6c-4a5d-a6e8-a843e74c2204"],
Cell[273768, 4616, 479, 11, 49, "Input",ExpressionUUID->"b7e6df8a-f716-41ad-a6a2-1f359c761e80"],
Cell[274250, 4629, 511, 13, 49, "Input",ExpressionUUID->"b888a4d5-eae7-4586-8793-a2d97a65531c"],
Cell[274764, 4644, 541, 15, 82, "Input",ExpressionUUID->"c753557c-9aca-4ebf-b61c-660f41ec0c86"],
Cell[275308, 4661, 1084, 28, 178, "Input",ExpressionUUID->"eb53c76d-a075-4a84-8cda-8ad3abacc593"],
Cell[CellGroupData[{
Cell[276417, 4693, 832, 20, 83, "Item",ExpressionUUID->"0d12576c-be3e-4f10-bce1-4adbce3143ac"],
Cell[277252, 4715, 1151, 29, 151, "Item",ExpressionUUID->"67bb0621-11b7-48e6-a403-d7789c567f00"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[278452, 4750, 596, 9, 81, "Subsection",ExpressionUUID->"14e325b2-b729-4411-a997-964ab35b41b5"],
Cell[279051, 4761, 242, 5, 49, "Input",ExpressionUUID->"88ac651a-a66d-4d87-bc6d-c5c34cf89c67"],
Cell[279296, 4768, 846, 12, 49, "Text",ExpressionUUID->"57cfa35d-3c94-4efa-94fa-9737a9f607f3"],
Cell[280145, 4782, 257, 5, 49, "Input",ExpressionUUID->"66c14c75-e811-44f3-a11d-c71de04b22e6"],
Cell[280405, 4789, 399, 8, 49, "Input",ExpressionUUID->"b1da08cc-bb2d-41d3-9686-ae91594b4fe7"],
Cell[280807, 4799, 650, 18, 114, "Input",ExpressionUUID->"1fa82b94-67f3-4069-a9c3-95f4ddc0e824"],
Cell[281460, 4819, 144, 2, 49, "Input",ExpressionUUID->"fa2eb196-df32-4501-b6b9-90a651705c8e"],
Cell[281607, 4823, 6930, 150, 420, "Input",ExpressionUUID->"005f5dae-4c7d-483e-af97-8960b044c251"],
Cell[CellGroupData[{
Cell[288562, 4977, 880, 19, 83, "Item",ExpressionUUID->"5c1f4fc1-c8d4-448c-8741-c36ee4cb06dc"],
Cell[289445, 4998, 776, 18, 83, "Item",ExpressionUUID->"5b494336-5c30-41bb-b005-27b2ab0217af"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[290294, 5024, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"d3adc702-5983-440a-988a-42b97138b914",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[290441, 5030, 522, 8, 129, "Section",ExpressionUUID->"10f45b43-a8aa-4f9e-ac02-355317364bf3"],
Cell[CellGroupData[{
Cell[290988, 5042, 409, 6, 81, "Subsection",ExpressionUUID->"7161b120-002f-4367-9dd6-26a6ded833d7"],
Cell[291400, 5050, 248, 5, 49, "Input",ExpressionUUID->"2c9fcc09-9374-4813-9392-87ac5e36379a"],
Cell[291651, 5057, 959, 17, 83, "Text",ExpressionUUID->"9ed405dc-3160-4243-9fd1-553f987f7f10"],
Cell[292613, 5076, 429, 9, 82, "Input",ExpressionUUID->"db6da7ea-771c-41d0-a1ae-fa068a0f77c3"],
Cell[293045, 5087, 1196, 25, 87, "Item",ExpressionUUID->"4c10bc3d-4adb-4c73-b4f9-50caa2006dcb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294278, 5117, 452, 7, 81, "Subsection",ExpressionUUID->"c9d2a4f0-d113-44c4-b947-ae0c35b64ab5"],
Cell[294733, 5126, 419, 8, 49, "Input",ExpressionUUID->"9a05c29d-a1d3-49b5-a9d5-fd5d11d00dd9"],
Cell[295155, 5136, 1082, 21, 83, "Text",ExpressionUUID->"2cf8d8d1-5132-46b5-a4a7-2415ee3dc036"],
Cell[296240, 5159, 365, 9, 49, "Input",ExpressionUUID->"8ddce6fd-4f1c-4f17-9c53-b091e5a2dd39"],
Cell[296608, 5170, 527, 13, 82, "Input",ExpressionUUID->"5187a819-6d60-4a82-bd41-bd4a614570e8"],
Cell[297138, 5185, 723, 21, 114, "Input",ExpressionUUID->"652bf430-65d8-4cb4-937a-699f69eeb863"],
Cell[297864, 5208, 356, 9, 82, "Input",ExpressionUUID->"70518c9c-ed27-4791-a963-dbdebe562c60"],
Cell[298223, 5219, 537, 15, 82, "Input",ExpressionUUID->"6f923c50-a3ab-43da-84bf-d19660915f39"],
Cell[CellGroupData[{
Cell[298785, 5238, 968, 19, 83, "Item",ExpressionUUID->"22479585-477c-463d-a02b-ee30b6fa6255"],
Cell[299756, 5259, 1009, 19, 83, "Item",ExpressionUUID->"4b41d383-ace8-440e-ad5c-59d3e0fa119c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[300838, 5286, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"b1810bed-f37e-4a94-b24c-c65f45457d7f",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[300985, 5292, 364, 6, 129, "Section",ExpressionUUID->"14b4486d-fffe-4ca3-ba0e-aad0ce25a99d"],
Cell[CellGroupData[{
Cell[301374, 5302, 457, 7, 81, "Subsection",ExpressionUUID->"a3958efa-2790-454b-a306-bfc49e114217"],
Cell[301834, 5311, 226, 5, 49, "Input",ExpressionUUID->"defa5eda-b4f0-4736-bac1-1cec1610e8d1"],
Cell[302063, 5318, 1305, 26, 83, "Text",ExpressionUUID->"20a97c24-a133-4122-8d17-786d1445701e"],
Cell[303371, 5346, 244, 6, 49, "Input",ExpressionUUID->"abcdfb62-1e8c-4ee4-8469-a378c6b4dd36"],
Cell[303618, 5354, 337, 8, 82, "Input",ExpressionUUID->"f5278d89-a5f5-438d-b53e-09208bd206c7"],
Cell[303958, 5364, 4817, 117, 690, "Input",ExpressionUUID->"dd53a724-c3e1-424f-bd81-9e5eac0e139b"],
Cell[308778, 5483, 504, 13, 82, "Input",ExpressionUUID->"5216e6b4-b3ad-42ea-ae27-0d3b7f28e725"],
Cell[CellGroupData[{
Cell[309307, 5500, 1259, 25, 147, "Item",ExpressionUUID->"a5a6d5ac-cc83-49d1-a3d3-6c31e6271edb"],
Cell[310569, 5527, 991, 22, 83, "Item",ExpressionUUID->"f1c9bab1-33a8-440d-b4da-79bd9fb73229"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[311609, 5555, 505, 8, 81, "Subsection",ExpressionUUID->"87dd82bd-d84d-44bd-a07a-e9683770b08f"],
Cell[312117, 5565, 229, 5, 49, "Input",ExpressionUUID->"a74b32ba-7c05-48f4-9170-a6f6830dcfef"],
Cell[312349, 5572, 1440, 28, 117, "Text",ExpressionUUID->"9b9a4ead-489d-4c52-9442-d528a4e958ef"],
Cell[313792, 5602, 17059, 385, 276, "Input",ExpressionUUID->"4520c848-8a94-4197-804e-b641a5b3cd55"],
Cell[330854, 5989, 265, 6, 49, "Input",ExpressionUUID->"5012e85f-ab8b-4111-8042-211166b5df27"],
Cell[331122, 5997, 295, 7, 82, "Input",ExpressionUUID->"57fe1eca-0146-4d7a-827f-ed66ff40e0c6"],
Cell[CellGroupData[{
Cell[331442, 6008, 1162, 21, 143, "Item",ExpressionUUID->"8b680d09-581f-4be0-a7be-7c0094c585dd"],
Cell[332607, 6031, 851, 15, 79, "Item",ExpressionUUID->"c6d87c0b-62e9-4013-b01a-6f6181dee2d4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[333531, 6054, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"f8e44585-ecbc-4956-ab30-e47d9f1a6d54",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[333678, 6060, 416, 6, 129, "Section",ExpressionUUID->"938eb87c-bd5e-4a72-b1dd-64b3521ebd70"],
Cell[CellGroupData[{
Cell[334119, 6070, 549, 8, 81, "Subsection",ExpressionUUID->"58fb0701-c238-4929-91cf-c4cf20279d19"],
Cell[334671, 6080, 283, 5, 49, "Input",ExpressionUUID->"79377ab4-628b-441c-a2ab-58ab58509cea"],
Cell[334957, 6087, 1044, 19, 49, "Text",ExpressionUUID->"e90adac0-3af7-45a4-a61a-dbb09aed7f0b"],
Cell[336004, 6108, 311, 8, 49, "Input",ExpressionUUID->"d59d9ea2-7398-4740-8da9-793e188ef55a"],
Cell[336318, 6118, 219, 5, 49, "Input",ExpressionUUID->"4f926d0c-b8ea-42ee-a3b4-0a5828e162e0"],
Cell[336540, 6125, 282, 7, 49, "Input",ExpressionUUID->"caabad0d-4335-4244-b37b-c3ab6f124b58"],
Cell[336825, 6134, 306, 8, 49, "Input",ExpressionUUID->"45712912-e1df-4eb2-89fa-944f8a192e95"],
Cell[337134, 6144, 291, 7, 49, "Input",ExpressionUUID->"95722d09-f206-442a-aeb8-d107f2716fd0"],
Cell[337428, 6153, 284, 7, 49, "Input",ExpressionUUID->"04301340-38b4-4786-9655-a612399b9e2a"],
Cell[337715, 6162, 1225, 22, 83, "Item",ExpressionUUID->"a642dce6-da9e-403b-98a0-cf750d300881"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338977, 6189, 608, 9, 81, "Subsection",ExpressionUUID->"23c017ff-fe1d-450c-a8dd-562054c2eb3c"],
Cell[339588, 6200, 200, 4, 49, "Input",ExpressionUUID->"a6fd23c0-51ad-41b6-9577-ac3ce17adf30"],
Cell[339791, 6206, 1132, 19, 83, "Text",ExpressionUUID->"0c071ec2-bb2c-4f37-ab86-9f944bc18de0"],
Cell[340926, 6227, 313, 8, 82, "Input",ExpressionUUID->"c32f21d6-9aaa-498b-8a4a-8e1a29c29745"],
Cell[341242, 6237, 411, 11, 82, "Input",ExpressionUUID->"90e7ca60-274d-4d6e-bfff-7f2f048bec67"],
Cell[341656, 6250, 221, 5, 49, "Input",ExpressionUUID->"3cbe275b-8794-4adc-9fc0-154c82ce8472"],
Cell[341880, 6257, 303, 8, 49, "Input",ExpressionUUID->"b29cb967-673c-469b-a66f-d8baea8b230b"],
Cell[342186, 6267, 465, 12, 114, "Input",ExpressionUUID->"133911c2-9f3f-4223-8309-2c85cd8f9001"],
Cell[342654, 6281, 370, 8, 82, "Input",ExpressionUUID->"740bf635-2563-48ed-9725-22eaf519fe6a"],
Cell[343027, 6291, 1295, 22, 83, "Item",ExpressionUUID->"d65541d9-4e1a-4ed2-b617-b233ee2bc7c1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[344383, 6320, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"f4da83e0-a659-43c6-acd7-587db26477fb",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[344530, 6326, 131, 3, 129, "Section",ExpressionUUID->"4f46b79f-c929-4791-93b7-a31d647bf95c"],
Cell[CellGroupData[{
Cell[344686, 6333, 736, 17, 51, "Item",ExpressionUUID->"25297b25-9340-4e04-8a22-ce5decf73d11"],
Cell[345425, 6352, 735, 17, 51, "Item",ExpressionUUID->"90512f9e-c709-463f-b449-50132f5cf0db"],
Cell[346163, 6371, 1247, 25, 51, "Item",ExpressionUUID->"7b160c44-59d1-42f8-a771-363c8d65b0d5"],
Cell[347413, 6398, 799, 18, 51, "Item",ExpressionUUID->"7ec76493-4dc8-4b6f-9e70-83971d055c99"],
Cell[348215, 6418, 792, 17, 51, "Item",ExpressionUUID->"81056d2d-4411-4ee6-8417-690dc9a1d104"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[349056, 6441, 202, 4, 129, "Section",ExpressionUUID->"5fb5e51f-459a-4cf3-b8da-a67de8abd009"],
Cell[349261, 6447, 600, 12, 82, "Input",ExpressionUUID->"e3e131e8-71f8-473b-9600-c2e35b8f7bd6"]
}, Open  ]]
}, Open  ]],
Cell[349888, 6463, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"721d7d0b-6eef-4e7d-8ff9-4e4a21760cfd",
 CellTags->"SlideShowHeader"]
}
]
*)

